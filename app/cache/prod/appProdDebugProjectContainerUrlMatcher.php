<?php

use Symfony\Component\Routing\Exception\MethodNotAllowedException;
use Symfony\Component\Routing\Exception\ResourceNotFoundException;
use Symfony\Component\Routing\RequestContext;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appProdDebugProjectContainerUrlMatcher extends Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher
{
    public function __construct(RequestContext $context)
    {
        $this->context = $context;
    }

    public function match($rawPathinfo)
    {
        $allow = array();
        $pathinfo = rawurldecode($rawPathinfo);
        $context = $this->context;
        $request = $this->request ?: $this->createRequest($pathinfo);

        // fr__RG__gestion_infopatientcancercol_search
        if ('/admin/gestion/depistage-cancer-col/search' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_infopatientcancercol_search;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_infopatientcancercol_search',);
        }
        not_fr__RG__gestion_infopatientcancercol_search:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_infopatientcancercol_search
            if ('/en/admin/gestion/depistage-cancer-col/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_infopatientcancercol_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_infopatientcancercol_search',);
            }
            not_en__RG__gestion_infopatientcancercol_search:

            // es__RG__gestion_infopatientcancercol_search
            if ('/es/admin/gestion/depistage-cancer-col/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_infopatientcancercol_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_infopatientcancercol_search',);
            }
            not_es__RG__gestion_infopatientcancercol_search:

        }

        // fr__RG__gestion_infopatientcancercol_index
        if (0 === strpos($pathinfo, '/admin/gestion/depistage-cancer-col') && preg_match('#^/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_infopatientcancercol_index;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_infopatientcancercol_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::indexAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_infopatientcancercol_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_infopatientcancercol_index
            if (0 === strpos($pathinfo, '/en/admin/gestion/depistage-cancer-col') && preg_match('#^/en/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_infopatientcancercol_index;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_infopatientcancercol_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::indexAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_infopatientcancercol_index:

            // es__RG__gestion_infopatientcancercol_index
            if (0 === strpos($pathinfo, '/es/admin/gestion/depistage-cancer-col') && preg_match('#^/es/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_infopatientcancercol_index;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_infopatientcancercol_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::indexAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_infopatientcancercol_index:

        }

        // fr__RG__gestion_infopatientcancercol_index_index
        if ('/admin/gestion/depistage-cancer-col' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_infopatientcancercol_index_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_infopatientcancercol_index_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_infopatientcancercol_index_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_infopatientcancercol_index_index',);
        }
        not_fr__RG__gestion_infopatientcancercol_index_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_infopatientcancercol_index_index
            if ('/en/admin/gestion/depistage-cancer-col' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_infopatientcancercol_index_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_infopatientcancercol_index_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_infopatientcancercol_index_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_infopatientcancercol_index_index',);
            }
            not_en__RG__gestion_infopatientcancercol_index_index:

            // es__RG__gestion_infopatientcancercol_index_index
            if ('/es/admin/gestion/depistage-cancer-col' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_infopatientcancercol_index_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_infopatientcancercol_index_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_infopatientcancercol_index_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_infopatientcancercol_index_index',);
            }
            not_es__RG__gestion_infopatientcancercol_index_index:

        }

        // fr__RG__gestion_infopatientcancercol_new
        if ('/admin/gestion/depistage-cancer-col/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_infopatientcancercol_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_infopatientcancercol_new',);
        }
        not_fr__RG__gestion_infopatientcancercol_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_infopatientcancercol_new
            if ('/en/admin/gestion/depistage-cancer-col/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_infopatientcancercol_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_infopatientcancercol_new',);
            }
            not_en__RG__gestion_infopatientcancercol_new:

            // es__RG__gestion_infopatientcancercol_new
            if ('/es/admin/gestion/depistage-cancer-col/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_infopatientcancercol_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_infopatientcancercol_new',);
            }
            not_es__RG__gestion_infopatientcancercol_new:

        }

        // fr__RG__gestion_infoatientcancercol_new_patient
        if (0 === strpos($pathinfo, '/admin/gestion/depistage-cancer-col') && preg_match('#^/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_infoatientcancercol_new_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_infoatientcancercol_new_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::newAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_infoatientcancercol_new_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_infoatientcancercol_new_patient
            if (0 === strpos($pathinfo, '/en/admin/gestion/depistage-cancer-col') && preg_match('#^/en/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_infoatientcancercol_new_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_infoatientcancercol_new_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::newAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_infoatientcancercol_new_patient:

            // es__RG__gestion_infoatientcancercol_new_patient
            if (0 === strpos($pathinfo, '/es/admin/gestion/depistage-cancer-col') && preg_match('#^/es/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_infoatientcancercol_new_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_infoatientcancercol_new_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::newAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_infoatientcancercol_new_patient:

        }

        // fr__RG__gestion_infopatientcancercol_show
        if (0 === strpos($pathinfo, '/admin/gestion/depistage-cancer-col') && preg_match('#^/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_infopatientcancercol_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_infopatientcancercol_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_infopatientcancercol_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_infopatientcancercol_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/depistage-cancer-col') && preg_match('#^/en/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_infopatientcancercol_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_infopatientcancercol_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_infopatientcancercol_show:

            // es__RG__gestion_infopatientcancercol_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/depistage-cancer-col') && preg_match('#^/es/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_infopatientcancercol_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_infopatientcancercol_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_infopatientcancercol_show:

        }

        // fr__RG__gestion_infopatientcancercol_edit
        if (0 === strpos($pathinfo, '/admin/gestion/depistage-cancer-col') && preg_match('#^/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_infopatientcancercol_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_infopatientcancercol_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_infopatientcancercol_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_infopatientcancercol_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/depistage-cancer-col') && preg_match('#^/en/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_infopatientcancercol_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_infopatientcancercol_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_infopatientcancercol_edit:

            // es__RG__gestion_infopatientcancercol_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/depistage-cancer-col') && preg_match('#^/es/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_infopatientcancercol_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_infopatientcancercol_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_infopatientcancercol_edit:

        }

        // fr__RG__gestion_infopatientcancercol_delete
        if (0 === strpos($pathinfo, '/admin/gestion/depistage-cancer-col') && preg_match('#^/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_infopatientcancercol_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_infopatientcancercol_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_infopatientcancercol_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_infopatientcancercol_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/depistage-cancer-col') && preg_match('#^/en/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_infopatientcancercol_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_infopatientcancercol_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_infopatientcancercol_delete:

            // es__RG__gestion_infopatientcancercol_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/depistage-cancer-col') && preg_match('#^/es/admin/gestion/depistage\\-cancer\\-col/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_infopatientcancercol_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_infopatientcancercol_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfoPatientCancerColController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_infopatientcancercol_delete:

        }

        // fr__RG__gestion_fichedepistagecancer_search
        if ('/admin/gestion/depistage-cancer/search' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fichedepistagecancer_search;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_fichedepistagecancer_search',);
        }
        not_fr__RG__gestion_fichedepistagecancer_search:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichedepistagecancer_search
            if ('/en/admin/gestion/depistage-cancer/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fichedepistagecancer_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_fichedepistagecancer_search',);
            }
            not_en__RG__gestion_fichedepistagecancer_search:

            // es__RG__gestion_fichedepistagecancer_search
            if ('/es/admin/gestion/depistage-cancer/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fichedepistagecancer_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_fichedepistagecancer_search',);
            }
            not_es__RG__gestion_fichedepistagecancer_search:

        }

        // fr__RG__gestion_fichedepistagecancer_index
        if (0 === strpos($pathinfo, '/admin/gestion/depistage-cancer') && preg_match('#^/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fichedepistagecancer_index;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fichedepistagecancer_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::indexAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fichedepistagecancer_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichedepistagecancer_index
            if (0 === strpos($pathinfo, '/en/admin/gestion/depistage-cancer') && preg_match('#^/en/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fichedepistagecancer_index;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fichedepistagecancer_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::indexAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fichedepistagecancer_index:

            // es__RG__gestion_fichedepistagecancer_index
            if (0 === strpos($pathinfo, '/es/admin/gestion/depistage-cancer') && preg_match('#^/es/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fichedepistagecancer_index;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fichedepistagecancer_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::indexAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fichedepistagecancer_index:

        }

        // fr__RG__gestion_fichedepistagecancer_index_index
        if ('/admin/gestion/depistage-cancer' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_fichedepistagecancer_index_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_fichedepistagecancer_index_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fichedepistagecancer_index_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_fichedepistagecancer_index_index',);
        }
        not_fr__RG__gestion_fichedepistagecancer_index_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichedepistagecancer_index_index
            if ('/en/admin/gestion/depistage-cancer' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_fichedepistagecancer_index_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_fichedepistagecancer_index_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fichedepistagecancer_index_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_fichedepistagecancer_index_index',);
            }
            not_en__RG__gestion_fichedepistagecancer_index_index:

            // es__RG__gestion_fichedepistagecancer_index_index
            if ('/es/admin/gestion/depistage-cancer' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_fichedepistagecancer_index_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_fichedepistagecancer_index_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fichedepistagecancer_index_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_fichedepistagecancer_index_index',);
            }
            not_es__RG__gestion_fichedepistagecancer_index_index:

        }

        // fr__RG__gestion_fichedepistagecancer_new
        if ('/admin/gestion/depistage-cancer/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fichedepistagecancer_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_fichedepistagecancer_new',);
        }
        not_fr__RG__gestion_fichedepistagecancer_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichedepistagecancer_new
            if ('/en/admin/gestion/depistage-cancer/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fichedepistagecancer_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_fichedepistagecancer_new',);
            }
            not_en__RG__gestion_fichedepistagecancer_new:

            // es__RG__gestion_fichedepistagecancer_new
            if ('/es/admin/gestion/depistage-cancer/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fichedepistagecancer_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_fichedepistagecancer_new',);
            }
            not_es__RG__gestion_fichedepistagecancer_new:

        }

        // fr__RG__gestion_fichedepistagecancer_new_patient
        if (0 === strpos($pathinfo, '/admin/gestion/depistage-cancer') && preg_match('#^/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fichedepistagecancer_new_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fichedepistagecancer_new_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::newAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fichedepistagecancer_new_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichedepistagecancer_new_patient
            if (0 === strpos($pathinfo, '/en/admin/gestion/depistage-cancer') && preg_match('#^/en/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fichedepistagecancer_new_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fichedepistagecancer_new_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::newAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fichedepistagecancer_new_patient:

            // es__RG__gestion_fichedepistagecancer_new_patient
            if (0 === strpos($pathinfo, '/es/admin/gestion/depistage-cancer') && preg_match('#^/es/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fichedepistagecancer_new_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fichedepistagecancer_new_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::newAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fichedepistagecancer_new_patient:

        }

        // fr__RG__gestion_fichedepistagecancer_show
        if (0 === strpos($pathinfo, '/admin/gestion/depistage-cancer') && preg_match('#^/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_fichedepistagecancer_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fichedepistagecancer_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fichedepistagecancer_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichedepistagecancer_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/depistage-cancer') && preg_match('#^/en/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_fichedepistagecancer_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fichedepistagecancer_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fichedepistagecancer_show:

            // es__RG__gestion_fichedepistagecancer_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/depistage-cancer') && preg_match('#^/es/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_fichedepistagecancer_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fichedepistagecancer_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fichedepistagecancer_show:

        }

        // fr__RG__gestion_fichedepistagecancer_edit
        if (0 === strpos($pathinfo, '/admin/gestion/depistage-cancer') && preg_match('#^/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fichedepistagecancer_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fichedepistagecancer_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fichedepistagecancer_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichedepistagecancer_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/depistage-cancer') && preg_match('#^/en/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fichedepistagecancer_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fichedepistagecancer_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fichedepistagecancer_edit:

            // es__RG__gestion_fichedepistagecancer_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/depistage-cancer') && preg_match('#^/es/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fichedepistagecancer_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fichedepistagecancer_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fichedepistagecancer_edit:

        }

        // fr__RG__gestion_fichedepistagecancer_delete
        if (0 === strpos($pathinfo, '/admin/gestion/depistage-cancer') && preg_match('#^/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_fichedepistagecancer_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fichedepistagecancer_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fichedepistagecancer_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichedepistagecancer_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/depistage-cancer') && preg_match('#^/en/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_fichedepistagecancer_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fichedepistagecancer_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fichedepistagecancer_delete:

            // es__RG__gestion_fichedepistagecancer_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/depistage-cancer') && preg_match('#^/es/admin/gestion/depistage\\-cancer/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_fichedepistagecancer_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fichedepistagecancer_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheDepistageCancerController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fichedepistagecancer_delete:

        }

        // fr__RG__admin_consultation_cancer_search
        if ('/admin/consultation/cancer/patient/search' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_cancer_search;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::search',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_consultation_cancer_search',);
        }
        not_fr__RG__admin_consultation_cancer_search:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_cancer_search
            if ('/en/admin/consultation/cancer/patient/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_cancer_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::search',  '_locale' => 'en',  '_route' => 'en__RG__admin_consultation_cancer_search',);
            }
            not_en__RG__admin_consultation_cancer_search:

            // es__RG__admin_consultation_cancer_search
            if ('/es/admin/consultation/cancer/patient/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_cancer_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::search',  '_locale' => 'es',  '_route' => 'es__RG__admin_consultation_cancer_search',);
            }
            not_es__RG__admin_consultation_cancer_search:

        }

        // fr__RG__admin_consultation_cancer_index
        if ('/admin/consultation/cancer/patient' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_consultation_cancer_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_consultation_cancer_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_consultation_cancer_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::index',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_consultation_cancer_index',);
        }
        not_fr__RG__admin_consultation_cancer_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_cancer_index
            if ('/en/admin/consultation/cancer/patient' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_consultation_cancer_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_consultation_cancer_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_consultation_cancer_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::index',  '_locale' => 'en',  '_route' => 'en__RG__admin_consultation_cancer_index',);
            }
            not_en__RG__admin_consultation_cancer_index:

            // es__RG__admin_consultation_cancer_index
            if ('/es/admin/consultation/cancer/patient' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_consultation_cancer_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_consultation_cancer_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_consultation_cancer_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::index',  '_locale' => 'es',  '_route' => 'es__RG__admin_consultation_cancer_index',);
            }
            not_es__RG__admin_consultation_cancer_index:

        }

        // fr__RG__admin_consultation_cancer_new
        if ('/admin/consultation/cancer/patient/nouvelle' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_cancer_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::new',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_consultation_cancer_new',);
        }
        not_fr__RG__admin_consultation_cancer_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_cancer_new
            if ('/en/admin/consultation/cancer/patient/nouvelle' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_cancer_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::new',  '_locale' => 'en',  '_route' => 'en__RG__admin_consultation_cancer_new',);
            }
            not_en__RG__admin_consultation_cancer_new:

            // es__RG__admin_consultation_cancer_new
            if ('/es/admin/consultation/cancer/patient/nouvelle' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_cancer_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::new',  '_locale' => 'es',  '_route' => 'es__RG__admin_consultation_cancer_new',);
            }
            not_es__RG__admin_consultation_cancer_new:

        }

        // fr__RG__admin_consultation_cancer_show
        if (0 === strpos($pathinfo, '/admin/consultation/cancer/patient') && preg_match('#^/admin/consultation/cancer/patient/(?P<id>[^/]++)/afficher$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_consultation_cancer_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_cancer_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::show',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_cancer_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_cancer_show
            if (0 === strpos($pathinfo, '/en/admin/consultation/cancer/patient') && preg_match('#^/en/admin/consultation/cancer/patient/(?P<id>[^/]++)/afficher$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_consultation_cancer_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_cancer_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::show',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_cancer_show:

            // es__RG__admin_consultation_cancer_show
            if (0 === strpos($pathinfo, '/es/admin/consultation/cancer/patient') && preg_match('#^/es/admin/consultation/cancer/patient/(?P<id>[^/]++)/afficher$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_consultation_cancer_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_cancer_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::show',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_cancer_show:

        }

        // fr__RG__admin_consultation_cancer_edit
        if (0 === strpos($pathinfo, '/admin/consultation/cancer/patient') && preg_match('#^/admin/consultation/cancer/patient/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_cancer_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_cancer_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::edit',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_cancer_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_cancer_edit
            if (0 === strpos($pathinfo, '/en/admin/consultation/cancer/patient') && preg_match('#^/en/admin/consultation/cancer/patient/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_cancer_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_cancer_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::edit',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_cancer_edit:

            // es__RG__admin_consultation_cancer_edit
            if (0 === strpos($pathinfo, '/es/admin/consultation/cancer/patient') && preg_match('#^/es/admin/consultation/cancer/patient/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_cancer_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_cancer_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::edit',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_cancer_edit:

        }

        // fr__RG__admin_consultation_cancer_delete
        if (0 === strpos($pathinfo, '/admin/consultation/cancer/patient') && preg_match('#^/admin/consultation/cancer/patient/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__admin_consultation_cancer_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_cancer_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::delete',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_cancer_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_cancer_delete
            if (0 === strpos($pathinfo, '/en/admin/consultation/cancer/patient') && preg_match('#^/en/admin/consultation/cancer/patient/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__admin_consultation_cancer_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_cancer_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::delete',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_cancer_delete:

            // es__RG__admin_consultation_cancer_delete
            if (0 === strpos($pathinfo, '/es/admin/consultation/cancer/patient') && preg_match('#^/es/admin/consultation/cancer/patient/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__admin_consultation_cancer_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_cancer_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::delete',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_cancer_delete:

        }

        // fr__RG__admin_consultation_cancer_liste
        if (0 === strpos($pathinfo, '/admin/consultation/cancer/patient/liste') && preg_match('#^/admin/consultation/cancer/patient/liste/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_cancer_liste;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_cancer_liste')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::listeAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_cancer_liste:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_cancer_liste
            if (0 === strpos($pathinfo, '/en/admin/consultation/cancer/patient/liste') && preg_match('#^/en/admin/consultation/cancer/patient/liste/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_cancer_liste;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_cancer_liste')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::listeAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_cancer_liste:

            // es__RG__admin_consultation_cancer_liste
            if (0 === strpos($pathinfo, '/es/admin/consultation/cancer/patient/liste') && preg_match('#^/es/admin/consultation/cancer/patient/liste/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_cancer_liste;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_cancer_liste')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::listeAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_cancer_liste:

        }

        // fr__RG__admin_consultation_cancer_historique
        if ('/admin/consultation/cancer/patient/historique' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_cancer_historique;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::historiqueAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_consultation_cancer_historique',);
        }
        not_fr__RG__admin_consultation_cancer_historique:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_cancer_historique
            if ('/en/admin/consultation/cancer/patient/historique' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_cancer_historique;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::historiqueAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_consultation_cancer_historique',);
            }
            not_en__RG__admin_consultation_cancer_historique:

            // es__RG__admin_consultation_cancer_historique
            if ('/es/admin/consultation/cancer/patient/historique' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_cancer_historique;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::historiqueAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_consultation_cancer_historique',);
            }
            not_es__RG__admin_consultation_cancer_historique:

        }

        // fr__RG__patient_profil_cancer
        if ('/cnrao/profil-cancer' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__patient_profil_cancer;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::profilCancerAction',  '_locale' => 'fr',  '_route' => 'fr__RG__patient_profil_cancer',);
        }
        not_fr__RG__patient_profil_cancer:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__patient_profil_cancer
            if ('/en/cnrao/profil-cancer' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__patient_profil_cancer;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::profilCancerAction',  '_locale' => 'en',  '_route' => 'en__RG__patient_profil_cancer',);
            }
            not_en__RG__patient_profil_cancer:

            // es__RG__patient_profil_cancer
            if ('/es/cnrao/profil-cancer' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__patient_profil_cancer;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationCancerController::profilCancerAction',  '_locale' => 'es',  '_route' => 'es__RG__patient_profil_cancer',);
            }
            not_es__RG__patient_profil_cancer:

        }

        // fr__RG__gestion_suivialerte_index
        if (0 === strpos($pathinfo, '/admin/patient/suivialerte') && preg_match('#^/admin/patient/suivialerte/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_suivialerte_index;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_suivialerte_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::indexAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_suivialerte_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivialerte_index
            if (0 === strpos($pathinfo, '/en/admin/patient/suivialerte') && preg_match('#^/en/admin/patient/suivialerte/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_suivialerte_index;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_suivialerte_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::indexAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_suivialerte_index:

            // es__RG__gestion_suivialerte_index
            if (0 === strpos($pathinfo, '/es/admin/patient/suivialerte') && preg_match('#^/es/admin/patient/suivialerte/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_suivialerte_index;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_suivialerte_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::indexAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_suivialerte_index:

        }

        // fr__RG__gestion_suivialerte_new
        if (0 === strpos($pathinfo, '/admin/patient/suivialerte') && preg_match('#^/admin/patient/suivialerte/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_suivialerte_new;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_suivialerte_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::newAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_suivialerte_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivialerte_new
            if (0 === strpos($pathinfo, '/en/admin/patient/suivialerte') && preg_match('#^/en/admin/patient/suivialerte/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_suivialerte_new;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_suivialerte_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::newAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_suivialerte_new:

            // es__RG__gestion_suivialerte_new
            if (0 === strpos($pathinfo, '/es/admin/patient/suivialerte') && preg_match('#^/es/admin/patient/suivialerte/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_suivialerte_new;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_suivialerte_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::newAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_suivialerte_new:

        }

        // fr__RG__gestion_suivialerte_show
        if (0 === strpos($pathinfo, '/admin/patient/suivialerte') && preg_match('#^/admin/patient/suivialerte/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_suivialerte_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_suivialerte_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_suivialerte_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivialerte_show
            if (0 === strpos($pathinfo, '/en/admin/patient/suivialerte') && preg_match('#^/en/admin/patient/suivialerte/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_suivialerte_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_suivialerte_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_suivialerte_show:

            // es__RG__gestion_suivialerte_show
            if (0 === strpos($pathinfo, '/es/admin/patient/suivialerte') && preg_match('#^/es/admin/patient/suivialerte/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_suivialerte_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_suivialerte_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_suivialerte_show:

        }

        // fr__RG__gestion_suivialerte_edit
        if (0 === strpos($pathinfo, '/admin/patient/suivialerte') && preg_match('#^/admin/patient/suivialerte/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_suivialerte_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_suivialerte_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_suivialerte_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivialerte_edit
            if (0 === strpos($pathinfo, '/en/admin/patient/suivialerte') && preg_match('#^/en/admin/patient/suivialerte/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_suivialerte_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_suivialerte_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_suivialerte_edit:

            // es__RG__gestion_suivialerte_edit
            if (0 === strpos($pathinfo, '/es/admin/patient/suivialerte') && preg_match('#^/es/admin/patient/suivialerte/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_suivialerte_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_suivialerte_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_suivialerte_edit:

        }

        // fr__RG__gestion_suivialerte_delete
        if (0 === strpos($pathinfo, '/admin/patient/suivialerte') && preg_match('#^/admin/patient/suivialerte/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_suivialerte_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_suivialerte_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_suivialerte_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivialerte_delete
            if (0 === strpos($pathinfo, '/en/admin/patient/suivialerte') && preg_match('#^/en/admin/patient/suivialerte/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_suivialerte_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_suivialerte_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_suivialerte_delete:

            // es__RG__gestion_suivialerte_delete
            if (0 === strpos($pathinfo, '/es/admin/patient/suivialerte') && preg_match('#^/es/admin/patient/suivialerte/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_suivialerte_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_suivialerte_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_suivialerte_delete:

        }

        // fr__RG__gestion_suivialerte_data
        if (0 === strpos($pathinfo, '/admin/patient/suivialerte') && preg_match('#^/admin/patient/suivialerte/(?P<id>[^/]++)/data$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_suivialerte_data;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_suivialerte_data')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::data',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_suivialerte_data:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivialerte_data
            if (0 === strpos($pathinfo, '/en/admin/patient/suivialerte') && preg_match('#^/en/admin/patient/suivialerte/(?P<id>[^/]++)/data$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_suivialerte_data;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_suivialerte_data')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::data',  '_locale' => 'en',));
            }
            not_en__RG__gestion_suivialerte_data:

            // es__RG__gestion_suivialerte_data
            if (0 === strpos($pathinfo, '/es/admin/patient/suivialerte') && preg_match('#^/es/admin/patient/suivialerte/(?P<id>[^/]++)/data$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_suivialerte_data;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_suivialerte_data')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAlerteController::data',  '_locale' => 'es',));
            }
            not_es__RG__gestion_suivialerte_data:

        }

        // fr__RG__gestion_actualite_index
        if ('/admin/gestion/actualite' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_actualite_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_actualite_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_actualite_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_actualite_index',);
        }
        not_fr__RG__gestion_actualite_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_actualite_index
            if ('/en/admin/gestion/actualite' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_actualite_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_actualite_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_actualite_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_actualite_index',);
            }
            not_en__RG__gestion_actualite_index:

            // es__RG__gestion_actualite_index
            if ('/es/admin/gestion/actualite' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_actualite_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_actualite_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_actualite_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_actualite_index',);
            }
            not_es__RG__gestion_actualite_index:

        }

        // fr__RG__gestion_actualite_new
        if ('/admin/gestion/actualite/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_actualite_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_actualite_new',);
        }
        not_fr__RG__gestion_actualite_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_actualite_new
            if ('/en/admin/gestion/actualite/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_actualite_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_actualite_new',);
            }
            not_en__RG__gestion_actualite_new:

            // es__RG__gestion_actualite_new
            if ('/es/admin/gestion/actualite/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_actualite_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_actualite_new',);
            }
            not_es__RG__gestion_actualite_new:

        }

        // fr__RG__gestion_actualite_show
        if (0 === strpos($pathinfo, '/admin/gestion/actualite') && preg_match('#^/admin/gestion/actualite/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_actualite_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_actualite_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_actualite_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_actualite_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/actualite') && preg_match('#^/en/admin/gestion/actualite/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_actualite_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_actualite_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_actualite_show:

            // es__RG__gestion_actualite_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/actualite') && preg_match('#^/es/admin/gestion/actualite/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_actualite_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_actualite_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_actualite_show:

        }

        // fr__RG__gestion_actualite_edit
        if (0 === strpos($pathinfo, '/admin/gestion/actualite') && preg_match('#^/admin/gestion/actualite/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_actualite_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_actualite_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_actualite_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_actualite_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/actualite') && preg_match('#^/en/admin/gestion/actualite/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_actualite_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_actualite_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_actualite_edit:

            // es__RG__gestion_actualite_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/actualite') && preg_match('#^/es/admin/gestion/actualite/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_actualite_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_actualite_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_actualite_edit:

        }

        // fr__RG__gestion_actualite_delete
        if (0 === strpos($pathinfo, '/admin/gestion/actualite') && preg_match('#^/admin/gestion/actualite/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_actualite_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_actualite_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_actualite_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_actualite_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/actualite') && preg_match('#^/en/admin/gestion/actualite/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_actualite_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_actualite_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_actualite_delete:

            // es__RG__gestion_actualite_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/actualite') && preg_match('#^/es/admin/gestion/actualite/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_actualite_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_actualite_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ActualiteController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_actualite_delete:

        }

        // fr__RG__gestion_alerte_index
        if ('/admin/patient/alerte' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_alerte_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_alerte_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_alerte_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_alerte_index',);
        }
        not_fr__RG__gestion_alerte_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_alerte_index
            if ('/en/admin/patient/alerte' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_alerte_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_alerte_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_alerte_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_alerte_index',);
            }
            not_en__RG__gestion_alerte_index:

            // es__RG__gestion_alerte_index
            if ('/es/admin/patient/alerte' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_alerte_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_alerte_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_alerte_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_alerte_index',);
            }
            not_es__RG__gestion_alerte_index:

        }

        // fr__RG__gestion_alerte_new
        if ('/admin/patient/alerte/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_alerte_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_alerte_new',);
        }
        not_fr__RG__gestion_alerte_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_alerte_new
            if ('/en/admin/patient/alerte/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_alerte_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_alerte_new',);
            }
            not_en__RG__gestion_alerte_new:

            // es__RG__gestion_alerte_new
            if ('/es/admin/patient/alerte/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_alerte_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_alerte_new',);
            }
            not_es__RG__gestion_alerte_new:

        }

        // fr__RG__gestion_alerte_show
        if (0 === strpos($pathinfo, '/admin/patient/alerte') && preg_match('#^/admin/patient/alerte/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_alerte_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_alerte_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_alerte_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_alerte_show
            if (0 === strpos($pathinfo, '/en/admin/patient/alerte') && preg_match('#^/en/admin/patient/alerte/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_alerte_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_alerte_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_alerte_show:

            // es__RG__gestion_alerte_show
            if (0 === strpos($pathinfo, '/es/admin/patient/alerte') && preg_match('#^/es/admin/patient/alerte/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_alerte_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_alerte_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_alerte_show:

        }

        // fr__RG__gestion_alerte_data
        if ('/admin/patient/alerte/data' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_alerte_data;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::data',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_alerte_data',);
        }
        not_fr__RG__gestion_alerte_data:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_alerte_data
            if ('/en/admin/patient/alerte/data' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_alerte_data;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::data',  '_locale' => 'en',  '_route' => 'en__RG__gestion_alerte_data',);
            }
            not_en__RG__gestion_alerte_data:

            // es__RG__gestion_alerte_data
            if ('/es/admin/patient/alerte/data' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_alerte_data;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::data',  '_locale' => 'es',  '_route' => 'es__RG__gestion_alerte_data',);
            }
            not_es__RG__gestion_alerte_data:

        }

        // fr__RG__gestion_alerte_edit
        if (0 === strpos($pathinfo, '/admin/patient/alerte') && preg_match('#^/admin/patient/alerte/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_alerte_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_alerte_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_alerte_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_alerte_edit
            if (0 === strpos($pathinfo, '/en/admin/patient/alerte') && preg_match('#^/en/admin/patient/alerte/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_alerte_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_alerte_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_alerte_edit:

            // es__RG__gestion_alerte_edit
            if (0 === strpos($pathinfo, '/es/admin/patient/alerte') && preg_match('#^/es/admin/patient/alerte/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_alerte_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_alerte_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_alerte_edit:

        }

        // fr__RG__gestion_alerte_delete
        if (0 === strpos($pathinfo, '/admin/patient/alerte') && preg_match('#^/admin/patient/alerte/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_alerte_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_alerte_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_alerte_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_alerte_delete
            if (0 === strpos($pathinfo, '/en/admin/patient/alerte') && preg_match('#^/en/admin/patient/alerte/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_alerte_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_alerte_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_alerte_delete:

            // es__RG__gestion_alerte_delete
            if (0 === strpos($pathinfo, '/es/admin/patient/alerte') && preg_match('#^/es/admin/patient/alerte/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_alerte_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_alerte_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AlerteController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_alerte_delete:

        }

        // fr__RG__parametre_typealerte_index
        if ('/admin/parametre/typealerte' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__parametre_typealerte_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__parametre_typealerte_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_typealerte_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_typealerte_index',);
        }
        not_fr__RG__parametre_typealerte_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typealerte_index
            if ('/en/admin/parametre/typealerte' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__parametre_typealerte_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__parametre_typealerte_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_typealerte_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_typealerte_index',);
            }
            not_en__RG__parametre_typealerte_index:

            // es__RG__parametre_typealerte_index
            if ('/es/admin/parametre/typealerte' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__parametre_typealerte_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__parametre_typealerte_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_typealerte_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_typealerte_index',);
            }
            not_es__RG__parametre_typealerte_index:

        }

        // fr__RG__parametre_typealerte_new
        if ('/admin/parametre/typealerte/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_typealerte_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_typealerte_new',);
        }
        not_fr__RG__parametre_typealerte_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typealerte_new
            if ('/en/admin/parametre/typealerte/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_typealerte_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_typealerte_new',);
            }
            not_en__RG__parametre_typealerte_new:

            // es__RG__parametre_typealerte_new
            if ('/es/admin/parametre/typealerte/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_typealerte_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_typealerte_new',);
            }
            not_es__RG__parametre_typealerte_new:

        }

        // fr__RG__parametre_typealerte_show
        if (0 === strpos($pathinfo, '/admin/parametre/typealerte') && preg_match('#^/admin/parametre/typealerte/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_typealerte_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_typealerte_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_typealerte_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typealerte_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/typealerte') && preg_match('#^/en/admin/parametre/typealerte/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_typealerte_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_typealerte_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_typealerte_show:

            // es__RG__parametre_typealerte_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/typealerte') && preg_match('#^/es/admin/parametre/typealerte/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_typealerte_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_typealerte_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_typealerte_show:

        }

        // fr__RG__parametre_typealerte_edit
        if (0 === strpos($pathinfo, '/admin/parametre/typealerte') && preg_match('#^/admin/parametre/typealerte/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_typealerte_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_typealerte_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_typealerte_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typealerte_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/typealerte') && preg_match('#^/en/admin/parametre/typealerte/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_typealerte_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_typealerte_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_typealerte_edit:

            // es__RG__parametre_typealerte_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/typealerte') && preg_match('#^/es/admin/parametre/typealerte/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_typealerte_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_typealerte_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_typealerte_edit:

        }

        // fr__RG__parametre_typealerte_delete
        if (0 === strpos($pathinfo, '/admin/parametre/typealerte') && preg_match('#^/admin/parametre/typealerte/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__parametre_typealerte_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_typealerte_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_typealerte_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typealerte_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/typealerte') && preg_match('#^/en/admin/parametre/typealerte/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__parametre_typealerte_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_typealerte_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_typealerte_delete:

            // es__RG__parametre_typealerte_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/typealerte') && preg_match('#^/es/admin/parametre/typealerte/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__parametre_typealerte_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_typealerte_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeAlerteController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_typealerte_delete:

        }

        // fr__RG__gestion_fichierpatient_search
        if ('/admin/gestion/fichier-patient/search' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fichierpatient_search;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_fichierpatient_search',);
        }
        not_fr__RG__gestion_fichierpatient_search:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichierpatient_search
            if ('/en/admin/gestion/fichier-patient/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fichierpatient_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_fichierpatient_search',);
            }
            not_en__RG__gestion_fichierpatient_search:

            // es__RG__gestion_fichierpatient_search
            if ('/es/admin/gestion/fichier-patient/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fichierpatient_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_fichierpatient_search',);
            }
            not_es__RG__gestion_fichierpatient_search:

        }

        // fr__RG__gestion_fichierpatient_index
        if ('/admin/gestion/fichier-patient' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_fichierpatient_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_fichierpatient_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_fichierpatient_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_fichierpatient_index',);
        }
        not_fr__RG__gestion_fichierpatient_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichierpatient_index
            if ('/en/admin/gestion/fichier-patient' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_fichierpatient_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_fichierpatient_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_fichierpatient_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_fichierpatient_index',);
            }
            not_en__RG__gestion_fichierpatient_index:

            // es__RG__gestion_fichierpatient_index
            if ('/es/admin/gestion/fichier-patient' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_fichierpatient_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_fichierpatient_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_fichierpatient_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_fichierpatient_index',);
            }
            not_es__RG__gestion_fichierpatient_index:

        }

        // fr__RG__gestion_fichierpatient_new
        if ('/admin/gestion/fichier-patient/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fichierpatient_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_fichierpatient_new',);
        }
        not_fr__RG__gestion_fichierpatient_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichierpatient_new
            if ('/en/admin/gestion/fichier-patient/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fichierpatient_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_fichierpatient_new',);
            }
            not_en__RG__gestion_fichierpatient_new:

            // es__RG__gestion_fichierpatient_new
            if ('/es/admin/gestion/fichier-patient/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fichierpatient_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_fichierpatient_new',);
            }
            not_es__RG__gestion_fichierpatient_new:

        }

        // fr__RG__gestion_fichierpatient_show
        if (0 === strpos($pathinfo, '/admin/gestion/fichier-patient') && preg_match('#^/admin/gestion/fichier\\-patient/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_fichierpatient_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fichierpatient_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fichierpatient_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichierpatient_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/fichier-patient') && preg_match('#^/en/admin/gestion/fichier\\-patient/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_fichierpatient_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fichierpatient_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fichierpatient_show:

            // es__RG__gestion_fichierpatient_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/fichier-patient') && preg_match('#^/es/admin/gestion/fichier\\-patient/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_fichierpatient_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fichierpatient_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fichierpatient_show:

        }

        // fr__RG__gestion_fichierpatient_edit
        if (0 === strpos($pathinfo, '/admin/gestion/fichier-patient') && preg_match('#^/admin/gestion/fichier\\-patient/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fichierpatient_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fichierpatient_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fichierpatient_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichierpatient_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/fichier-patient') && preg_match('#^/en/admin/gestion/fichier\\-patient/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fichierpatient_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fichierpatient_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fichierpatient_edit:

            // es__RG__gestion_fichierpatient_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/fichier-patient') && preg_match('#^/es/admin/gestion/fichier\\-patient/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fichierpatient_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fichierpatient_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fichierpatient_edit:

        }

        // fr__RG__gestion_fichierpatient_delete
        if (0 === strpos($pathinfo, '/admin/gestion/fichier-patient') && preg_match('#^/admin/gestion/fichier\\-patient/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_fichierpatient_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fichierpatient_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fichierpatient_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fichierpatient_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/fichier-patient') && preg_match('#^/en/admin/gestion/fichier\\-patient/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_fichierpatient_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fichierpatient_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fichierpatient_delete:

            // es__RG__gestion_fichierpatient_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/fichier-patient') && preg_match('#^/es/admin/gestion/fichier\\-patient/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_fichierpatient_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fichierpatient_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FichierPatientController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fichierpatient_delete:

        }

        // fr__RG__app_login
        if ('/auth/admin/login' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__app_login;
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\SecurityController::loginAction',  '_locale' => 'fr',  '_route' => 'fr__RG__app_login',);
        }
        not_fr__RG__app_login:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__app_login
            if ('/en/auth/admin/login' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__app_login;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\SecurityController::loginAction',  '_locale' => 'en',  '_route' => 'en__RG__app_login',);
            }
            not_en__RG__app_login:

            // es__RG__app_login
            if ('/es/auth/admin/login' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__app_login;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\SecurityController::loginAction',  '_locale' => 'es',  '_route' => 'es__RG__app_login',);
            }
            not_es__RG__app_login:

        }

        // fr__RG__app_login_cnrao
        if ('/auth/admin/cnrao' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__app_login_cnrao;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__app_login_cnrao');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__app_login_cnrao;
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\SecurityController::loginCnraoAction',  '_locale' => 'fr',  '_route' => 'fr__RG__app_login_cnrao',);
        }
        not_fr__RG__app_login_cnrao:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__app_login_cnrao
            if ('/en/auth/admin/cnrao' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__app_login_cnrao;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__app_login_cnrao');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__app_login_cnrao;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\SecurityController::loginCnraoAction',  '_locale' => 'en',  '_route' => 'en__RG__app_login_cnrao',);
            }
            not_en__RG__app_login_cnrao:

            // es__RG__app_login_cnrao
            if ('/es/auth/admin/cnrao' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__app_login_cnrao;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__app_login_cnrao');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__app_login_cnrao;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\SecurityController::loginCnraoAction',  '_locale' => 'es',  '_route' => 'es__RG__app_login_cnrao',);
            }
            not_es__RG__app_login_cnrao:

        }

        // fr__RG__cnrao_login_check
        if ('/auth/admin/cnrao/login_check' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__cnrao_login_check;
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\SecurityController::checkCnraoAction',  '_locale' => 'fr',  '_route' => 'fr__RG__cnrao_login_check',);
        }
        not_fr__RG__cnrao_login_check:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__cnrao_login_check
            if ('/en/auth/admin/cnrao/login_check' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__cnrao_login_check;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\SecurityController::checkCnraoAction',  '_locale' => 'en',  '_route' => 'en__RG__cnrao_login_check',);
            }
            not_en__RG__cnrao_login_check:

            // es__RG__cnrao_login_check
            if ('/es/auth/admin/cnrao/login_check' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__cnrao_login_check;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\SecurityController::checkCnraoAction',  '_locale' => 'es',  '_route' => 'es__RG__cnrao_login_check',);
            }
            not_es__RG__cnrao_login_check:

        }

        // fr__RG__cnrao_logout
        if ('/auth/admin/cnrao/logout' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__cnrao_logout;
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\SecurityController::logoutAction',  '_locale' => 'fr',  '_route' => 'fr__RG__cnrao_logout',);
        }
        not_fr__RG__cnrao_logout:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__cnrao_logout
            if ('/en/auth/admin/cnrao/logout' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__cnrao_logout;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\SecurityController::logoutAction',  '_locale' => 'en',  '_route' => 'en__RG__cnrao_logout',);
            }
            not_en__RG__cnrao_logout:

            // es__RG__cnrao_logout
            if ('/es/auth/admin/cnrao/logout' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__cnrao_logout;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\SecurityController::logoutAction',  '_locale' => 'es',  '_route' => 'es__RG__cnrao_logout',);
            }
            not_es__RG__cnrao_logout:

        }

        // fr__RG__ps_mobile_assurance_getassurances
        if ('/api/v2/assurances' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_assurance_getassurances;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\AssuranceController::getAssurancesAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_assurance_getassurances',);
        }
        not_fr__RG__ps_mobile_assurance_getassurances:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_assurance_getassurances
            if ('/en/api/v2/assurances' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_assurance_getassurances;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\AssuranceController::getAssurancesAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_assurance_getassurances',);
            }
            not_en__RG__ps_mobile_assurance_getassurances:

            // es__RG__ps_mobile_assurance_getassurances
            if ('/es/api/v2/assurances' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_assurance_getassurances;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\AssuranceController::getAssurancesAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_assurance_getassurances',);
            }
            not_es__RG__ps_mobile_assurance_getassurances:

        }

        // fr__RG__ps_mobile_constante_getconstantes
        if ('/api/v2/constantes' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_constante_getconstantes;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\ConstanteController::getConstantesAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_constante_getconstantes',);
        }
        not_fr__RG__ps_mobile_constante_getconstantes:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_constante_getconstantes
            if ('/en/api/v2/constantes' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_constante_getconstantes;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\ConstanteController::getConstantesAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_constante_getconstantes',);
            }
            not_en__RG__ps_mobile_constante_getconstantes:

            // es__RG__ps_mobile_constante_getconstantes
            if ('/es/api/v2/constantes' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_constante_getconstantes;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\ConstanteController::getConstantesAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_constante_getconstantes',);
            }
            not_es__RG__ps_mobile_constante_getconstantes:

        }

        // fr__RG__ps_mobile_default_index
        if ('/api/v2' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__ps_mobile_default_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__ps_mobile_default_index');
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_default_index',);
        }
        not_fr__RG__ps_mobile_default_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_default_index
            if ('/en/api/v2' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__ps_mobile_default_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__ps_mobile_default_index');
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_default_index',);
            }
            not_en__RG__ps_mobile_default_index:

            // es__RG__ps_mobile_default_index
            if ('/es/api/v2' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__ps_mobile_default_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__ps_mobile_default_index');
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_default_index',);
            }
            not_es__RG__ps_mobile_default_index:

        }

        // fr__RG__ps_mobile_groupesanguin_getgroupesanguins
        if ('/api/v2/groupe-sanguins' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_groupesanguin_getgroupesanguins;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\GroupeSanguinController::getGroupeSanguinsAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_groupesanguin_getgroupesanguins',);
        }
        not_fr__RG__ps_mobile_groupesanguin_getgroupesanguins:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_groupesanguin_getgroupesanguins
            if ('/en/api/v2/groupe-sanguins' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_groupesanguin_getgroupesanguins;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\GroupeSanguinController::getGroupeSanguinsAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_groupesanguin_getgroupesanguins',);
            }
            not_en__RG__ps_mobile_groupesanguin_getgroupesanguins:

            // es__RG__ps_mobile_groupesanguin_getgroupesanguins
            if ('/es/api/v2/groupe-sanguins' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_groupesanguin_getgroupesanguins;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\GroupeSanguinController::getGroupeSanguinsAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_groupesanguin_getgroupesanguins',);
            }
            not_es__RG__ps_mobile_groupesanguin_getgroupesanguins:

        }

        // fr__RG__ps_mobile_hopital_gethopitaux
        if ('/api/v2/hopitaux' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_hopital_gethopitaux;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\HopitalController::getHopitauxAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_hopital_gethopitaux',);
        }
        not_fr__RG__ps_mobile_hopital_gethopitaux:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_hopital_gethopitaux
            if ('/en/api/v2/hopitaux' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_hopital_gethopitaux;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\HopitalController::getHopitauxAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_hopital_gethopitaux',);
            }
            not_en__RG__ps_mobile_hopital_gethopitaux:

            // es__RG__ps_mobile_hopital_gethopitaux
            if ('/es/api/v2/hopitaux' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_hopital_gethopitaux;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\HopitalController::getHopitauxAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_hopital_gethopitaux',);
            }
            not_es__RG__ps_mobile_hopital_gethopitaux:

        }

        // fr__RG__ps_mobile_lienparente_getlienparentes
        if ('/api/v2/lien-parente' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_lienparente_getlienparentes;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\LienParenteController::getLienParentesAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_lienparente_getlienparentes',);
        }
        not_fr__RG__ps_mobile_lienparente_getlienparentes:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_lienparente_getlienparentes
            if ('/en/api/v2/lien-parente' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_lienparente_getlienparentes;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\LienParenteController::getLienParentesAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_lienparente_getlienparentes',);
            }
            not_en__RG__ps_mobile_lienparente_getlienparentes:

            // es__RG__ps_mobile_lienparente_getlienparentes
            if ('/es/api/v2/lien-parente' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_lienparente_getlienparentes;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\LienParenteController::getLienParentesAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_lienparente_getlienparentes',);
            }
            not_es__RG__ps_mobile_lienparente_getlienparentes:

        }

        // fr__RG__ps_mobile_medecin_consultation_postlistepatientconsultations
        if ('/api/v2/historique-consultations' === $pathinfo && ($request->headers->get("Content-Type") === "application/json")) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_medecin_consultation_postlistepatientconsultations;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\Medecin\\ConsultationController::postListePatientConsultationsAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_medecin_consultation_postlistepatientconsultations',);
        }
        not_fr__RG__ps_mobile_medecin_consultation_postlistepatientconsultations:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_medecin_consultation_postlistepatientconsultations
            if ('/en/api/v2/historique-consultations' === $pathinfo && ($request->headers->get("Content-Type") === "application/json")) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_medecin_consultation_postlistepatientconsultations;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\Medecin\\ConsultationController::postListePatientConsultationsAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_medecin_consultation_postlistepatientconsultations',);
            }
            not_en__RG__ps_mobile_medecin_consultation_postlistepatientconsultations:

            // es__RG__ps_mobile_medecin_consultation_postlistepatientconsultations
            if ('/es/api/v2/historique-consultations' === $pathinfo && ($request->headers->get("Content-Type") === "application/json")) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_medecin_consultation_postlistepatientconsultations;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\Medecin\\ConsultationController::postListePatientConsultationsAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_medecin_consultation_postlistepatientconsultations',);
            }
            not_es__RG__ps_mobile_medecin_consultation_postlistepatientconsultations:

        }

        // fr__RG__ps_mobile_medecin_consultation_getconsultation
        if (0 === strpos($pathinfo, '/api/v2/consultations') && preg_match('#^/api/v2/consultations/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_medecin_consultation_getconsultation;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_medecin_consultation_getconsultation')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Medecin\\ConsultationController::getConsultationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_medecin_consultation_getconsultation:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_medecin_consultation_getconsultation
            if (0 === strpos($pathinfo, '/en/api/v2/consultations') && preg_match('#^/en/api/v2/consultations/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_medecin_consultation_getconsultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_medecin_consultation_getconsultation')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Medecin\\ConsultationController::getConsultationAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_medecin_consultation_getconsultation:

            // es__RG__ps_mobile_medecin_consultation_getconsultation
            if (0 === strpos($pathinfo, '/es/api/v2/consultations') && preg_match('#^/es/api/v2/consultations/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_medecin_consultation_getconsultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_medecin_consultation_getconsultation')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Medecin\\ConsultationController::getConsultationAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_medecin_consultation_getconsultation:

        }

        // fr__RG__ps_mobile_medecin_consultation_postconsultation
        if ('/api/v2/consultations' === $pathinfo && ($request->headers->get("Content-Type") === "application/json")) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_medecin_consultation_postconsultation;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\Medecin\\ConsultationController::postConsultationAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_medecin_consultation_postconsultation',);
        }
        not_fr__RG__ps_mobile_medecin_consultation_postconsultation:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_medecin_consultation_postconsultation
            if ('/en/api/v2/consultations' === $pathinfo && ($request->headers->get("Content-Type") === "application/json")) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_medecin_consultation_postconsultation;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\Medecin\\ConsultationController::postConsultationAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_medecin_consultation_postconsultation',);
            }
            not_en__RG__ps_mobile_medecin_consultation_postconsultation:

            // es__RG__ps_mobile_medecin_consultation_postconsultation
            if ('/es/api/v2/consultations' === $pathinfo && ($request->headers->get("Content-Type") === "application/json")) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_medecin_consultation_postconsultation;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\Medecin\\ConsultationController::postConsultationAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_medecin_consultation_postconsultation',);
            }
            not_es__RG__ps_mobile_medecin_consultation_postconsultation:

        }

        // fr__RG__ps_mobile_nationalite_getnationalites
        if ('/api/v2/nationalites' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_nationalite_getnationalites;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\NationaliteController::getNationalitesAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_nationalite_getnationalites',);
        }
        not_fr__RG__ps_mobile_nationalite_getnationalites:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_nationalite_getnationalites
            if ('/en/api/v2/nationalites' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_nationalite_getnationalites;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\NationaliteController::getNationalitesAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_nationalite_getnationalites',);
            }
            not_en__RG__ps_mobile_nationalite_getnationalites:

            // es__RG__ps_mobile_nationalite_getnationalites
            if ('/es/api/v2/nationalites' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_nationalite_getnationalites;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\NationaliteController::getNationalitesAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_nationalite_getnationalites',);
            }
            not_es__RG__ps_mobile_nationalite_getnationalites:

        }

        // fr__RG__ps_mobile_patient_affection_getaffections
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/affections$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_affection_getaffections;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_affection_getaffections')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::getAffectionsAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_affection_getaffections:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_affection_getaffections
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/affections$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_affection_getaffections;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_affection_getaffections')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::getAffectionsAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_affection_getaffections:

            // es__RG__ps_mobile_patient_affection_getaffections
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/affections$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_affection_getaffections;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_affection_getaffections')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::getAffectionsAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_affection_getaffections:

        }

        // fr__RG__ps_mobile_patient_affection_getaffection
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_affection_getaffection;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_affection_getaffection')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::getAffectionAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_affection_getaffection:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_affection_getaffection
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_affection_getaffection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_affection_getaffection')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::getAffectionAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_affection_getaffection:

            // es__RG__ps_mobile_patient_affection_getaffection
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_affection_getaffection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_affection_getaffection')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::getAffectionAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_affection_getaffection:

        }

        // fr__RG__ps_mobile_patient_affection_deleteaffection
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__ps_mobile_patient_affection_deleteaffection;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_affection_deleteaffection')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::deleteAffectionAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_affection_deleteaffection:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_affection_deleteaffection
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__ps_mobile_patient_affection_deleteaffection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_affection_deleteaffection')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::deleteAffectionAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_affection_deleteaffection:

            // es__RG__ps_mobile_patient_affection_deleteaffection
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__ps_mobile_patient_affection_deleteaffection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_affection_deleteaffection')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::deleteAffectionAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_affection_deleteaffection:

        }

        // fr__RG__ps_mobile_patient_affection_postaffection
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/affections$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_affection_postaffection;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_affection_postaffection')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::postAffectionAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_affection_postaffection:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_affection_postaffection
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/affections$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_affection_postaffection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_affection_postaffection')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::postAffectionAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_affection_postaffection:

            // es__RG__ps_mobile_patient_affection_postaffection
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/affections$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_affection_postaffection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_affection_postaffection')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::postAffectionAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_affection_postaffection:

        }

        // fr__RG__ps_mobile_patient_affection_putaffection
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__ps_mobile_patient_affection_putaffection;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_affection_putaffection')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::putAffectionAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_affection_putaffection:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_affection_putaffection
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__ps_mobile_patient_affection_putaffection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_affection_putaffection')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::putAffectionAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_affection_putaffection:

            // es__RG__ps_mobile_patient_affection_putaffection
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__ps_mobile_patient_affection_putaffection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_affection_putaffection')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AffectionController::putAffectionAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_affection_putaffection:

        }

        // fr__RG__ps_mobile_patient_allergie_getallergies
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/allergies$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_allergie_getallergies;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_allergie_getallergies')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::getAllergiesAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_allergie_getallergies:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_allergie_getallergies
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/allergies$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_allergie_getallergies;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_allergie_getallergies')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::getAllergiesAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_allergie_getallergies:

            // es__RG__ps_mobile_patient_allergie_getallergies
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/allergies$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_allergie_getallergies;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_allergie_getallergies')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::getAllergiesAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_allergie_getallergies:

        }

        // fr__RG__ps_mobile_patient_allergie_getallergie
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_allergie_getallergie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_allergie_getallergie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::getAllergieAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_allergie_getallergie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_allergie_getallergie
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_allergie_getallergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_allergie_getallergie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::getAllergieAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_allergie_getallergie:

            // es__RG__ps_mobile_patient_allergie_getallergie
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_allergie_getallergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_allergie_getallergie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::getAllergieAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_allergie_getallergie:

        }

        // fr__RG__ps_mobile_patient_allergie_deleteallergie
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__ps_mobile_patient_allergie_deleteallergie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_allergie_deleteallergie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::deleteAllergieAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_allergie_deleteallergie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_allergie_deleteallergie
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__ps_mobile_patient_allergie_deleteallergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_allergie_deleteallergie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::deleteAllergieAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_allergie_deleteallergie:

            // es__RG__ps_mobile_patient_allergie_deleteallergie
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__ps_mobile_patient_allergie_deleteallergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_allergie_deleteallergie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::deleteAllergieAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_allergie_deleteallergie:

        }

        // fr__RG__ps_mobile_patient_allergie_postallergie
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/allergies$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_allergie_postallergie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_allergie_postallergie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::postAllergieAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_allergie_postallergie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_allergie_postallergie
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/allergies$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_allergie_postallergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_allergie_postallergie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::postAllergieAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_allergie_postallergie:

            // es__RG__ps_mobile_patient_allergie_postallergie
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/allergies$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_allergie_postallergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_allergie_postallergie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::postAllergieAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_allergie_postallergie:

        }

        // fr__RG__ps_mobile_patient_allergie_putallergie
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__ps_mobile_patient_allergie_putallergie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_allergie_putallergie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::putAllergieAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_allergie_putallergie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_allergie_putallergie
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__ps_mobile_patient_allergie_putallergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_allergie_putallergie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::putAllergieAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_allergie_putallergie:

            // es__RG__ps_mobile_patient_allergie_putallergie
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__ps_mobile_patient_allergie_putallergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_allergie_putallergie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AllergieController::putAllergieAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_allergie_putallergie:

        }

        // fr__RG__ps_mobile_patient_analyse_getanalyses
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_analyse_getanalyses;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_analyse_getanalyses')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AnalyseController::getAnalysesAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_analyse_getanalyses:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_analyse_getanalyses
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_analyse_getanalyses;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_analyse_getanalyses')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AnalyseController::getAnalysesAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_analyse_getanalyses:

            // es__RG__ps_mobile_patient_analyse_getanalyses
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_analyse_getanalyses;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_analyse_getanalyses')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AnalyseController::getAnalysesAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_analyse_getanalyses:

        }

        // fr__RG__ps_mobile_patient_associe_getassocies
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/associes$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_associe_getassocies;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_associe_getassocies')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::getAssociesAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_associe_getassocies:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_associe_getassocies
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/associes$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_associe_getassocies;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_associe_getassocies')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::getAssociesAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_associe_getassocies:

            // es__RG__ps_mobile_patient_associe_getassocies
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/associes$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_associe_getassocies;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_associe_getassocies')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::getAssociesAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_associe_getassocies:

        }

        // fr__RG__ps_mobile_patient_associe_postassocie
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/associes$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_associe_postassocie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_associe_postassocie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::postAssocieAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_associe_postassocie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_associe_postassocie
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/associes$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_associe_postassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_associe_postassocie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::postAssocieAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_associe_postassocie:

            // es__RG__ps_mobile_patient_associe_postassocie
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/associes$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_associe_postassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_associe_postassocie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::postAssocieAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_associe_postassocie:

        }

        // fr__RG__ps_mobile_patient_associe_patchassocie
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/associes/(?P<associe>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__ps_mobile_patient_associe_patchassocie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_associe_patchassocie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::patchAssocieAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_associe_patchassocie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_associe_patchassocie
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/associes/(?P<associe>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__ps_mobile_patient_associe_patchassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_associe_patchassocie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::patchAssocieAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_associe_patchassocie:

            // es__RG__ps_mobile_patient_associe_patchassocie
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/associes/(?P<associe>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__ps_mobile_patient_associe_patchassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_associe_patchassocie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::patchAssocieAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_associe_patchassocie:

        }

        // fr__RG__ps_mobile_patient_associe_getpatientassocie
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/associes/(?P<associe>[^/]++)/patient$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__ps_mobile_patient_associe_getpatientassocie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_associe_getpatientassocie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::getPatientAssocieAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_associe_getpatientassocie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_associe_getpatientassocie
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/associes/(?P<associe>[^/]++)/patient$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__ps_mobile_patient_associe_getpatientassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_associe_getpatientassocie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::getPatientAssocieAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_associe_getpatientassocie:

            // es__RG__ps_mobile_patient_associe_getpatientassocie
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/associes/(?P<associe>[^/]++)/patient$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__ps_mobile_patient_associe_getpatientassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_associe_getpatientassocie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::getPatientAssocieAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_associe_getpatientassocie:

        }

        // fr__RG__ps_mobile_patient_associe_deleteassocie
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/associes/(?P<associe>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__ps_mobile_patient_associe_deleteassocie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_associe_deleteassocie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::deleteAssocieAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_associe_deleteassocie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_associe_deleteassocie
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/associes/(?P<associe>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__ps_mobile_patient_associe_deleteassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_associe_deleteassocie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::deleteAssocieAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_associe_deleteassocie:

            // es__RG__ps_mobile_patient_associe_deleteassocie
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/associes/(?P<associe>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__ps_mobile_patient_associe_deleteassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_associe_deleteassocie')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssocieController::deleteAssocieAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_associe_deleteassocie:

        }

        // fr__RG__ps_mobile_patient_assurance_getassurances
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/assurances$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_assurance_getassurances;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_assurance_getassurances')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::getAssurancesAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_assurance_getassurances:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_assurance_getassurances
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/assurances$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_assurance_getassurances;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_assurance_getassurances')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::getAssurancesAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_assurance_getassurances:

            // es__RG__ps_mobile_patient_assurance_getassurances
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/assurances$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_assurance_getassurances;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_assurance_getassurances')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::getAssurancesAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_assurance_getassurances:

        }

        // fr__RG__ps_mobile_patient_assurance_getassurance
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_assurance_getassurance;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_assurance_getassurance')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::getAssuranceAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_assurance_getassurance:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_assurance_getassurance
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_assurance_getassurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_assurance_getassurance')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::getAssuranceAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_assurance_getassurance:

            // es__RG__ps_mobile_patient_assurance_getassurance
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_assurance_getassurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_assurance_getassurance')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::getAssuranceAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_assurance_getassurance:

        }

        // fr__RG__ps_mobile_patient_assurance_deleteassurance
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__ps_mobile_patient_assurance_deleteassurance;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_assurance_deleteassurance')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::deleteAssuranceAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_assurance_deleteassurance:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_assurance_deleteassurance
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__ps_mobile_patient_assurance_deleteassurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_assurance_deleteassurance')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::deleteAssuranceAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_assurance_deleteassurance:

            // es__RG__ps_mobile_patient_assurance_deleteassurance
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__ps_mobile_patient_assurance_deleteassurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_assurance_deleteassurance')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::deleteAssuranceAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_assurance_deleteassurance:

        }

        // fr__RG__ps_mobile_patient_assurance_postassurance
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/assurances$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_assurance_postassurance;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_assurance_postassurance')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::postAssuranceAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_assurance_postassurance:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_assurance_postassurance
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/assurances$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_assurance_postassurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_assurance_postassurance')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::postAssuranceAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_assurance_postassurance:

            // es__RG__ps_mobile_patient_assurance_postassurance
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/assurances$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_assurance_postassurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_assurance_postassurance')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::postAssuranceAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_assurance_postassurance:

        }

        // fr__RG__ps_mobile_patient_assurance_putassurance
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__ps_mobile_patient_assurance_putassurance;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_assurance_putassurance')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::putAssuranceAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_assurance_putassurance:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_assurance_putassurance
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__ps_mobile_patient_assurance_putassurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_assurance_putassurance')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::putAssuranceAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_assurance_putassurance:

            // es__RG__ps_mobile_patient_assurance_putassurance
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__ps_mobile_patient_assurance_putassurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_assurance_putassurance')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\AssuranceController::putAssuranceAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_assurance_putassurance:

        }

        // fr__RG__ps_mobile_patient_constante_getdataconstante
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<constante>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_constante_getdataconstante;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_constante_getdataconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::getDataConstanteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_constante_getdataconstante:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_constante_getdataconstante
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<constante>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_constante_getdataconstante;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_constante_getdataconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::getDataConstanteAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_constante_getdataconstante:

            // es__RG__ps_mobile_patient_constante_getdataconstante
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<constante>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_constante_getdataconstante;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_constante_getdataconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::getDataConstanteAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_constante_getdataconstante:

        }

        // fr__RG__ps_mobile_patient_constante_deleteconstante
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<constante>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__ps_mobile_patient_constante_deleteconstante;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_constante_deleteconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::deleteConstanteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_constante_deleteconstante:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_constante_deleteconstante
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<constante>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__ps_mobile_patient_constante_deleteconstante;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_constante_deleteconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::deleteConstanteAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_constante_deleteconstante:

            // es__RG__ps_mobile_patient_constante_deleteconstante
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<constante>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__ps_mobile_patient_constante_deleteconstante;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_constante_deleteconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::deleteConstanteAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_constante_deleteconstante:

        }

        // fr__RG__ps_mobile_patient_constante_getconstante
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<constante>[^/]++)/donnees/(?P<patientConstante>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_constante_getconstante;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_constante_getconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::getConstanteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_constante_getconstante:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_constante_getconstante
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<constante>[^/]++)/donnees/(?P<patientConstante>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_constante_getconstante;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_constante_getconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::getConstanteAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_constante_getconstante:

            // es__RG__ps_mobile_patient_constante_getconstante
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<constante>[^/]++)/donnees/(?P<patientConstante>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_constante_getconstante;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_constante_getconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::getConstanteAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_constante_getconstante:

        }

        // fr__RG__ps_mobile_patient_constante_putconstante
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<constante>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__ps_mobile_patient_constante_putconstante;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_constante_putconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::putConstanteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_constante_putconstante:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_constante_putconstante
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<constante>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__ps_mobile_patient_constante_putconstante;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_constante_putconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::putConstanteAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_constante_putconstante:

            // es__RG__ps_mobile_patient_constante_putconstante
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<constante>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__ps_mobile_patient_constante_putconstante;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_constante_putconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::putConstanteAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_constante_putconstante:

        }

        // fr__RG__ps_mobile_patient_constante_postconstante
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<mesure>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_constante_postconstante;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_constante_postconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::postConstanteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_constante_postconstante:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_constante_postconstante
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<mesure>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_constante_postconstante;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_constante_postconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::postConstanteAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_constante_postconstante:

            // es__RG__ps_mobile_patient_constante_postconstante
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/constantes/(?P<mesure>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_constante_postconstante;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_constante_postconstante')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConstanteController::postConstanteAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_constante_postconstante:

        }

        // fr__RG__ps_mobile_patient_consultation_getconsultations
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_consultation_getconsultations;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_consultation_getconsultations')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConsultationController::getConsultationsAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_consultation_getconsultations:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_consultation_getconsultations
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_consultation_getconsultations;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_consultation_getconsultations')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConsultationController::getConsultationsAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_consultation_getconsultations:

            // es__RG__ps_mobile_patient_consultation_getconsultations
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_consultation_getconsultations;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_consultation_getconsultations')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConsultationController::getConsultationsAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_consultation_getconsultations:

        }

        // fr__RG__ps_mobile_patient_consultation_getconsultation
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_consultation_getconsultation;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_consultation_getconsultation')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConsultationController::getConsultationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_consultation_getconsultation:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_consultation_getconsultation
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_consultation_getconsultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_consultation_getconsultation')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConsultationController::getConsultationAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_consultation_getconsultation:

            // es__RG__ps_mobile_patient_consultation_getconsultation
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_consultation_getconsultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_consultation_getconsultation')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ConsultationController::getConsultationAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_consultation_getconsultation:

        }

        // fr__RG__ps_mobile_patient_contact_getcontacts
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/contacts$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_contact_getcontacts;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_contact_getcontacts')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::getContactsAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_contact_getcontacts:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_contact_getcontacts
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/contacts$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_contact_getcontacts;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_contact_getcontacts')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::getContactsAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_contact_getcontacts:

            // es__RG__ps_mobile_patient_contact_getcontacts
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/contacts$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_contact_getcontacts;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_contact_getcontacts')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::getContactsAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_contact_getcontacts:

        }

        // fr__RG__ps_mobile_patient_contact_getcontact
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_contact_getcontact;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_contact_getcontact')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::getContactAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_contact_getcontact:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_contact_getcontact
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_contact_getcontact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_contact_getcontact')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::getContactAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_contact_getcontact:

            // es__RG__ps_mobile_patient_contact_getcontact
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_contact_getcontact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_contact_getcontact')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::getContactAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_contact_getcontact:

        }

        // fr__RG__ps_mobile_patient_contact_deletecontact
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__ps_mobile_patient_contact_deletecontact;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_contact_deletecontact')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::deleteContactAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_contact_deletecontact:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_contact_deletecontact
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__ps_mobile_patient_contact_deletecontact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_contact_deletecontact')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::deleteContactAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_contact_deletecontact:

            // es__RG__ps_mobile_patient_contact_deletecontact
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__ps_mobile_patient_contact_deletecontact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_contact_deletecontact')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::deleteContactAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_contact_deletecontact:

        }

        // fr__RG__ps_mobile_patient_contact_postcontact
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/contacts$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_contact_postcontact;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_contact_postcontact')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::postContactAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_contact_postcontact:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_contact_postcontact
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/contacts$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_contact_postcontact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_contact_postcontact')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::postContactAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_contact_postcontact:

            // es__RG__ps_mobile_patient_contact_postcontact
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/contacts$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_contact_postcontact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_contact_postcontact')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::postContactAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_contact_postcontact:

        }

        // fr__RG__ps_mobile_patient_contact_putcontact
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__ps_mobile_patient_contact_putcontact;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_contact_putcontact')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::putContactAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_contact_putcontact:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_contact_putcontact
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__ps_mobile_patient_contact_putcontact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_contact_putcontact')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::putContactAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_contact_putcontact:

            // es__RG__ps_mobile_patient_contact_putcontact
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__ps_mobile_patient_contact_putcontact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_contact_putcontact')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\ContactController::putContactAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_contact_putcontact:

        }

        // fr__RG__ps_mobile_patient_medecin_getmedecins
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_medecin_getmedecins;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_medecin_getmedecins')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::getMedecinsAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_medecin_getmedecins:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_medecin_getmedecins
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_medecin_getmedecins;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_medecin_getmedecins')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::getMedecinsAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_medecin_getmedecins:

            // es__RG__ps_mobile_patient_medecin_getmedecins
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_medecin_getmedecins;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_medecin_getmedecins')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::getMedecinsAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_medecin_getmedecins:

        }

        // fr__RG__ps_mobile_patient_medecin_getmedecin
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_medecin_getmedecin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_medecin_getmedecin')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::getMedecinAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_medecin_getmedecin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_medecin_getmedecin
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_medecin_getmedecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_medecin_getmedecin')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::getMedecinAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_medecin_getmedecin:

            // es__RG__ps_mobile_patient_medecin_getmedecin
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_medecin_getmedecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_medecin_getmedecin')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::getMedecinAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_medecin_getmedecin:

        }

        // fr__RG__ps_mobile_patient_medecin_deletemedecin
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__ps_mobile_patient_medecin_deletemedecin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_medecin_deletemedecin')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::deleteMedecinAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_medecin_deletemedecin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_medecin_deletemedecin
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__ps_mobile_patient_medecin_deletemedecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_medecin_deletemedecin')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::deleteMedecinAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_medecin_deletemedecin:

            // es__RG__ps_mobile_patient_medecin_deletemedecin
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__ps_mobile_patient_medecin_deletemedecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_medecin_deletemedecin')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::deleteMedecinAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_medecin_deletemedecin:

        }

        // fr__RG__ps_mobile_patient_medecin_postmedecin
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_medecin_postmedecin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_medecin_postmedecin')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::postMedecinAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_medecin_postmedecin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_medecin_postmedecin
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_medecin_postmedecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_medecin_postmedecin')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::postMedecinAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_medecin_postmedecin:

            // es__RG__ps_mobile_patient_medecin_postmedecin
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_medecin_postmedecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_medecin_postmedecin')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::postMedecinAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_medecin_postmedecin:

        }

        // fr__RG__ps_mobile_patient_medecin_putmedecin
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__ps_mobile_patient_medecin_putmedecin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_medecin_putmedecin')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::putMedecinAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_medecin_putmedecin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_medecin_putmedecin
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__ps_mobile_patient_medecin_putmedecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_medecin_putmedecin')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::putMedecinAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_medecin_putmedecin:

            // es__RG__ps_mobile_patient_medecin_putmedecin
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__ps_mobile_patient_medecin_putmedecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_medecin_putmedecin')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\MedecinController::putMedecinAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_medecin_putmedecin:

        }

        // fr__RG__ps_mobile_patient_ordonnance_getmedicaments
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_ordonnance_getmedicaments;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_ordonnance_getmedicaments')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\OrdonnanceController::getMedicamentsAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_ordonnance_getmedicaments:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_ordonnance_getmedicaments
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_ordonnance_getmedicaments;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_ordonnance_getmedicaments')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\OrdonnanceController::getMedicamentsAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_ordonnance_getmedicaments:

            // es__RG__ps_mobile_patient_ordonnance_getmedicaments
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_ordonnance_getmedicaments;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_ordonnance_getmedicaments')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\OrdonnanceController::getMedicamentsAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_ordonnance_getmedicaments:

        }

        // fr__RG__ps_mobile_patient_patient_getpatient
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/profil$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_patient_getpatient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_patient_getpatient')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::getPatientAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_patient_getpatient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_patient_getpatient
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/profil$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_patient_getpatient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_patient_getpatient')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::getPatientAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_patient_getpatient:

            // es__RG__ps_mobile_patient_patient_getpatient
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/profil$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_patient_getpatient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_patient_getpatient')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::getPatientAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_patient_getpatient:

        }

        // fr__RG__ps_mobile_patient_patient_postprofil
        if ('/api/v2/profil' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_patient_postprofil;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::postProfilAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_patient_patient_postprofil',);
        }
        not_fr__RG__ps_mobile_patient_patient_postprofil:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_patient_postprofil
            if ('/en/api/v2/profil' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_patient_postprofil;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::postProfilAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_patient_patient_postprofil',);
            }
            not_en__RG__ps_mobile_patient_patient_postprofil:

            // es__RG__ps_mobile_patient_patient_postprofil
            if ('/es/api/v2/profil' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_patient_postprofil;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::postProfilAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_patient_patient_postprofil',);
            }
            not_es__RG__ps_mobile_patient_patient_postprofil:

        }

        // fr__RG__ps_mobile_patient_patient_getprofil
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_patient_getprofil;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_patient_getprofil')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::getProfilAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_patient_getprofil:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_patient_getprofil
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_patient_getprofil;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_patient_getprofil')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::getProfilAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_patient_getprofil:

            // es__RG__ps_mobile_patient_patient_getprofil
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_patient_getprofil;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_patient_getprofil')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::getProfilAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_patient_getprofil:

        }

        // fr__RG__ps_mobile_patient_patient_patchprofil
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__ps_mobile_patient_patient_patchprofil;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_patient_patchprofil')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::patchProfilAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_patient_patchprofil:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_patient_patchprofil
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__ps_mobile_patient_patient_patchprofil;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_patient_patchprofil')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::patchProfilAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_patient_patchprofil:

            // es__RG__ps_mobile_patient_patient_patchprofil
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__ps_mobile_patient_patient_patchprofil;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_patient_patchprofil')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::patchProfilAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_patient_patchprofil:

        }

        // fr__RG__ps_mobile_patient_patient_postphoto
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/photo$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_patient_postphoto;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_patient_postphoto')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::postPhotoAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_patient_postphoto:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_patient_postphoto
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/photo$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_patient_postphoto;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_patient_postphoto')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::postPhotoAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_patient_postphoto:

            // es__RG__ps_mobile_patient_patient_postphoto
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/photo$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_patient_postphoto;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_patient_postphoto')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::postPhotoAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_patient_postphoto:

        }

        // fr__RG__ps_mobile_patient_patient_patchuser
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/user$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__ps_mobile_patient_patient_patchuser;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_patient_patchuser')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::patchUserAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_patient_patchuser:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_patient_patchuser
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/user$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__ps_mobile_patient_patient_patchuser;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_patient_patchuser')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::patchUserAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_patient_patchuser:

            // es__RG__ps_mobile_patient_patient_patchuser
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/user$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__ps_mobile_patient_patient_patchuser;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_patient_patchuser')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::patchUserAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_patient_patchuser:

        }

        // fr__RG__ps_mobile_patient_patient_getuser
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/user$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_patient_getuser;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_patient_getuser')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::getUserAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_patient_getuser:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_patient_getuser
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/user$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_patient_getuser;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_patient_getuser')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::getUserAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_patient_getuser:

            // es__RG__ps_mobile_patient_patient_getuser
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/user$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_patient_getuser;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_patient_getuser')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\PatientController::getUserAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_patient_getuser:

        }

        // fr__RG__ps_mobile_patient_questionnaire_postquestionnaire
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/questionnaires/(?P<questionnaire>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_questionnaire_postquestionnaire;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_questionnaire_postquestionnaire')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\QuestionnaireController::postQuestionnaireAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_questionnaire_postquestionnaire:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_questionnaire_postquestionnaire
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/questionnaires/(?P<questionnaire>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_questionnaire_postquestionnaire;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_questionnaire_postquestionnaire')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\QuestionnaireController::postQuestionnaireAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_questionnaire_postquestionnaire:

            // es__RG__ps_mobile_patient_questionnaire_postquestionnaire
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/questionnaires/(?P<questionnaire>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_questionnaire_postquestionnaire;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_questionnaire_postquestionnaire')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\QuestionnaireController::postQuestionnaireAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_questionnaire_postquestionnaire:

        }

        // fr__RG__ps_mobile_patient_rendezvous_getallrendezvous
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_rendezvous_getallrendezvous;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_rendezvous_getallrendezvous')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\RendezVousController::getAllRendezVousAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_rendezvous_getallrendezvous:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_rendezvous_getallrendezvous
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_rendezvous_getallrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_rendezvous_getallrendezvous')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\RendezVousController::getAllRendezVousAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_rendezvous_getallrendezvous:

            // es__RG__ps_mobile_patient_rendezvous_getallrendezvous
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_rendezvous_getallrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_rendezvous_getallrendezvous')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\RendezVousController::getAllRendezVousAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_rendezvous_getallrendezvous:

        }

        // fr__RG__ps_mobile_patient_rendezvous_getrendezvous
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/rendez\\-vous/(?P<rdv>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_rendezvous_getrendezvous;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_rendezvous_getrendezvous')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\RendezVousController::getRendezVousAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_rendezvous_getrendezvous:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_rendezvous_getrendezvous
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/rendez\\-vous/(?P<rdv>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_rendezvous_getrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_rendezvous_getrendezvous')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\RendezVousController::getRendezVousAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_rendezvous_getrendezvous:

            // es__RG__ps_mobile_patient_rendezvous_getrendezvous
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/rendez\\-vous/(?P<rdv>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_rendezvous_getrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_rendezvous_getrendezvous')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\RendezVousController::getRendezVousAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_rendezvous_getrendezvous:

        }

        // fr__RG__ps_mobile_patient_rendezvous_postrendezvous
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_rendezvous_postrendezvous;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_rendezvous_postrendezvous')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\RendezVousController::postRendezVousAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_rendezvous_postrendezvous:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_rendezvous_postrendezvous
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_rendezvous_postrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_rendezvous_postrendezvous')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\RendezVousController::postRendezVousAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_rendezvous_postrendezvous:

            // es__RG__ps_mobile_patient_rendezvous_postrendezvous
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_rendezvous_postrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_rendezvous_postrendezvous')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\RendezVousController::postRendezVousAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_rendezvous_postrendezvous:

        }

        // fr__RG__ps_mobile_patient_rendezvous_patchrendezvous
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/rendez\\-vous/(?P<rdv>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__ps_mobile_patient_rendezvous_patchrendezvous;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_rendezvous_patchrendezvous')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\RendezVousController::patchRendezVousAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_rendezvous_patchrendezvous:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_rendezvous_patchrendezvous
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/rendez\\-vous/(?P<rdv>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__ps_mobile_patient_rendezvous_patchrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_rendezvous_patchrendezvous')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\RendezVousController::patchRendezVousAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_rendezvous_patchrendezvous:

            // es__RG__ps_mobile_patient_rendezvous_patchrendezvous
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/rendez\\-vous/(?P<rdv>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__ps_mobile_patient_rendezvous_patchrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_rendezvous_patchrendezvous')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\RendezVousController::patchRendezVousAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_rendezvous_patchrendezvous:

        }

        // fr__RG__ps_mobile_patient_soumission_getsoumissions
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/questionnaires/(?P<questionnaire>[^/]++)/soumissions$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_soumission_getsoumissions;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_soumission_getsoumissions')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\SoumissionController::getSoumissionsAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_soumission_getsoumissions:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_soumission_getsoumissions
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/questionnaires/(?P<questionnaire>[^/]++)/soumissions$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_soumission_getsoumissions;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_soumission_getsoumissions')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\SoumissionController::getSoumissionsAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_soumission_getsoumissions:

            // es__RG__ps_mobile_patient_soumission_getsoumissions
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/questionnaires/(?P<questionnaire>[^/]++)/soumissions$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_soumission_getsoumissions;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_soumission_getsoumissions')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\SoumissionController::getSoumissionsAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_soumission_getsoumissions:

        }

        // fr__RG__ps_mobile_patient_soumission_getsoumission
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<patient>[^/]++)/questionnaires/(?P<questionnaire>[^/]++)/soumissions/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_soumission_getsoumission;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_soumission_getsoumission')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\SoumissionController::getSoumissionAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_soumission_getsoumission:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_soumission_getsoumission
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<patient>[^/]++)/questionnaires/(?P<questionnaire>[^/]++)/soumissions/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_soumission_getsoumission;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_soumission_getsoumission')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\SoumissionController::getSoumissionAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_soumission_getsoumission:

            // es__RG__ps_mobile_patient_soumission_getsoumission
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<patient>[^/]++)/questionnaires/(?P<questionnaire>[^/]++)/soumissions/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_soumission_getsoumission;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_soumission_getsoumission')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\SoumissionController::getSoumissionAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_soumission_getsoumission:

        }

        // fr__RG__ps_mobile_patient_suivi_getsuivis
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/suivis$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_suivi_getsuivis;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_suivi_getsuivis')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\SuiviController::getSuivisAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_suivi_getsuivis:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_suivi_getsuivis
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/suivis$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_suivi_getsuivis;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_suivi_getsuivis')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\SuiviController::getSuivisAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_suivi_getsuivis:

            // es__RG__ps_mobile_patient_suivi_getsuivis
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/suivis$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_suivi_getsuivis;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_suivi_getsuivis')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\SuiviController::getSuivisAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_suivi_getsuivis:

        }

        // fr__RG__ps_mobile_patient_suivi_getsuivi
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/suivis/(?P<suivi>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_suivi_getsuivi;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_suivi_getsuivi')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\SuiviController::getSuiviAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_suivi_getsuivi:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_suivi_getsuivi
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/suivis/(?P<suivi>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_suivi_getsuivi;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_suivi_getsuivi')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\SuiviController::getSuiviAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_suivi_getsuivi:

            // es__RG__ps_mobile_patient_suivi_getsuivi
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/suivis/(?P<suivi>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_suivi_getsuivi;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_suivi_getsuivi')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\SuiviController::getSuiviAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_suivi_getsuivi:

        }

        // fr__RG__ps_mobile_patient_traitement_gettraitements
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/traitements$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_traitement_gettraitements;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_traitement_gettraitements')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::getTraitementsAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_traitement_gettraitements:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_traitement_gettraitements
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/traitements$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_traitement_gettraitements;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_traitement_gettraitements')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::getTraitementsAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_traitement_gettraitements:

            // es__RG__ps_mobile_patient_traitement_gettraitements
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/traitements$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_traitement_gettraitements;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_traitement_gettraitements')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::getTraitementsAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_traitement_gettraitements:

        }

        // fr__RG__ps_mobile_patient_traitement_gettraitement
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/traitements/(?P<traitement>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_traitement_gettraitement;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_traitement_gettraitement')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::getTraitementAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_traitement_gettraitement:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_traitement_gettraitement
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/traitements/(?P<traitement>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_traitement_gettraitement;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_traitement_gettraitement')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::getTraitementAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_traitement_gettraitement:

            // es__RG__ps_mobile_patient_traitement_gettraitement
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/traitements/(?P<traitement>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_traitement_gettraitement;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_traitement_gettraitement')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::getTraitementAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_traitement_gettraitement:

        }

        // fr__RG__ps_mobile_patient_traitement_deletetraitement
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/traitements/(?P<traitement>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__ps_mobile_patient_traitement_deletetraitement;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_traitement_deletetraitement')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::deleteTraitementAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_traitement_deletetraitement:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_traitement_deletetraitement
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/traitements/(?P<traitement>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__ps_mobile_patient_traitement_deletetraitement;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_traitement_deletetraitement')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::deleteTraitementAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_traitement_deletetraitement:

            // es__RG__ps_mobile_patient_traitement_deletetraitement
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/traitements/(?P<traitement>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__ps_mobile_patient_traitement_deletetraitement;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_traitement_deletetraitement')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::deleteTraitementAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_traitement_deletetraitement:

        }

        // fr__RG__ps_mobile_patient_traitement_posttraitement
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/traitements$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_traitement_posttraitement;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_traitement_posttraitement')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::postTraitementAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_traitement_posttraitement:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_traitement_posttraitement
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/traitements$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_traitement_posttraitement;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_traitement_posttraitement')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::postTraitementAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_traitement_posttraitement:

            // es__RG__ps_mobile_patient_traitement_posttraitement
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/traitements$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_traitement_posttraitement;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_traitement_posttraitement')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::postTraitementAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_traitement_posttraitement:

        }

        // fr__RG__ps_mobile_patient_traitement_puttraitement
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/traitements/(?P<traitement>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__ps_mobile_patient_traitement_puttraitement;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_traitement_puttraitement')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::putTraitementAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_traitement_puttraitement:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_traitement_puttraitement
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/traitements/(?P<traitement>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__ps_mobile_patient_traitement_puttraitement;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_traitement_puttraitement')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::putTraitementAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_traitement_puttraitement:

            // es__RG__ps_mobile_patient_traitement_puttraitement
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/traitements/(?P<traitement>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__ps_mobile_patient_traitement_puttraitement;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_traitement_puttraitement')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\TraitementController::putTraitementAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_traitement_puttraitement:

        }

        // fr__RG__ps_mobile_patient_vaccination_getvaccinations
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/vaccins$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_vaccination_getvaccinations;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_vaccination_getvaccinations')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::getVaccinationsAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_vaccination_getvaccinations:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_vaccination_getvaccinations
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/vaccins$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_vaccination_getvaccinations;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_vaccination_getvaccinations')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::getVaccinationsAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_vaccination_getvaccinations:

            // es__RG__ps_mobile_patient_vaccination_getvaccinations
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/vaccins$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_vaccination_getvaccinations;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_vaccination_getvaccinations')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::getVaccinationsAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_vaccination_getvaccinations:

        }

        // fr__RG__ps_mobile_patient_vaccination_getvaccination
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/vaccins/(?P<vaccination>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_patient_vaccination_getvaccination;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_vaccination_getvaccination')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::getVaccinationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_vaccination_getvaccination:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_vaccination_getvaccination
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/vaccins/(?P<vaccination>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_patient_vaccination_getvaccination;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_vaccination_getvaccination')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::getVaccinationAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_vaccination_getvaccination:

            // es__RG__ps_mobile_patient_vaccination_getvaccination
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/vaccins/(?P<vaccination>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_patient_vaccination_getvaccination;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_vaccination_getvaccination')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::getVaccinationAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_vaccination_getvaccination:

        }

        // fr__RG__ps_mobile_patient_vaccination_deletevaccination
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/vaccins/(?P<vaccination>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__ps_mobile_patient_vaccination_deletevaccination;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_vaccination_deletevaccination')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::deleteVaccinationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_vaccination_deletevaccination:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_vaccination_deletevaccination
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/vaccins/(?P<vaccination>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__ps_mobile_patient_vaccination_deletevaccination;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_vaccination_deletevaccination')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::deleteVaccinationAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_vaccination_deletevaccination:

            // es__RG__ps_mobile_patient_vaccination_deletevaccination
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/vaccins/(?P<vaccination>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__ps_mobile_patient_vaccination_deletevaccination;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_vaccination_deletevaccination')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::deleteVaccinationAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_vaccination_deletevaccination:

        }

        // fr__RG__ps_mobile_patient_vaccination_postvaccination
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/vaccins$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_patient_vaccination_postvaccination;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_vaccination_postvaccination')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::postVaccinationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_vaccination_postvaccination:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_vaccination_postvaccination
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/vaccins$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_patient_vaccination_postvaccination;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_vaccination_postvaccination')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::postVaccinationAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_vaccination_postvaccination:

            // es__RG__ps_mobile_patient_vaccination_postvaccination
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/vaccins$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_patient_vaccination_postvaccination;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_vaccination_postvaccination')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::postVaccinationAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_vaccination_postvaccination:

        }

        // fr__RG__ps_mobile_patient_vaccination_putvaccination
        if (0 === strpos($pathinfo, '/api/v2/patients') && preg_match('#^/api/v2/patients/(?P<id>[^/]++)/vaccins/(?P<vaccination>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__ps_mobile_patient_vaccination_putvaccination;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_patient_vaccination_putvaccination')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::putVaccinationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_patient_vaccination_putvaccination:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_patient_vaccination_putvaccination
            if (0 === strpos($pathinfo, '/en/api/v2/patients') && preg_match('#^/en/api/v2/patients/(?P<id>[^/]++)/vaccins/(?P<vaccination>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__ps_mobile_patient_vaccination_putvaccination;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_patient_vaccination_putvaccination')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::putVaccinationAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_patient_vaccination_putvaccination:

            // es__RG__ps_mobile_patient_vaccination_putvaccination
            if (0 === strpos($pathinfo, '/es/api/v2/patients') && preg_match('#^/es/api/v2/patients/(?P<id>[^/]++)/vaccins/(?P<vaccination>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__ps_mobile_patient_vaccination_putvaccination;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_patient_vaccination_putvaccination')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\Patient\\VaccinationController::putVaccinationAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_patient_vaccination_putvaccination:

        }

        // fr__RG__ps_mobile_pays_getpays
        if ('/api/v2/pays' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_pays_getpays;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\PaysController::getPaysAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_pays_getpays',);
        }
        not_fr__RG__ps_mobile_pays_getpays:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_pays_getpays
            if ('/en/api/v2/pays' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_pays_getpays;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\PaysController::getPaysAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_pays_getpays',);
            }
            not_en__RG__ps_mobile_pays_getpays:

            // es__RG__ps_mobile_pays_getpays
            if ('/es/api/v2/pays' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_pays_getpays;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\PaysController::getPaysAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_pays_getpays',);
            }
            not_es__RG__ps_mobile_pays_getpays:

        }

        // fr__RG__ps_mobile_pays_getvilles
        if (0 === strpos($pathinfo, '/api/v2/pays') && preg_match('#^/api/v2/pays/(?P<id>[^/]++)/villes$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_pays_getvilles;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_pays_getvilles')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\PaysController::getVillesAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_pays_getvilles:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_pays_getvilles
            if (0 === strpos($pathinfo, '/en/api/v2/pays') && preg_match('#^/en/api/v2/pays/(?P<id>[^/]++)/villes$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_pays_getvilles;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_pays_getvilles')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\PaysController::getVillesAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_pays_getvilles:

            // es__RG__ps_mobile_pays_getvilles
            if (0 === strpos($pathinfo, '/es/api/v2/pays') && preg_match('#^/es/api/v2/pays/(?P<id>[^/]++)/villes$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_pays_getvilles;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_pays_getvilles')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\PaysController::getVillesAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_pays_getvilles:

        }

        // fr__RG__ps_mobile_pharmacie_getpharmacies
        if ('/api/v2/pharmacies' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_pharmacie_getpharmacies;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\PharmacieController::getPharmaciesAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_pharmacie_getpharmacies',);
        }
        not_fr__RG__ps_mobile_pharmacie_getpharmacies:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_pharmacie_getpharmacies
            if ('/en/api/v2/pharmacies' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_pharmacie_getpharmacies;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\PharmacieController::getPharmaciesAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_pharmacie_getpharmacies',);
            }
            not_en__RG__ps_mobile_pharmacie_getpharmacies:

            // es__RG__ps_mobile_pharmacie_getpharmacies
            if ('/es/api/v2/pharmacies' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_pharmacie_getpharmacies;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\PharmacieController::getPharmaciesAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_pharmacie_getpharmacies',);
            }
            not_es__RG__ps_mobile_pharmacie_getpharmacies:

        }

        // fr__RG__ps_mobile_profil_patchuser
        if (0 === strpos($pathinfo, '/api/v2/users') && preg_match('#^/api/v2/users/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__ps_mobile_profil_patchuser;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_profil_patchuser')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\ProfilController::patchUserAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_profil_patchuser:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_profil_patchuser
            if (0 === strpos($pathinfo, '/en/api/v2/users') && preg_match('#^/en/api/v2/users/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__ps_mobile_profil_patchuser;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_profil_patchuser')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\ProfilController::patchUserAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_profil_patchuser:

            // es__RG__ps_mobile_profil_patchuser
            if (0 === strpos($pathinfo, '/es/api/v2/users') && preg_match('#^/es/api/v2/users/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__ps_mobile_profil_patchuser;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_profil_patchuser')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\ProfilController::patchUserAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_profil_patchuser:

        }

        // fr__RG__ps_mobile_questionnaire_getquestionnaires
        if ('/api/v2/questionnaires' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_questionnaire_getquestionnaires;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\QuestionnaireController::getQuestionnairesAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_questionnaire_getquestionnaires',);
        }
        not_fr__RG__ps_mobile_questionnaire_getquestionnaires:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_questionnaire_getquestionnaires
            if ('/en/api/v2/questionnaires' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_questionnaire_getquestionnaires;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\QuestionnaireController::getQuestionnairesAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_questionnaire_getquestionnaires',);
            }
            not_en__RG__ps_mobile_questionnaire_getquestionnaires:

            // es__RG__ps_mobile_questionnaire_getquestionnaires
            if ('/es/api/v2/questionnaires' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_questionnaire_getquestionnaires;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\QuestionnaireController::getQuestionnairesAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_questionnaire_getquestionnaires',);
            }
            not_es__RG__ps_mobile_questionnaire_getquestionnaires:

        }

        // fr__RG__ps_mobile_questionnaire_getlignequestionnaires
        if (0 === strpos($pathinfo, '/api/v2/questionnaires') && preg_match('#^/api/v2/questionnaires/(?P<id>[^/]++)/lignes$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_questionnaire_getlignequestionnaires;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_questionnaire_getlignequestionnaires')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\QuestionnaireController::getLigneQuestionnairesAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_questionnaire_getlignequestionnaires:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_questionnaire_getlignequestionnaires
            if (0 === strpos($pathinfo, '/en/api/v2/questionnaires') && preg_match('#^/en/api/v2/questionnaires/(?P<id>[^/]++)/lignes$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_questionnaire_getlignequestionnaires;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_questionnaire_getlignequestionnaires')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\QuestionnaireController::getLigneQuestionnairesAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_questionnaire_getlignequestionnaires:

            // es__RG__ps_mobile_questionnaire_getlignequestionnaires
            if (0 === strpos($pathinfo, '/es/api/v2/questionnaires') && preg_match('#^/es/api/v2/questionnaires/(?P<id>[^/]++)/lignes$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_questionnaire_getlignequestionnaires;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_questionnaire_getlignequestionnaires')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\QuestionnaireController::getLigneQuestionnairesAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_questionnaire_getlignequestionnaires:

        }

        // fr__RG__ps_mobile_registration_postregister
        if ('/api/v2/register' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_registration_postregister;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\RegistrationController::postRegisterAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_registration_postregister',);
        }
        not_fr__RG__ps_mobile_registration_postregister:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_registration_postregister
            if ('/en/api/v2/register' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_registration_postregister;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\RegistrationController::postRegisterAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_registration_postregister',);
            }
            not_en__RG__ps_mobile_registration_postregister:

            // es__RG__ps_mobile_registration_postregister
            if ('/es/api/v2/register' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_registration_postregister;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\RegistrationController::postRegisterAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_registration_postregister',);
            }
            not_es__RG__ps_mobile_registration_postregister:

        }

        // fr__RG__ps_mobile_registration_postmedecinregister
        if ('/api/v2/medecin/register' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_registration_postmedecinregister;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\RegistrationController::postMedecinRegisterAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_registration_postmedecinregister',);
        }
        not_fr__RG__ps_mobile_registration_postmedecinregister:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_registration_postmedecinregister
            if ('/en/api/v2/medecin/register' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_registration_postmedecinregister;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\RegistrationController::postMedecinRegisterAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_registration_postmedecinregister',);
            }
            not_en__RG__ps_mobile_registration_postmedecinregister:

            // es__RG__ps_mobile_registration_postmedecinregister
            if ('/es/api/v2/medecin/register' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_registration_postmedecinregister;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\RegistrationController::postMedecinRegisterAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_registration_postmedecinregister',);
            }
            not_es__RG__ps_mobile_registration_postmedecinregister:

        }

        // fr__RG__ps_mobile_religion_getreligions
        if ('/api/v2/religions' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_religion_getreligions;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\ReligionController::getReligionsAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_religion_getreligions',);
        }
        not_fr__RG__ps_mobile_religion_getreligions:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_religion_getreligions
            if ('/en/api/v2/religions' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_religion_getreligions;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\ReligionController::getReligionsAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_religion_getreligions',);
            }
            not_en__RG__ps_mobile_religion_getreligions:

            // es__RG__ps_mobile_religion_getreligions
            if ('/es/api/v2/religions' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_religion_getreligions;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\ReligionController::getReligionsAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_religion_getreligions',);
            }
            not_es__RG__ps_mobile_religion_getreligions:

        }

        // fr__RG__ps_mobile_resetting_postreset
        if ('/api/v2/reset-password' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_resetting_postreset;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\ResettingController::postResetAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_resetting_postreset',);
        }
        not_fr__RG__ps_mobile_resetting_postreset:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_resetting_postreset
            if ('/en/api/v2/reset-password' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_resetting_postreset;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\ResettingController::postResetAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_resetting_postreset',);
            }
            not_en__RG__ps_mobile_resetting_postreset:

            // es__RG__ps_mobile_resetting_postreset
            if ('/es/api/v2/reset-password' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_resetting_postreset;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\ResettingController::postResetAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_resetting_postreset',);
            }
            not_es__RG__ps_mobile_resetting_postreset:

        }

        // fr__RG__ps_mobile_resetting_reset
        if ('/api/v2/update-password' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_resetting_reset;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\ResettingController::resetAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_resetting_reset',);
        }
        not_fr__RG__ps_mobile_resetting_reset:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_resetting_reset
            if ('/en/api/v2/update-password' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_resetting_reset;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\ResettingController::resetAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_resetting_reset',);
            }
            not_en__RG__ps_mobile_resetting_reset:

            // es__RG__ps_mobile_resetting_reset
            if ('/es/api/v2/update-password' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_resetting_reset;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\ResettingController::resetAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_resetting_reset',);
            }
            not_es__RG__ps_mobile_resetting_reset:

        }

        // fr__RG__ps_mobile_security_postlogin
        if ('/api/v2/login' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_mobile_security_postlogin;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\SecurityController::postLoginAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_security_postlogin',);
        }
        not_fr__RG__ps_mobile_security_postlogin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_security_postlogin
            if ('/en/api/v2/login' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_mobile_security_postlogin;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\SecurityController::postLoginAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_security_postlogin',);
            }
            not_en__RG__ps_mobile_security_postlogin:

            // es__RG__ps_mobile_security_postlogin
            if ('/es/api/v2/login' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_mobile_security_postlogin;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\SecurityController::postLoginAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_security_postlogin',);
            }
            not_es__RG__ps_mobile_security_postlogin:

        }

        // fr__RG__ps_mobile_specialite_getspecialites
        if ('/api/v2/specialites' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_specialite_getspecialites;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\SpecialiteController::getSpecialitesAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_specialite_getspecialites',);
        }
        not_fr__RG__ps_mobile_specialite_getspecialites:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_specialite_getspecialites
            if ('/en/api/v2/specialites' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_specialite_getspecialites;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\SpecialiteController::getSpecialitesAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_specialite_getspecialites',);
            }
            not_en__RG__ps_mobile_specialite_getspecialites:

            // es__RG__ps_mobile_specialite_getspecialites
            if ('/es/api/v2/specialites' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_specialite_getspecialites;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\SpecialiteController::getSpecialitesAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_specialite_getspecialites',);
            }
            not_es__RG__ps_mobile_specialite_getspecialites:

        }

        // fr__RG__ps_mobile_specialite_getmedecins
        if (0 === strpos($pathinfo, '/api/v2/specialites') && preg_match('#^/api/v2/specialites/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_specialite_getmedecins;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_mobile_specialite_getmedecins')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\SpecialiteController::getMedecinsAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_mobile_specialite_getmedecins:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_specialite_getmedecins
            if (0 === strpos($pathinfo, '/en/api/v2/specialites') && preg_match('#^/en/api/v2/specialites/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_specialite_getmedecins;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_mobile_specialite_getmedecins')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\SpecialiteController::getMedecinsAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_mobile_specialite_getmedecins:

            // es__RG__ps_mobile_specialite_getmedecins
            if (0 === strpos($pathinfo, '/es/api/v2/specialites') && preg_match('#^/es/api/v2/specialites/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_specialite_getmedecins;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_mobile_specialite_getmedecins')), array (  '_controller' => 'PS\\MobileBundle\\Controller\\SpecialiteController::getMedecinsAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_mobile_specialite_getmedecins:

        }

        // fr__RG__ps_mobile_statut_getstatuts
        if ('/api/v2/statuts' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_statut_getstatuts;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\StatutController::getStatutsAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_statut_getstatuts',);
        }
        not_fr__RG__ps_mobile_statut_getstatuts:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_statut_getstatuts
            if ('/en/api/v2/statuts' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_statut_getstatuts;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\StatutController::getStatutsAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_statut_getstatuts',);
            }
            not_en__RG__ps_mobile_statut_getstatuts:

            // es__RG__ps_mobile_statut_getstatuts
            if ('/es/api/v2/statuts' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_statut_getstatuts;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\StatutController::getStatutsAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_statut_getstatuts',);
            }
            not_es__RG__ps_mobile_statut_getstatuts:

        }

        // fr__RG__ps_mobile_ville_getvilles
        if ('/api/v2/villes' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_mobile_ville_getvilles;
            }

            return array (  '_controller' => 'PS\\MobileBundle\\Controller\\VilleController::getVillesAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_mobile_ville_getvilles',);
        }
        not_fr__RG__ps_mobile_ville_getvilles:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_mobile_ville_getvilles
            if ('/en/api/v2/villes' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_mobile_ville_getvilles;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\VilleController::getVillesAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_mobile_ville_getvilles',);
            }
            not_en__RG__ps_mobile_ville_getvilles:

            // es__RG__ps_mobile_ville_getvilles
            if ('/es/api/v2/villes' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_mobile_ville_getvilles;
                }

                return array (  '_controller' => 'PS\\MobileBundle\\Controller\\VilleController::getVillesAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_mobile_ville_getvilles',);
            }
            not_es__RG__ps_mobile_ville_getvilles:

        }

        // fr__RG__gestion_patientconstante_index
        if ('/admin/patient/constante' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_patientconstante_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_patientconstante_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_patientconstante_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_patientconstante_index',);
        }
        not_fr__RG__gestion_patientconstante_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientconstante_index
            if ('/en/admin/patient/constante' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_patientconstante_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_patientconstante_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_patientconstante_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_patientconstante_index',);
            }
            not_en__RG__gestion_patientconstante_index:

            // es__RG__gestion_patientconstante_index
            if ('/es/admin/patient/constante' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_patientconstante_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_patientconstante_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_patientconstante_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_patientconstante_index',);
            }
            not_es__RG__gestion_patientconstante_index:

        }

        // fr__RG__gestion_patientconstante_data
        if (0 === strpos($pathinfo, '/admin/patient/constante/data') && preg_match('#^/admin/patient/constante/data/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_patientconstante_data;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_patientconstante_data')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::dataAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_patientconstante_data:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientconstante_data
            if (0 === strpos($pathinfo, '/en/admin/patient/constante/data') && preg_match('#^/en/admin/patient/constante/data/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_patientconstante_data;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_patientconstante_data')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::dataAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_patientconstante_data:

            // es__RG__gestion_patientconstante_data
            if (0 === strpos($pathinfo, '/es/admin/patient/constante/data') && preg_match('#^/es/admin/patient/constante/data/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_patientconstante_data;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_patientconstante_data')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::dataAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_patientconstante_data:

        }

        // fr__RG__gestion_patientconstante_data_patient
        if (0 === strpos($pathinfo, '/admin/patient/constante/data') && preg_match('#^/admin/patient/constante/data/(?P<id>[^/]++)(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_patientconstante_data_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_patientconstante_data_patient')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::dataAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_patientconstante_data_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientconstante_data_patient
            if (0 === strpos($pathinfo, '/en/admin/patient/constante/data') && preg_match('#^/en/admin/patient/constante/data/(?P<id>[^/]++)(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_patientconstante_data_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_patientconstante_data_patient')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::dataAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_patientconstante_data_patient:

            // es__RG__gestion_patientconstante_data_patient
            if (0 === strpos($pathinfo, '/es/admin/patient/constante/data') && preg_match('#^/es/admin/patient/constante/data/(?P<id>[^/]++)(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_patientconstante_data_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_patientconstante_data_patient')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::dataAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_patientconstante_data_patient:

        }

        // fr__RG__gestion_patientconstante_new
        if (0 === strpos($pathinfo, '/admin/patient/constante/new') && preg_match('#^/admin/patient/constante/new/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_patientconstante_new;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_patientconstante_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::newAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_patientconstante_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientconstante_new
            if (0 === strpos($pathinfo, '/en/admin/patient/constante/new') && preg_match('#^/en/admin/patient/constante/new/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_patientconstante_new;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_patientconstante_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::newAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_patientconstante_new:

            // es__RG__gestion_patientconstante_new
            if (0 === strpos($pathinfo, '/es/admin/patient/constante/new') && preg_match('#^/es/admin/patient/constante/new/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_patientconstante_new;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_patientconstante_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::newAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_patientconstante_new:

        }

        // fr__RG__gestion_patientconstante_show
        if (0 === strpos($pathinfo, '/admin/patient/constante') && preg_match('#^/admin/patient/constante/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_patientconstante_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_patientconstante_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_patientconstante_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientconstante_show
            if (0 === strpos($pathinfo, '/en/admin/patient/constante') && preg_match('#^/en/admin/patient/constante/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_patientconstante_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_patientconstante_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_patientconstante_show:

            // es__RG__gestion_patientconstante_show
            if (0 === strpos($pathinfo, '/es/admin/patient/constante') && preg_match('#^/es/admin/patient/constante/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_patientconstante_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_patientconstante_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_patientconstante_show:

        }

        // fr__RG__gestion_patientconstante_edit
        if (0 === strpos($pathinfo, '/admin/patient/constante') && preg_match('#^/admin/patient/constante/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_patientconstante_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_patientconstante_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_patientconstante_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientconstante_edit
            if (0 === strpos($pathinfo, '/en/admin/patient/constante') && preg_match('#^/en/admin/patient/constante/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_patientconstante_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_patientconstante_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_patientconstante_edit:

            // es__RG__gestion_patientconstante_edit
            if (0 === strpos($pathinfo, '/es/admin/patient/constante') && preg_match('#^/es/admin/patient/constante/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_patientconstante_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_patientconstante_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_patientconstante_edit:

        }

        // fr__RG__gestion_patientconstante_delete
        if (0 === strpos($pathinfo, '/admin/patient/constante') && preg_match('#^/admin/patient/constante/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_patientconstante_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_patientconstante_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_patientconstante_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientconstante_delete
            if (0 === strpos($pathinfo, '/en/admin/patient/constante') && preg_match('#^/en/admin/patient/constante/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_patientconstante_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_patientconstante_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_patientconstante_delete:

            // es__RG__gestion_patientconstante_delete
            if (0 === strpos($pathinfo, '/es/admin/patient/constante') && preg_match('#^/es/admin/patient/constante/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_patientconstante_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_patientconstante_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_patientconstante_delete:

        }

        // fr__RG__gestion_patientconstante_search
        if ('/admin/patient/constante/suivi-consultation-search' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('POST', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('POST', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_patientconstante_search;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_patientconstante_search',);
        }
        not_fr__RG__gestion_patientconstante_search:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientconstante_search
            if ('/en/admin/patient/constante/suivi-consultation-search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('POST', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('POST', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_patientconstante_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_patientconstante_search',);
            }
            not_en__RG__gestion_patientconstante_search:

            // es__RG__gestion_patientconstante_search
            if ('/es/admin/patient/constante/suivi-consultation-search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('POST', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('POST', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_patientconstante_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientConstanteController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_patientconstante_search',);
            }
            not_es__RG__gestion_patientconstante_search:

        }

        // fr__RG__gestion_urgence_index
        if ('/admin/gestion/urgence' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_urgence_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_urgence_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_urgence_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_urgence_index',);
        }
        not_fr__RG__gestion_urgence_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_urgence_index
            if ('/en/admin/gestion/urgence' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_urgence_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_urgence_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_urgence_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_urgence_index',);
            }
            not_en__RG__gestion_urgence_index:

            // es__RG__gestion_urgence_index
            if ('/es/admin/gestion/urgence' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_urgence_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_urgence_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_urgence_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_urgence_index',);
            }
            not_es__RG__gestion_urgence_index:

        }

        // fr__RG__gestion_urgence_new
        if ('/admin/gestion/urgence/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_urgence_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_urgence_new',);
        }
        not_fr__RG__gestion_urgence_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_urgence_new
            if ('/en/admin/gestion/urgence/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_urgence_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_urgence_new',);
            }
            not_en__RG__gestion_urgence_new:

            // es__RG__gestion_urgence_new
            if ('/es/admin/gestion/urgence/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_urgence_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_urgence_new',);
            }
            not_es__RG__gestion_urgence_new:

        }

        // fr__RG__gestion_urgence_show
        if (0 === strpos($pathinfo, '/admin/gestion/urgence') && preg_match('#^/admin/gestion/urgence/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_urgence_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_urgence_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_urgence_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_urgence_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/urgence') && preg_match('#^/en/admin/gestion/urgence/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_urgence_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_urgence_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_urgence_show:

            // es__RG__gestion_urgence_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/urgence') && preg_match('#^/es/admin/gestion/urgence/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_urgence_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_urgence_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_urgence_show:

        }

        // fr__RG__gestion_urgence_edit
        if (0 === strpos($pathinfo, '/admin/gestion/urgence') && preg_match('#^/admin/gestion/urgence/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_urgence_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_urgence_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_urgence_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_urgence_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/urgence') && preg_match('#^/en/admin/gestion/urgence/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_urgence_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_urgence_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_urgence_edit:

            // es__RG__gestion_urgence_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/urgence') && preg_match('#^/es/admin/gestion/urgence/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_urgence_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_urgence_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_urgence_edit:

        }

        // fr__RG__gestion_urgence_delete
        if (0 === strpos($pathinfo, '/admin/gestion/urgence') && preg_match('#^/admin/gestion/urgence/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_urgence_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_urgence_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_urgence_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_urgence_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/urgence') && preg_match('#^/en/admin/gestion/urgence/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_urgence_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_urgence_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_urgence_delete:

            // es__RG__gestion_urgence_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/urgence') && preg_match('#^/es/admin/gestion/urgence/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_urgence_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_urgence_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\UrgenceController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_urgence_delete:

        }

        // fr__RG__gestion_historiqueurgence_index
        if (0 === strpos($pathinfo, '/admin/gestion/historique-urgence') && preg_match('#^/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_historiqueurgence_index;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_historiqueurgence_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::indexAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_historiqueurgence_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_historiqueurgence_index
            if (0 === strpos($pathinfo, '/en/admin/gestion/historique-urgence') && preg_match('#^/en/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_historiqueurgence_index;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_historiqueurgence_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::indexAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_historiqueurgence_index:

            // es__RG__gestion_historiqueurgence_index
            if (0 === strpos($pathinfo, '/es/admin/gestion/historique-urgence') && preg_match('#^/es/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_historiqueurgence_index;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_historiqueurgence_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::indexAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_historiqueurgence_index:

        }

        // fr__RG__gestion_historiqueurgence_new
        if (0 === strpos($pathinfo, '/admin/gestion/historique-urgence') && preg_match('#^/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_historiqueurgence_new;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_historiqueurgence_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::newAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_historiqueurgence_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_historiqueurgence_new
            if (0 === strpos($pathinfo, '/en/admin/gestion/historique-urgence') && preg_match('#^/en/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_historiqueurgence_new;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_historiqueurgence_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::newAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_historiqueurgence_new:

            // es__RG__gestion_historiqueurgence_new
            if (0 === strpos($pathinfo, '/es/admin/gestion/historique-urgence') && preg_match('#^/es/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_historiqueurgence_new;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_historiqueurgence_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::newAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_historiqueurgence_new:

        }

        // fr__RG__gestion_historiqueurgence_show
        if (0 === strpos($pathinfo, '/admin/gestion/historique-urgence') && preg_match('#^/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_historiqueurgence_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_historiqueurgence_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_historiqueurgence_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_historiqueurgence_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/historique-urgence') && preg_match('#^/en/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_historiqueurgence_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_historiqueurgence_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_historiqueurgence_show:

            // es__RG__gestion_historiqueurgence_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/historique-urgence') && preg_match('#^/es/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_historiqueurgence_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_historiqueurgence_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_historiqueurgence_show:

        }

        // fr__RG__gestion_historiqueurgence_edit
        if (0 === strpos($pathinfo, '/admin/gestion/historique-urgence') && preg_match('#^/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_historiqueurgence_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_historiqueurgence_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_historiqueurgence_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_historiqueurgence_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/historique-urgence') && preg_match('#^/en/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_historiqueurgence_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_historiqueurgence_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_historiqueurgence_edit:

            // es__RG__gestion_historiqueurgence_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/historique-urgence') && preg_match('#^/es/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_historiqueurgence_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_historiqueurgence_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_historiqueurgence_edit:

        }

        // fr__RG__gestion_historiqueurgence_delete
        if (0 === strpos($pathinfo, '/admin/gestion/historique-urgence') && preg_match('#^/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_historiqueurgence_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_historiqueurgence_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_historiqueurgence_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_historiqueurgence_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/historique-urgence') && preg_match('#^/en/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_historiqueurgence_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_historiqueurgence_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_historiqueurgence_delete:

            // es__RG__gestion_historiqueurgence_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/historique-urgence') && preg_match('#^/es/admin/gestion/historique\\-urgence/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_historiqueurgence_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_historiqueurgence_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HistoriqueUrgenceController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_historiqueurgence_delete:

        }

        // fr__RG__gestion_patientquestionnaire_index
        if ('/admin/gestion/patient-questionnaire' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_patientquestionnaire_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_patientquestionnaire_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_patientquestionnaire_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_patientquestionnaire_index',);
        }
        not_fr__RG__gestion_patientquestionnaire_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientquestionnaire_index
            if ('/en/admin/gestion/patient-questionnaire' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_patientquestionnaire_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_patientquestionnaire_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_patientquestionnaire_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_patientquestionnaire_index',);
            }
            not_en__RG__gestion_patientquestionnaire_index:

            // es__RG__gestion_patientquestionnaire_index
            if ('/es/admin/gestion/patient-questionnaire' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_patientquestionnaire_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_patientquestionnaire_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_patientquestionnaire_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_patientquestionnaire_index',);
            }
            not_es__RG__gestion_patientquestionnaire_index:

        }

        // fr__RG__gestion_patientquestionnaire_new
        if ('/admin/gestion/patient-questionnaire/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_patientquestionnaire_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_patientquestionnaire_new',);
        }
        not_fr__RG__gestion_patientquestionnaire_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientquestionnaire_new
            if ('/en/admin/gestion/patient-questionnaire/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_patientquestionnaire_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_patientquestionnaire_new',);
            }
            not_en__RG__gestion_patientquestionnaire_new:

            // es__RG__gestion_patientquestionnaire_new
            if ('/es/admin/gestion/patient-questionnaire/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_patientquestionnaire_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_patientquestionnaire_new',);
            }
            not_es__RG__gestion_patientquestionnaire_new:

        }

        // fr__RG__gestion_patientquestionnaire_show
        if (0 === strpos($pathinfo, '/admin/gestion/patient-questionnaire') && preg_match('#^/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_patientquestionnaire_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_patientquestionnaire_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_patientquestionnaire_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientquestionnaire_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient-questionnaire') && preg_match('#^/en/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_patientquestionnaire_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_patientquestionnaire_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_patientquestionnaire_show:

            // es__RG__gestion_patientquestionnaire_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient-questionnaire') && preg_match('#^/es/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_patientquestionnaire_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_patientquestionnaire_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_patientquestionnaire_show:

        }

        // fr__RG__gestion_patientquestionnaire_edit
        if (0 === strpos($pathinfo, '/admin/gestion/patient-questionnaire') && preg_match('#^/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_patientquestionnaire_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_patientquestionnaire_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_patientquestionnaire_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientquestionnaire_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient-questionnaire') && preg_match('#^/en/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_patientquestionnaire_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_patientquestionnaire_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_patientquestionnaire_edit:

            // es__RG__gestion_patientquestionnaire_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient-questionnaire') && preg_match('#^/es/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_patientquestionnaire_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_patientquestionnaire_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_patientquestionnaire_edit:

        }

        // fr__RG__gestion_patientquestionnaire_delete
        if (0 === strpos($pathinfo, '/admin/gestion/patient-questionnaire') && preg_match('#^/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_patientquestionnaire_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_patientquestionnaire_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_patientquestionnaire_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientquestionnaire_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient-questionnaire') && preg_match('#^/en/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_patientquestionnaire_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_patientquestionnaire_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_patientquestionnaire_delete:

            // es__RG__gestion_patientquestionnaire_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient-questionnaire') && preg_match('#^/es/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_patientquestionnaire_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_patientquestionnaire_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_patientquestionnaire_delete:

        }

        // fr__RG__gestion_patientquestionnaire_traitement
        if (0 === strpos($pathinfo, '/admin/gestion/patient-questionnaire') && preg_match('#^/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/traitement$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_patientquestionnaire_traitement')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::traitementAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientquestionnaire_traitement
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient-questionnaire') && preg_match('#^/en/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/traitement$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_patientquestionnaire_traitement')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::traitementAction',  '_locale' => 'en',));
            }

            // es__RG__gestion_patientquestionnaire_traitement
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient-questionnaire') && preg_match('#^/es/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/traitement$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_patientquestionnaire_traitement')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::traitementAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__gestion_patientquestionnaire_resultat
        if (0 === strpos($pathinfo, '/admin/gestion/patient-questionnaire') && preg_match('#^/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/resultat$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_patientquestionnaire_resultat;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_patientquestionnaire_resultat')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::resultatAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_patientquestionnaire_resultat:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_patientquestionnaire_resultat
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient-questionnaire') && preg_match('#^/en/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/resultat$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_patientquestionnaire_resultat;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_patientquestionnaire_resultat')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::resultatAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_patientquestionnaire_resultat:

            // es__RG__gestion_patientquestionnaire_resultat
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient-questionnaire') && preg_match('#^/es/admin/gestion/patient\\-questionnaire/(?P<id>[^/]++)/resultat$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_patientquestionnaire_resultat;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_patientquestionnaire_resultat')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientQuestionnaireController::resultatAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_patientquestionnaire_resultat:

        }

        // fr__RG__gestion_lignequestionnaire_index
        if (0 === strpos($pathinfo, '/admin/gestion/ligne-questionnaire') && preg_match('#^/admin/gestion/ligne\\-questionnaire/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_lignequestionnaire_index;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_lignequestionnaire_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::indexAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_lignequestionnaire_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_lignequestionnaire_index
            if (0 === strpos($pathinfo, '/en/admin/gestion/ligne-questionnaire') && preg_match('#^/en/admin/gestion/ligne\\-questionnaire/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_lignequestionnaire_index;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_lignequestionnaire_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::indexAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_lignequestionnaire_index:

            // es__RG__gestion_lignequestionnaire_index
            if (0 === strpos($pathinfo, '/es/admin/gestion/ligne-questionnaire') && preg_match('#^/es/admin/gestion/ligne\\-questionnaire/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_lignequestionnaire_index;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_lignequestionnaire_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::indexAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_lignequestionnaire_index:

        }

        // fr__RG__gestion_lignequestionnaire_new
        if (0 === strpos($pathinfo, '/admin/gestion/ligne-questionnaire/new') && preg_match('#^/admin/gestion/ligne\\-questionnaire/new/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_lignequestionnaire_new;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_lignequestionnaire_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::newAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_lignequestionnaire_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_lignequestionnaire_new
            if (0 === strpos($pathinfo, '/en/admin/gestion/ligne-questionnaire/new') && preg_match('#^/en/admin/gestion/ligne\\-questionnaire/new/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_lignequestionnaire_new;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_lignequestionnaire_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::newAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_lignequestionnaire_new:

            // es__RG__gestion_lignequestionnaire_new
            if (0 === strpos($pathinfo, '/es/admin/gestion/ligne-questionnaire/new') && preg_match('#^/es/admin/gestion/ligne\\-questionnaire/new/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_lignequestionnaire_new;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_lignequestionnaire_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::newAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_lignequestionnaire_new:

        }

        // fr__RG__gestion_lignequestionnaire_show
        if (0 === strpos($pathinfo, '/admin/gestion/ligne-questionnaire') && preg_match('#^/admin/gestion/ligne\\-questionnaire/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_lignequestionnaire_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_lignequestionnaire_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_lignequestionnaire_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_lignequestionnaire_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/ligne-questionnaire') && preg_match('#^/en/admin/gestion/ligne\\-questionnaire/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_lignequestionnaire_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_lignequestionnaire_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_lignequestionnaire_show:

            // es__RG__gestion_lignequestionnaire_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/ligne-questionnaire') && preg_match('#^/es/admin/gestion/ligne\\-questionnaire/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_lignequestionnaire_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_lignequestionnaire_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_lignequestionnaire_show:

        }

        // fr__RG__gestion_lignequestionnaire_edit
        if (0 === strpos($pathinfo, '/admin/gestion/ligne-questionnaire') && preg_match('#^/admin/gestion/ligne\\-questionnaire/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_lignequestionnaire_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_lignequestionnaire_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_lignequestionnaire_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_lignequestionnaire_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/ligne-questionnaire') && preg_match('#^/en/admin/gestion/ligne\\-questionnaire/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_lignequestionnaire_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_lignequestionnaire_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_lignequestionnaire_edit:

            // es__RG__gestion_lignequestionnaire_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/ligne-questionnaire') && preg_match('#^/es/admin/gestion/ligne\\-questionnaire/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_lignequestionnaire_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_lignequestionnaire_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_lignequestionnaire_edit:

        }

        // fr__RG__gestion_lignequestionnaire_delete
        if (0 === strpos($pathinfo, '/admin/gestion/ligne-questionnaire') && preg_match('#^/admin/gestion/ligne\\-questionnaire/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_lignequestionnaire_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_lignequestionnaire_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_lignequestionnaire_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_lignequestionnaire_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/ligne-questionnaire') && preg_match('#^/en/admin/gestion/ligne\\-questionnaire/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_lignequestionnaire_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_lignequestionnaire_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_lignequestionnaire_delete:

            // es__RG__gestion_lignequestionnaire_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/ligne-questionnaire') && preg_match('#^/es/admin/gestion/ligne\\-questionnaire/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_lignequestionnaire_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_lignequestionnaire_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneQuestionnaireController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_lignequestionnaire_delete:

        }

        // fr__RG__gestion_questionnairedepistage_index
        if ('/admin/gestion/questionnaire-depistage' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_questionnairedepistage_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_questionnairedepistage_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_questionnairedepistage_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_questionnairedepistage_index',);
        }
        not_fr__RG__gestion_questionnairedepistage_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_questionnairedepistage_index
            if ('/en/admin/gestion/questionnaire-depistage' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_questionnairedepistage_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_questionnairedepistage_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_questionnairedepistage_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_questionnairedepistage_index',);
            }
            not_en__RG__gestion_questionnairedepistage_index:

            // es__RG__gestion_questionnairedepistage_index
            if ('/es/admin/gestion/questionnaire-depistage' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_questionnairedepistage_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_questionnairedepistage_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_questionnairedepistage_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_questionnairedepistage_index',);
            }
            not_es__RG__gestion_questionnairedepistage_index:

        }

        // fr__RG__gestion_questionnairedepistage_new
        if ('/admin/gestion/questionnaire-depistage/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_questionnairedepistage_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_questionnairedepistage_new',);
        }
        not_fr__RG__gestion_questionnairedepistage_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_questionnairedepistage_new
            if ('/en/admin/gestion/questionnaire-depistage/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_questionnairedepistage_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_questionnairedepistage_new',);
            }
            not_en__RG__gestion_questionnairedepistage_new:

            // es__RG__gestion_questionnairedepistage_new
            if ('/es/admin/gestion/questionnaire-depistage/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_questionnairedepistage_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_questionnairedepistage_new',);
            }
            not_es__RG__gestion_questionnairedepistage_new:

        }

        // fr__RG__gestion_questionnairedepistage_show
        if (0 === strpos($pathinfo, '/admin/gestion/questionnaire-depistage') && preg_match('#^/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_questionnairedepistage_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_questionnairedepistage_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_questionnairedepistage_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_questionnairedepistage_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/questionnaire-depistage') && preg_match('#^/en/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_questionnairedepistage_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_questionnairedepistage_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_questionnairedepistage_show:

            // es__RG__gestion_questionnairedepistage_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/questionnaire-depistage') && preg_match('#^/es/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_questionnairedepistage_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_questionnairedepistage_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_questionnairedepistage_show:

        }

        // fr__RG__gestion_questionnairedepistage_map
        if (0 === strpos($pathinfo, '/admin/gestion/questionnaire-depistage') && preg_match('#^/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/map$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_questionnairedepistage_map;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_questionnairedepistage_map')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::mapAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_questionnairedepistage_map:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_questionnairedepistage_map
            if (0 === strpos($pathinfo, '/en/admin/gestion/questionnaire-depistage') && preg_match('#^/en/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/map$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_questionnairedepistage_map;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_questionnairedepistage_map')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::mapAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_questionnairedepistage_map:

            // es__RG__gestion_questionnairedepistage_map
            if (0 === strpos($pathinfo, '/es/admin/gestion/questionnaire-depistage') && preg_match('#^/es/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/map$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_questionnairedepistage_map;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_questionnairedepistage_map')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::mapAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_questionnairedepistage_map:

        }

        // fr__RG__gestion_questionnairedepistage_stat
        if (0 === strpos($pathinfo, '/admin/gestion/questionnaire-depistage') && preg_match('#^/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/stat$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_questionnairedepistage_stat;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_questionnairedepistage_stat')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::statAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_questionnairedepistage_stat:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_questionnairedepistage_stat
            if (0 === strpos($pathinfo, '/en/admin/gestion/questionnaire-depistage') && preg_match('#^/en/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/stat$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_questionnairedepistage_stat;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_questionnairedepistage_stat')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::statAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_questionnairedepistage_stat:

            // es__RG__gestion_questionnairedepistage_stat
            if (0 === strpos($pathinfo, '/es/admin/gestion/questionnaire-depistage') && preg_match('#^/es/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/stat$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_questionnairedepistage_stat;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_questionnairedepistage_stat')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::statAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_questionnairedepistage_stat:

        }

        // fr__RG__gestion_questionnairedepistage_donnee_stat
        if (0 === strpos($pathinfo, '/admin/gestion/questionnaire-depistage') && preg_match('#^/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/donnee\\-stat$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_questionnairedepistage_donnee_stat;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_questionnairedepistage_donnee_stat')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::donneeStatAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_questionnairedepistage_donnee_stat:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_questionnairedepistage_donnee_stat
            if (0 === strpos($pathinfo, '/en/admin/gestion/questionnaire-depistage') && preg_match('#^/en/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/donnee\\-stat$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_questionnairedepistage_donnee_stat;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_questionnairedepistage_donnee_stat')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::donneeStatAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_questionnairedepistage_donnee_stat:

            // es__RG__gestion_questionnairedepistage_donnee_stat
            if (0 === strpos($pathinfo, '/es/admin/gestion/questionnaire-depistage') && preg_match('#^/es/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/donnee\\-stat$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_questionnairedepistage_donnee_stat;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_questionnairedepistage_donnee_stat')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::donneeStatAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_questionnairedepistage_donnee_stat:

        }

        // fr__RG__gestion_questionnairedepistage_edit
        if (0 === strpos($pathinfo, '/admin/gestion/questionnaire-depistage') && preg_match('#^/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_questionnairedepistage_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_questionnairedepistage_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_questionnairedepistage_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_questionnairedepistage_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/questionnaire-depistage') && preg_match('#^/en/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_questionnairedepistage_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_questionnairedepistage_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_questionnairedepistage_edit:

            // es__RG__gestion_questionnairedepistage_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/questionnaire-depistage') && preg_match('#^/es/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_questionnairedepistage_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_questionnairedepistage_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_questionnairedepistage_edit:

        }

        // fr__RG__gestion_questionnairedepistage_delete
        if (0 === strpos($pathinfo, '/admin/gestion/questionnaire-depistage') && preg_match('#^/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_questionnairedepistage_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_questionnairedepistage_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_questionnairedepistage_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_questionnairedepistage_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/questionnaire-depistage') && preg_match('#^/en/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_questionnairedepistage_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_questionnairedepistage_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_questionnairedepistage_delete:

            // es__RG__gestion_questionnairedepistage_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/questionnaire-depistage') && preg_match('#^/es/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_questionnairedepistage_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_questionnairedepistage_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_questionnairedepistage_delete:

        }

        // fr__RG__gestion_questionnairedepistage_formulaire
        if (0 === strpos($pathinfo, '/admin/gestion/questionnaire-depistage') && preg_match('#^/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/formulaire$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_questionnairedepistage_formulaire;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_questionnairedepistage_formulaire')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::formulaireAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_questionnairedepistage_formulaire:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_questionnairedepistage_formulaire
            if (0 === strpos($pathinfo, '/en/admin/gestion/questionnaire-depistage') && preg_match('#^/en/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/formulaire$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_questionnairedepistage_formulaire;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_questionnairedepistage_formulaire')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::formulaireAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_questionnairedepistage_formulaire:

            // es__RG__gestion_questionnairedepistage_formulaire
            if (0 === strpos($pathinfo, '/es/admin/gestion/questionnaire-depistage') && preg_match('#^/es/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/formulaire$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_questionnairedepistage_formulaire;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_questionnairedepistage_formulaire')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::formulaireAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_questionnairedepistage_formulaire:

        }

        // fr__RG__gestion_questionnairedepistage_donnee
        if (0 === strpos($pathinfo, '/admin/gestion/questionnaire-depistage') && preg_match('#^/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/donnee$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_questionnairedepistage_donnee')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::donneeAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_questionnairedepistage_donnee
            if (0 === strpos($pathinfo, '/en/admin/gestion/questionnaire-depistage') && preg_match('#^/en/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/donnee$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_questionnairedepistage_donnee')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::donneeAction',  '_locale' => 'en',));
            }

            // es__RG__gestion_questionnairedepistage_donnee
            if (0 === strpos($pathinfo, '/es/admin/gestion/questionnaire-depistage') && preg_match('#^/es/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/donnee$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_questionnairedepistage_donnee')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::donneeAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__gestion_questionnairedepistage_patient
        if (0 === strpos($pathinfo, '/admin/gestion/questionnaire-depistage') && preg_match('#^/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/patient$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_questionnairedepistage_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_questionnairedepistage_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::patientAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_questionnairedepistage_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_questionnairedepistage_patient
            if (0 === strpos($pathinfo, '/en/admin/gestion/questionnaire-depistage') && preg_match('#^/en/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/patient$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_questionnairedepistage_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_questionnairedepistage_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::patientAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_questionnairedepistage_patient:

            // es__RG__gestion_questionnairedepistage_patient
            if (0 === strpos($pathinfo, '/es/admin/gestion/questionnaire-depistage') && preg_match('#^/es/admin/gestion/questionnaire\\-depistage/(?P<id>[^/]++)/patient$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_questionnairedepistage_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_questionnairedepistage_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\QuestionnaireDepistageController::patientAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_questionnairedepistage_patient:

        }

        // fr__RG__gestion_ficheaffection_search
        if ('/admin/gestion/ficheaffection/search' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_ficheaffection_search;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_ficheaffection_search',);
        }
        not_fr__RG__gestion_ficheaffection_search:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_ficheaffection_search
            if ('/en/admin/gestion/ficheaffection/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_ficheaffection_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_ficheaffection_search',);
            }
            not_en__RG__gestion_ficheaffection_search:

            // es__RG__gestion_ficheaffection_search
            if ('/es/admin/gestion/ficheaffection/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_ficheaffection_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_ficheaffection_search',);
            }
            not_es__RG__gestion_ficheaffection_search:

        }

        // fr__RG__gestion_ficheaffection_index
        if ('/admin/gestion/ficheaffection' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_ficheaffection_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_ficheaffection_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_ficheaffection_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_ficheaffection_index',);
        }
        not_fr__RG__gestion_ficheaffection_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_ficheaffection_index
            if ('/en/admin/gestion/ficheaffection' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_ficheaffection_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_ficheaffection_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_ficheaffection_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_ficheaffection_index',);
            }
            not_en__RG__gestion_ficheaffection_index:

            // es__RG__gestion_ficheaffection_index
            if ('/es/admin/gestion/ficheaffection' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_ficheaffection_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_ficheaffection_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_ficheaffection_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_ficheaffection_index',);
            }
            not_es__RG__gestion_ficheaffection_index:

        }

        // fr__RG__gestion_ficheaffection_liste
        if (0 === strpos($pathinfo, '/admin/gestion/ficheaffection/liste') && preg_match('#^/admin/gestion/ficheaffection/liste(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_ficheaffection_liste;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_ficheaffection_liste')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::listeAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_ficheaffection_liste:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_ficheaffection_liste
            if (0 === strpos($pathinfo, '/en/admin/gestion/ficheaffection/liste') && preg_match('#^/en/admin/gestion/ficheaffection/liste(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_ficheaffection_liste;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_ficheaffection_liste')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::listeAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_ficheaffection_liste:

            // es__RG__gestion_ficheaffection_liste
            if (0 === strpos($pathinfo, '/es/admin/gestion/ficheaffection/liste') && preg_match('#^/es/admin/gestion/ficheaffection/liste(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_ficheaffection_liste;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_ficheaffection_liste')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::listeAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_ficheaffection_liste:

        }

        // fr__RG__gestion_ficheaffection_new
        if ('/admin/gestion/ficheaffection/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_ficheaffection_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_ficheaffection_new',);
        }
        not_fr__RG__gestion_ficheaffection_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_ficheaffection_new
            if ('/en/admin/gestion/ficheaffection/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_ficheaffection_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_ficheaffection_new',);
            }
            not_en__RG__gestion_ficheaffection_new:

            // es__RG__gestion_ficheaffection_new
            if ('/es/admin/gestion/ficheaffection/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_ficheaffection_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_ficheaffection_new',);
            }
            not_es__RG__gestion_ficheaffection_new:

        }

        // fr__RG__gestion_ficheaffection_new_patient
        if (0 === strpos($pathinfo, '/admin/gestion/ficheaffection') && preg_match('#^/admin/gestion/ficheaffection/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_ficheaffection_new_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_ficheaffection_new_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::newAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_ficheaffection_new_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_ficheaffection_new_patient
            if (0 === strpos($pathinfo, '/en/admin/gestion/ficheaffection') && preg_match('#^/en/admin/gestion/ficheaffection/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_ficheaffection_new_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_ficheaffection_new_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::newAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_ficheaffection_new_patient:

            // es__RG__gestion_ficheaffection_new_patient
            if (0 === strpos($pathinfo, '/es/admin/gestion/ficheaffection') && preg_match('#^/es/admin/gestion/ficheaffection/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_ficheaffection_new_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_ficheaffection_new_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::newAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_ficheaffection_new_patient:

        }

        // fr__RG__gestion_ficheaffection_show
        if (0 === strpos($pathinfo, '/admin/gestion/ficheaffection') && preg_match('#^/admin/gestion/ficheaffection/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_ficheaffection_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_ficheaffection_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_ficheaffection_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_ficheaffection_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/ficheaffection') && preg_match('#^/en/admin/gestion/ficheaffection/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_ficheaffection_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_ficheaffection_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_ficheaffection_show:

            // es__RG__gestion_ficheaffection_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/ficheaffection') && preg_match('#^/es/admin/gestion/ficheaffection/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_ficheaffection_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_ficheaffection_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_ficheaffection_show:

        }

        // fr__RG__gestion_ficheaffection_edit
        if (0 === strpos($pathinfo, '/admin/gestion/ficheaffection') && preg_match('#^/admin/gestion/ficheaffection/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_ficheaffection_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_ficheaffection_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_ficheaffection_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_ficheaffection_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/ficheaffection') && preg_match('#^/en/admin/gestion/ficheaffection/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_ficheaffection_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_ficheaffection_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_ficheaffection_edit:

            // es__RG__gestion_ficheaffection_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/ficheaffection') && preg_match('#^/es/admin/gestion/ficheaffection/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_ficheaffection_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_ficheaffection_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_ficheaffection_edit:

        }

        // fr__RG__gestion_ficheaffection_delete
        if (0 === strpos($pathinfo, '/admin/gestion/ficheaffection') && preg_match('#^/admin/gestion/ficheaffection/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_ficheaffection_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_ficheaffection_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_ficheaffection_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_ficheaffection_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/ficheaffection') && preg_match('#^/en/admin/gestion/ficheaffection/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_ficheaffection_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_ficheaffection_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_ficheaffection_delete:

            // es__RG__gestion_ficheaffection_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/ficheaffection') && preg_match('#^/es/admin/gestion/ficheaffection/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_ficheaffection_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_ficheaffection_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_ficheaffection_delete:

        }

        // fr__RG__gestion_ficheaffection_print_preview
        if (0 === strpos($pathinfo, '/admin/gestion/ficheaffection') && preg_match('#^/admin/gestion/ficheaffection/(?P<id>[^/]++)/print_preview$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_ficheaffection_print_preview;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_ficheaffection_print_preview')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::printPreviewAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_ficheaffection_print_preview:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_ficheaffection_print_preview
            if (0 === strpos($pathinfo, '/en/admin/gestion/ficheaffection') && preg_match('#^/en/admin/gestion/ficheaffection/(?P<id>[^/]++)/print_preview$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_ficheaffection_print_preview;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_ficheaffection_print_preview')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::printPreviewAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_ficheaffection_print_preview:

            // es__RG__gestion_ficheaffection_print_preview
            if (0 === strpos($pathinfo, '/es/admin/gestion/ficheaffection') && preg_match('#^/es/admin/gestion/ficheaffection/(?P<id>[^/]++)/print_preview$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_ficheaffection_print_preview;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_ficheaffection_print_preview')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::printPreviewAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_ficheaffection_print_preview:

        }

        // fr__RG__gestion_ficheaffection_print
        if (0 === strpos($pathinfo, '/admin/gestion/ficheaffection') && preg_match('#^/admin/gestion/ficheaffection/(?P<id>[^/]++)/print$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_ficheaffection_print;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_ficheaffection_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::printAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_ficheaffection_print:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_ficheaffection_print
            if (0 === strpos($pathinfo, '/en/admin/gestion/ficheaffection') && preg_match('#^/en/admin/gestion/ficheaffection/(?P<id>[^/]++)/print$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_ficheaffection_print;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_ficheaffection_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::printAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_ficheaffection_print:

            // es__RG__gestion_ficheaffection_print
            if (0 === strpos($pathinfo, '/es/admin/gestion/ficheaffection') && preg_match('#^/es/admin/gestion/ficheaffection/(?P<id>[^/]++)/print$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_ficheaffection_print;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_ficheaffection_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheAffectionController::printAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_ficheaffection_print:

        }

        // fr__RG__gestion_vaccination_search
        if ('/admin/gestion/vaccination/search' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_vaccination_search;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_vaccination_search',);
        }
        not_fr__RG__gestion_vaccination_search:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_vaccination_search
            if ('/en/admin/gestion/vaccination/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_vaccination_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_vaccination_search',);
            }
            not_en__RG__gestion_vaccination_search:

            // es__RG__gestion_vaccination_search
            if ('/es/admin/gestion/vaccination/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_vaccination_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_vaccination_search',);
            }
            not_es__RG__gestion_vaccination_search:

        }

        // fr__RG__gestion_vaccination_index
        if ('/admin/gestion/vaccination' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_vaccination_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_vaccination_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_vaccination_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_vaccination_index',);
        }
        not_fr__RG__gestion_vaccination_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_vaccination_index
            if ('/en/admin/gestion/vaccination' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_vaccination_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_vaccination_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_vaccination_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_vaccination_index',);
            }
            not_en__RG__gestion_vaccination_index:

            // es__RG__gestion_vaccination_index
            if ('/es/admin/gestion/vaccination' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_vaccination_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_vaccination_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_vaccination_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_vaccination_index',);
            }
            not_es__RG__gestion_vaccination_index:

        }

        // fr__RG__gestion_vaccination_index_patient
        if (0 === strpos($pathinfo, '/admin/gestion/vaccination') && preg_match('#^/admin/gestion/vaccination/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_vaccination_index_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_vaccination_index_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::indexAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_vaccination_index_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_vaccination_index_patient
            if (0 === strpos($pathinfo, '/en/admin/gestion/vaccination') && preg_match('#^/en/admin/gestion/vaccination/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_vaccination_index_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_vaccination_index_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::indexAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_vaccination_index_patient:

            // es__RG__gestion_vaccination_index_patient
            if (0 === strpos($pathinfo, '/es/admin/gestion/vaccination') && preg_match('#^/es/admin/gestion/vaccination/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_vaccination_index_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_vaccination_index_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::indexAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_vaccination_index_patient:

        }

        // fr__RG__gestion_vaccination_ls
        if ('/admin/gestion/vaccination/liste' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_vaccination_ls;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::listeAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_vaccination_ls',);
        }
        not_fr__RG__gestion_vaccination_ls:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_vaccination_ls
            if ('/en/admin/gestion/vaccination/liste' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_vaccination_ls;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::listeAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_vaccination_ls',);
            }
            not_en__RG__gestion_vaccination_ls:

            // es__RG__gestion_vaccination_ls
            if ('/es/admin/gestion/vaccination/liste' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_vaccination_ls;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::listeAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_vaccination_ls',);
            }
            not_es__RG__gestion_vaccination_ls:

        }

        // fr__RG__gestion_vaccination_new
        if ('/admin/gestion/vaccination/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_vaccination_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_vaccination_new',);
        }
        not_fr__RG__gestion_vaccination_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_vaccination_new
            if ('/en/admin/gestion/vaccination/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_vaccination_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_vaccination_new',);
            }
            not_en__RG__gestion_vaccination_new:

            // es__RG__gestion_vaccination_new
            if ('/es/admin/gestion/vaccination/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_vaccination_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_vaccination_new',);
            }
            not_es__RG__gestion_vaccination_new:

        }

        // fr__RG__gestion_vaccination_new_patient
        if (0 === strpos($pathinfo, '/admin/gestion/vaccination/new') && preg_match('#^/admin/gestion/vaccination/new/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_vaccination_new_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_vaccination_new_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::newAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_vaccination_new_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_vaccination_new_patient
            if (0 === strpos($pathinfo, '/en/admin/gestion/vaccination/new') && preg_match('#^/en/admin/gestion/vaccination/new/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_vaccination_new_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_vaccination_new_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::newAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_vaccination_new_patient:

            // es__RG__gestion_vaccination_new_patient
            if (0 === strpos($pathinfo, '/es/admin/gestion/vaccination/new') && preg_match('#^/es/admin/gestion/vaccination/new/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_vaccination_new_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_vaccination_new_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::newAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_vaccination_new_patient:

        }

        // fr__RG__gestion_vaccination_rappel
        if (0 === strpos($pathinfo, '/admin/gestion/vaccination/rappel') && preg_match('#^/admin/gestion/vaccination/rappel/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_vaccination_rappel;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_vaccination_rappel')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::rappelAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_vaccination_rappel:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_vaccination_rappel
            if (0 === strpos($pathinfo, '/en/admin/gestion/vaccination/rappel') && preg_match('#^/en/admin/gestion/vaccination/rappel/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_vaccination_rappel;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_vaccination_rappel')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::rappelAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_vaccination_rappel:

            // es__RG__gestion_vaccination_rappel
            if (0 === strpos($pathinfo, '/es/admin/gestion/vaccination/rappel') && preg_match('#^/es/admin/gestion/vaccination/rappel/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_vaccination_rappel;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_vaccination_rappel')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\VaccinationController::rappelAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_vaccination_rappel:

        }

        // fr__RG__parametre_typestatut_index
        if ('/admin/parametre/typestatut' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__parametre_typestatut_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__parametre_typestatut_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_typestatut_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_typestatut_index',);
        }
        not_fr__RG__parametre_typestatut_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typestatut_index
            if ('/en/admin/parametre/typestatut' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__parametre_typestatut_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__parametre_typestatut_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_typestatut_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_typestatut_index',);
            }
            not_en__RG__parametre_typestatut_index:

            // es__RG__parametre_typestatut_index
            if ('/es/admin/parametre/typestatut' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__parametre_typestatut_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__parametre_typestatut_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_typestatut_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_typestatut_index',);
            }
            not_es__RG__parametre_typestatut_index:

        }

        // fr__RG__parametre_typestatut_new
        if ('/admin/parametre/typestatut/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_typestatut_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_typestatut_new',);
        }
        not_fr__RG__parametre_typestatut_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typestatut_new
            if ('/en/admin/parametre/typestatut/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_typestatut_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_typestatut_new',);
            }
            not_en__RG__parametre_typestatut_new:

            // es__RG__parametre_typestatut_new
            if ('/es/admin/parametre/typestatut/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_typestatut_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_typestatut_new',);
            }
            not_es__RG__parametre_typestatut_new:

        }

        // fr__RG__parametre_typestatut_show
        if (0 === strpos($pathinfo, '/admin/parametre/typestatut') && preg_match('#^/admin/parametre/typestatut/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_typestatut_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_typestatut_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_typestatut_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typestatut_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/typestatut') && preg_match('#^/en/admin/parametre/typestatut/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_typestatut_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_typestatut_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_typestatut_show:

            // es__RG__parametre_typestatut_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/typestatut') && preg_match('#^/es/admin/parametre/typestatut/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_typestatut_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_typestatut_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_typestatut_show:

        }

        // fr__RG__parametre_typestatut_edit
        if (0 === strpos($pathinfo, '/admin/parametre/typestatut') && preg_match('#^/admin/parametre/typestatut/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_typestatut_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_typestatut_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_typestatut_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typestatut_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/typestatut') && preg_match('#^/en/admin/parametre/typestatut/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_typestatut_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_typestatut_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_typestatut_edit:

            // es__RG__parametre_typestatut_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/typestatut') && preg_match('#^/es/admin/parametre/typestatut/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_typestatut_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_typestatut_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_typestatut_edit:

        }

        // fr__RG__parametre_typestatut_delete
        if (0 === strpos($pathinfo, '/admin/parametre/typestatut') && preg_match('#^/admin/parametre/typestatut/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__parametre_typestatut_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_typestatut_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_typestatut_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typestatut_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/typestatut') && preg_match('#^/en/admin/parametre/typestatut/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__parametre_typestatut_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_typestatut_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_typestatut_delete:

            // es__RG__parametre_typestatut_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/typestatut') && preg_match('#^/es/admin/parametre/typestatut/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__parametre_typestatut_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_typestatut_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeStatutController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_typestatut_delete:

        }

        // fr__RG__parametre_statut_index
        if ('/admin/parametre/statut' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__parametre_statut_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__parametre_statut_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_statut_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_statut_index',);
        }
        not_fr__RG__parametre_statut_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_statut_index
            if ('/en/admin/parametre/statut' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__parametre_statut_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__parametre_statut_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_statut_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_statut_index',);
            }
            not_en__RG__parametre_statut_index:

            // es__RG__parametre_statut_index
            if ('/es/admin/parametre/statut' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__parametre_statut_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__parametre_statut_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_statut_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_statut_index',);
            }
            not_es__RG__parametre_statut_index:

        }

        // fr__RG__parametre_statut_new
        if ('/admin/parametre/statut/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_statut_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_statut_new',);
        }
        not_fr__RG__parametre_statut_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_statut_new
            if ('/en/admin/parametre/statut/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_statut_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_statut_new',);
            }
            not_en__RG__parametre_statut_new:

            // es__RG__parametre_statut_new
            if ('/es/admin/parametre/statut/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_statut_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_statut_new',);
            }
            not_es__RG__parametre_statut_new:

        }

        // fr__RG__parametre_statut_show
        if (0 === strpos($pathinfo, '/admin/parametre/statut') && preg_match('#^/admin/parametre/statut/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_statut_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_statut_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_statut_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_statut_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/statut') && preg_match('#^/en/admin/parametre/statut/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_statut_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_statut_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_statut_show:

            // es__RG__parametre_statut_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/statut') && preg_match('#^/es/admin/parametre/statut/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_statut_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_statut_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_statut_show:

        }

        // fr__RG__parametre_statut_edit
        if (0 === strpos($pathinfo, '/admin/parametre/statut') && preg_match('#^/admin/parametre/statut/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_statut_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_statut_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_statut_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_statut_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/statut') && preg_match('#^/en/admin/parametre/statut/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_statut_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_statut_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_statut_edit:

            // es__RG__parametre_statut_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/statut') && preg_match('#^/es/admin/parametre/statut/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_statut_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_statut_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_statut_edit:

        }

        // fr__RG__parametre_statut_delete
        if (0 === strpos($pathinfo, '/admin/parametre/statut') && preg_match('#^/admin/parametre/statut/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__parametre_statut_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_statut_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_statut_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_statut_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/statut') && preg_match('#^/en/admin/parametre/statut/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__parametre_statut_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_statut_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_statut_delete:

            // es__RG__parametre_statut_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/statut') && preg_match('#^/es/admin/parametre/statut/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__parametre_statut_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_statut_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\StatutController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_statut_delete:

        }

        // fr__RG__parametre_listeexamen_index
        if ('/admin/parametre/listeexamen' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__parametre_listeexamen_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__parametre_listeexamen_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_listeexamen_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_listeexamen_index',);
        }
        not_fr__RG__parametre_listeexamen_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_listeexamen_index
            if ('/en/admin/parametre/listeexamen' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__parametre_listeexamen_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__parametre_listeexamen_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_listeexamen_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_listeexamen_index',);
            }
            not_en__RG__parametre_listeexamen_index:

            // es__RG__parametre_listeexamen_index
            if ('/es/admin/parametre/listeexamen' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__parametre_listeexamen_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__parametre_listeexamen_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_listeexamen_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_listeexamen_index',);
            }
            not_es__RG__parametre_listeexamen_index:

        }

        // fr__RG__parametre_listeexamen_new
        if ('/admin/parametre/listeexamen/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_listeexamen_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_listeexamen_new',);
        }
        not_fr__RG__parametre_listeexamen_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_listeexamen_new
            if ('/en/admin/parametre/listeexamen/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_listeexamen_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_listeexamen_new',);
            }
            not_en__RG__parametre_listeexamen_new:

            // es__RG__parametre_listeexamen_new
            if ('/es/admin/parametre/listeexamen/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_listeexamen_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_listeexamen_new',);
            }
            not_es__RG__parametre_listeexamen_new:

        }

        // fr__RG__parametre_listeexamen_show
        if (0 === strpos($pathinfo, '/admin/parametre/listeexamen') && preg_match('#^/admin/parametre/listeexamen/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_listeexamen_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_listeexamen_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_listeexamen_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_listeexamen_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/listeexamen') && preg_match('#^/en/admin/parametre/listeexamen/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_listeexamen_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_listeexamen_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_listeexamen_show:

            // es__RG__parametre_listeexamen_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/listeexamen') && preg_match('#^/es/admin/parametre/listeexamen/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_listeexamen_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_listeexamen_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_listeexamen_show:

        }

        // fr__RG__parametre_listeexamen_edit
        if (0 === strpos($pathinfo, '/admin/parametre/listeexamen') && preg_match('#^/admin/parametre/listeexamen/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_listeexamen_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_listeexamen_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_listeexamen_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_listeexamen_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/listeexamen') && preg_match('#^/en/admin/parametre/listeexamen/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_listeexamen_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_listeexamen_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_listeexamen_edit:

            // es__RG__parametre_listeexamen_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/listeexamen') && preg_match('#^/es/admin/parametre/listeexamen/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_listeexamen_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_listeexamen_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_listeexamen_edit:

        }

        // fr__RG__parametre_listeexamen_delete
        if (0 === strpos($pathinfo, '/admin/parametre/listeexamen') && preg_match('#^/admin/parametre/listeexamen/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__parametre_listeexamen_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_listeexamen_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_listeexamen_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_listeexamen_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/listeexamen') && preg_match('#^/en/admin/parametre/listeexamen/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__parametre_listeexamen_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_listeexamen_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_listeexamen_delete:

            // es__RG__parametre_listeexamen_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/listeexamen') && preg_match('#^/es/admin/parametre/listeexamen/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__parametre_listeexamen_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_listeexamen_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ListeExamenController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_listeexamen_delete:

        }

        // fr__RG__parametre_categorie_index
        if ('/admin/parametre/categorie' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__parametre_categorie_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__parametre_categorie_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_categorie_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_categorie_index',);
        }
        not_fr__RG__parametre_categorie_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_categorie_index
            if ('/en/admin/parametre/categorie' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__parametre_categorie_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__parametre_categorie_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_categorie_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_categorie_index',);
            }
            not_en__RG__parametre_categorie_index:

            // es__RG__parametre_categorie_index
            if ('/es/admin/parametre/categorie' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__parametre_categorie_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__parametre_categorie_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_categorie_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_categorie_index',);
            }
            not_es__RG__parametre_categorie_index:

        }

        // fr__RG__parametre_categorie_new
        if ('/admin/parametre/categorie/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_categorie_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_categorie_new',);
        }
        not_fr__RG__parametre_categorie_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_categorie_new
            if ('/en/admin/parametre/categorie/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_categorie_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_categorie_new',);
            }
            not_en__RG__parametre_categorie_new:

            // es__RG__parametre_categorie_new
            if ('/es/admin/parametre/categorie/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_categorie_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_categorie_new',);
            }
            not_es__RG__parametre_categorie_new:

        }

        // fr__RG__parametre_categorie_show
        if (0 === strpos($pathinfo, '/admin/parametre/categorie') && preg_match('#^/admin/parametre/categorie/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_categorie_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_categorie_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_categorie_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_categorie_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/categorie') && preg_match('#^/en/admin/parametre/categorie/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_categorie_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_categorie_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_categorie_show:

            // es__RG__parametre_categorie_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/categorie') && preg_match('#^/es/admin/parametre/categorie/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_categorie_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_categorie_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_categorie_show:

        }

        // fr__RG__parametre_categorie_edit
        if (0 === strpos($pathinfo, '/admin/parametre/categorie') && preg_match('#^/admin/parametre/categorie/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_categorie_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_categorie_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_categorie_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_categorie_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/categorie') && preg_match('#^/en/admin/parametre/categorie/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_categorie_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_categorie_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_categorie_edit:

            // es__RG__parametre_categorie_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/categorie') && preg_match('#^/es/admin/parametre/categorie/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_categorie_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_categorie_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_categorie_edit:

        }

        // fr__RG__parametre_categorie_delete
        if (0 === strpos($pathinfo, '/admin/parametre/categorie') && preg_match('#^/admin/parametre/categorie/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__parametre_categorie_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_categorie_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_categorie_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_categorie_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/categorie') && preg_match('#^/en/admin/parametre/categorie/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__parametre_categorie_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_categorie_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_categorie_delete:

            // es__RG__parametre_categorie_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/categorie') && preg_match('#^/es/admin/parametre/categorie/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__parametre_categorie_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_categorie_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\CategorieController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_categorie_delete:

        }

        // fr__RG__parametre_typecategorie_index
        if ('/admin/parametre/type-categorie' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__parametre_typecategorie_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__parametre_typecategorie_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_typecategorie_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_typecategorie_index',);
        }
        not_fr__RG__parametre_typecategorie_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typecategorie_index
            if ('/en/admin/parametre/type-categorie' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__parametre_typecategorie_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__parametre_typecategorie_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_typecategorie_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_typecategorie_index',);
            }
            not_en__RG__parametre_typecategorie_index:

            // es__RG__parametre_typecategorie_index
            if ('/es/admin/parametre/type-categorie' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__parametre_typecategorie_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__parametre_typecategorie_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_typecategorie_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_typecategorie_index',);
            }
            not_es__RG__parametre_typecategorie_index:

        }

        // fr__RG__parametre_typecategorie_new
        if ('/admin/parametre/type-categorie/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_typecategorie_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_typecategorie_new',);
        }
        not_fr__RG__parametre_typecategorie_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typecategorie_new
            if ('/en/admin/parametre/type-categorie/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_typecategorie_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_typecategorie_new',);
            }
            not_en__RG__parametre_typecategorie_new:

            // es__RG__parametre_typecategorie_new
            if ('/es/admin/parametre/type-categorie/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_typecategorie_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_typecategorie_new',);
            }
            not_es__RG__parametre_typecategorie_new:

        }

        // fr__RG__parametre_typecategorie_show
        if (0 === strpos($pathinfo, '/admin/parametre/type-categorie') && preg_match('#^/admin/parametre/type\\-categorie/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_typecategorie_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_typecategorie_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_typecategorie_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typecategorie_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/type-categorie') && preg_match('#^/en/admin/parametre/type\\-categorie/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_typecategorie_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_typecategorie_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_typecategorie_show:

            // es__RG__parametre_typecategorie_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/type-categorie') && preg_match('#^/es/admin/parametre/type\\-categorie/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_typecategorie_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_typecategorie_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_typecategorie_show:

        }

        // fr__RG__parametre_typecategorie_edit
        if (0 === strpos($pathinfo, '/admin/parametre/type-categorie') && preg_match('#^/admin/parametre/type\\-categorie/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_typecategorie_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_typecategorie_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_typecategorie_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typecategorie_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/type-categorie') && preg_match('#^/en/admin/parametre/type\\-categorie/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_typecategorie_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_typecategorie_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_typecategorie_edit:

            // es__RG__parametre_typecategorie_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/type-categorie') && preg_match('#^/es/admin/parametre/type\\-categorie/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_typecategorie_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_typecategorie_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_typecategorie_edit:

        }

        // fr__RG__parametre_typecategorie_delete
        if (0 === strpos($pathinfo, '/admin/parametre/type-categorie') && preg_match('#^/admin/parametre/type\\-categorie/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__parametre_typecategorie_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_typecategorie_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_typecategorie_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typecategorie_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/type-categorie') && preg_match('#^/en/admin/parametre/type\\-categorie/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__parametre_typecategorie_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_typecategorie_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_typecategorie_delete:

            // es__RG__parametre_typecategorie_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/type-categorie') && preg_match('#^/es/admin/parametre/type\\-categorie/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__parametre_typecategorie_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_typecategorie_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeCategorieController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_typecategorie_delete:

        }

        // fr__RG__gestion_admission_index
        if ('/admin/gestion/admission' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_admission_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_admission_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_admission_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_admission_index',);
        }
        not_fr__RG__gestion_admission_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_admission_index
            if ('/en/admin/gestion/admission' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_admission_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_admission_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_admission_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_admission_index',);
            }
            not_en__RG__gestion_admission_index:

            // es__RG__gestion_admission_index
            if ('/es/admin/gestion/admission' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_admission_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_admission_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_admission_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_admission_index',);
            }
            not_es__RG__gestion_admission_index:

        }

        // fr__RG__gestion_admission_new
        if ('/admin/gestion/admission/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_admission_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_admission_new',);
        }
        not_fr__RG__gestion_admission_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_admission_new
            if ('/en/admin/gestion/admission/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_admission_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_admission_new',);
            }
            not_en__RG__gestion_admission_new:

            // es__RG__gestion_admission_new
            if ('/es/admin/gestion/admission/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_admission_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_admission_new',);
            }
            not_es__RG__gestion_admission_new:

        }

        // fr__RG__gestion_admission_show
        if (0 === strpos($pathinfo, '/admin/gestion/admission') && preg_match('#^/admin/gestion/admission/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_admission_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_admission_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_admission_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_admission_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/admission') && preg_match('#^/en/admin/gestion/admission/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_admission_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_admission_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_admission_show:

            // es__RG__gestion_admission_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/admission') && preg_match('#^/es/admin/gestion/admission/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_admission_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_admission_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_admission_show:

        }

        // fr__RG__gestion_admission_edit
        if (0 === strpos($pathinfo, '/admin/gestion/admission') && preg_match('#^/admin/gestion/admission/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_admission_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_admission_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_admission_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_admission_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/admission') && preg_match('#^/en/admin/gestion/admission/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_admission_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_admission_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_admission_edit:

            // es__RG__gestion_admission_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/admission') && preg_match('#^/es/admin/gestion/admission/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_admission_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_admission_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_admission_edit:

        }

        // fr__RG__gestion_admission_delete
        if (0 === strpos($pathinfo, '/admin/gestion/admission') && preg_match('#^/admin/gestion/admission/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_admission_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_admission_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_admission_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_admission_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/admission') && preg_match('#^/en/admin/gestion/admission/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_admission_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_admission_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_admission_delete:

            // es__RG__gestion_admission_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/admission') && preg_match('#^/es/admin/gestion/admission/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_admission_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_admission_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AdmissionController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_admission_delete:

        }

        // fr__RG__parametre_constante_index
        if ('/admin/parametre/constante' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__parametre_constante_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__parametre_constante_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_constante_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_constante_index',);
        }
        not_fr__RG__parametre_constante_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_constante_index
            if ('/en/admin/parametre/constante' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__parametre_constante_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__parametre_constante_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_constante_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_constante_index',);
            }
            not_en__RG__parametre_constante_index:

            // es__RG__parametre_constante_index
            if ('/es/admin/parametre/constante' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__parametre_constante_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__parametre_constante_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_constante_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_constante_index',);
            }
            not_es__RG__parametre_constante_index:

        }

        // fr__RG__parametre_constante_new
        if ('/admin/parametre/constante/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_constante_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_constante_new',);
        }
        not_fr__RG__parametre_constante_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_constante_new
            if ('/en/admin/parametre/constante/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_constante_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_constante_new',);
            }
            not_en__RG__parametre_constante_new:

            // es__RG__parametre_constante_new
            if ('/es/admin/parametre/constante/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_constante_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_constante_new',);
            }
            not_es__RG__parametre_constante_new:

        }

        // fr__RG__parametre_constante_show
        if (0 === strpos($pathinfo, '/admin/parametre/constante') && preg_match('#^/admin/parametre/constante/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_constante_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_constante_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_constante_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_constante_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/constante') && preg_match('#^/en/admin/parametre/constante/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_constante_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_constante_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_constante_show:

            // es__RG__parametre_constante_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/constante') && preg_match('#^/es/admin/parametre/constante/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_constante_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_constante_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_constante_show:

        }

        // fr__RG__parametre_constante_edit
        if (0 === strpos($pathinfo, '/admin/parametre/constante') && preg_match('#^/admin/parametre/constante/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_constante_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_constante_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_constante_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_constante_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/constante') && preg_match('#^/en/admin/parametre/constante/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_constante_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_constante_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_constante_edit:

            // es__RG__parametre_constante_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/constante') && preg_match('#^/es/admin/parametre/constante/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_constante_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_constante_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_constante_edit:

        }

        // fr__RG__parametre_constante_delete
        if (0 === strpos($pathinfo, '/admin/parametre/constante') && preg_match('#^/admin/parametre/constante/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__parametre_constante_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_constante_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_constante_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_constante_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/constante') && preg_match('#^/en/admin/parametre/constante/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__parametre_constante_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_constante_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_constante_delete:

            // es__RG__parametre_constante_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/constante') && preg_match('#^/es/admin/parametre/constante/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__parametre_constante_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_constante_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ConstanteController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_constante_delete:

        }

        // fr__RG__parametre_prestation_index
        if ('/admin/parametre/prestation' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__parametre_prestation_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__parametre_prestation_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_prestation_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_prestation_index',);
        }
        not_fr__RG__parametre_prestation_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_prestation_index
            if ('/en/admin/parametre/prestation' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__parametre_prestation_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__parametre_prestation_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_prestation_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_prestation_index',);
            }
            not_en__RG__parametre_prestation_index:

            // es__RG__parametre_prestation_index
            if ('/es/admin/parametre/prestation' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__parametre_prestation_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__parametre_prestation_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_prestation_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_prestation_index',);
            }
            not_es__RG__parametre_prestation_index:

        }

        // fr__RG__parametre_prestation_new
        if ('/admin/parametre/prestation/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_prestation_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_prestation_new',);
        }
        not_fr__RG__parametre_prestation_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_prestation_new
            if ('/en/admin/parametre/prestation/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_prestation_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_prestation_new',);
            }
            not_en__RG__parametre_prestation_new:

            // es__RG__parametre_prestation_new
            if ('/es/admin/parametre/prestation/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_prestation_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_prestation_new',);
            }
            not_es__RG__parametre_prestation_new:

        }

        // fr__RG__parametre_prestation_show
        if (0 === strpos($pathinfo, '/admin/parametre/prestation') && preg_match('#^/admin/parametre/prestation/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_prestation_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_prestation_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_prestation_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_prestation_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/prestation') && preg_match('#^/en/admin/parametre/prestation/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_prestation_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_prestation_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_prestation_show:

            // es__RG__parametre_prestation_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/prestation') && preg_match('#^/es/admin/parametre/prestation/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_prestation_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_prestation_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_prestation_show:

        }

        // fr__RG__parametre_prestation_edit
        if (0 === strpos($pathinfo, '/admin/parametre/prestation') && preg_match('#^/admin/parametre/prestation/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_prestation_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_prestation_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_prestation_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_prestation_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/prestation') && preg_match('#^/en/admin/parametre/prestation/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_prestation_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_prestation_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_prestation_edit:

            // es__RG__parametre_prestation_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/prestation') && preg_match('#^/es/admin/parametre/prestation/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_prestation_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_prestation_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_prestation_edit:

        }

        // fr__RG__parametre_prestation_delete
        if (0 === strpos($pathinfo, '/admin/parametre/prestation') && preg_match('#^/admin/parametre/prestation/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__parametre_prestation_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_prestation_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_prestation_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_prestation_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/prestation') && preg_match('#^/en/admin/parametre/prestation/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__parametre_prestation_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_prestation_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_prestation_delete:

            // es__RG__parametre_prestation_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/prestation') && preg_match('#^/es/admin/parametre/prestation/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__parametre_prestation_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_prestation_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PrestationController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_prestation_delete:

        }

        // fr__RG__parametre_typehopital_index
        if ('/admin/parametre/type-hopital' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__parametre_typehopital_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__parametre_typehopital_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_typehopital_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_typehopital_index',);
        }
        not_fr__RG__parametre_typehopital_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typehopital_index
            if ('/en/admin/parametre/type-hopital' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__parametre_typehopital_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__parametre_typehopital_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_typehopital_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_typehopital_index',);
            }
            not_en__RG__parametre_typehopital_index:

            // es__RG__parametre_typehopital_index
            if ('/es/admin/parametre/type-hopital' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__parametre_typehopital_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__parametre_typehopital_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_typehopital_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_typehopital_index',);
            }
            not_es__RG__parametre_typehopital_index:

        }

        // fr__RG__parametre_typehopital_new
        if ('/admin/parametre/type-hopital/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_typehopital_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__parametre_typehopital_new',);
        }
        not_fr__RG__parametre_typehopital_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typehopital_new
            if ('/en/admin/parametre/type-hopital/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_typehopital_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__parametre_typehopital_new',);
            }
            not_en__RG__parametre_typehopital_new:

            // es__RG__parametre_typehopital_new
            if ('/es/admin/parametre/type-hopital/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_typehopital_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__parametre_typehopital_new',);
            }
            not_es__RG__parametre_typehopital_new:

        }

        // fr__RG__parametre_typehopital_show
        if (0 === strpos($pathinfo, '/admin/parametre/type-hopital') && preg_match('#^/admin/parametre/type\\-hopital/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__parametre_typehopital_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_typehopital_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_typehopital_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typehopital_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/type-hopital') && preg_match('#^/en/admin/parametre/type\\-hopital/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__parametre_typehopital_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_typehopital_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_typehopital_show:

            // es__RG__parametre_typehopital_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/type-hopital') && preg_match('#^/es/admin/parametre/type\\-hopital/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__parametre_typehopital_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_typehopital_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_typehopital_show:

        }

        // fr__RG__parametre_typehopital_edit
        if (0 === strpos($pathinfo, '/admin/parametre/type-hopital') && preg_match('#^/admin/parametre/type\\-hopital/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__parametre_typehopital_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_typehopital_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_typehopital_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typehopital_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/type-hopital') && preg_match('#^/en/admin/parametre/type\\-hopital/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__parametre_typehopital_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_typehopital_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_typehopital_edit:

            // es__RG__parametre_typehopital_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/type-hopital') && preg_match('#^/es/admin/parametre/type\\-hopital/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__parametre_typehopital_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_typehopital_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_typehopital_edit:

        }

        // fr__RG__parametre_typehopital_delete
        if (0 === strpos($pathinfo, '/admin/parametre/type-hopital') && preg_match('#^/admin/parametre/type\\-hopital/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__parametre_typehopital_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__parametre_typehopital_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__parametre_typehopital_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__parametre_typehopital_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/type-hopital') && preg_match('#^/en/admin/parametre/type\\-hopital/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__parametre_typehopital_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__parametre_typehopital_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__parametre_typehopital_delete:

            // es__RG__parametre_typehopital_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/type-hopital') && preg_match('#^/es/admin/parametre/type\\-hopital/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__parametre_typehopital_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__parametre_typehopital_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeHopitalController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__parametre_typehopital_delete:

        }

        // fr__RG__gestion_examen_search
        if ('/admin/laboratoire/examen/search' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_examen_search;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_examen_search',);
        }
        not_fr__RG__gestion_examen_search:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_examen_search
            if ('/en/admin/laboratoire/examen/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_examen_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_examen_search',);
            }
            not_en__RG__gestion_examen_search:

            // es__RG__gestion_examen_search
            if ('/es/admin/laboratoire/examen/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_examen_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_examen_search',);
            }
            not_es__RG__gestion_examen_search:

        }

        // fr__RG__gestion_examen_liste
        if (0 === strpos($pathinfo, '/admin/laboratoire/examen') && preg_match('#^/admin/laboratoire/examen/(?P<consultation>[^/]++)/liste$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_examen_liste;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_examen_liste')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::listeAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_examen_liste:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_examen_liste
            if (0 === strpos($pathinfo, '/en/admin/laboratoire/examen') && preg_match('#^/en/admin/laboratoire/examen/(?P<consultation>[^/]++)/liste$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_examen_liste;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_examen_liste')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::listeAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_examen_liste:

            // es__RG__gestion_examen_liste
            if (0 === strpos($pathinfo, '/es/admin/laboratoire/examen') && preg_match('#^/es/admin/laboratoire/examen/(?P<consultation>[^/]++)/liste$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_examen_liste;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_examen_liste')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::listeAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_examen_liste:

        }

        // fr__RG__gestion_examen_examen
        if (0 === strpos($pathinfo, '/admin/laboratoire/examen') && preg_match('#^/admin/laboratoire/examen/(?P<consultation>[^/]++)/examen$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__gestion_examen_examen;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_examen_examen')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::examenAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_examen_examen:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_examen_examen
            if (0 === strpos($pathinfo, '/en/admin/laboratoire/examen') && preg_match('#^/en/admin/laboratoire/examen/(?P<consultation>[^/]++)/examen$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__gestion_examen_examen;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_examen_examen')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::examenAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_examen_examen:

            // es__RG__gestion_examen_examen
            if (0 === strpos($pathinfo, '/es/admin/laboratoire/examen') && preg_match('#^/es/admin/laboratoire/examen/(?P<consultation>[^/]++)/examen$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__gestion_examen_examen;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_examen_examen')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::examenAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_examen_examen:

        }

        // fr__RG__gestion_examen_suivi_new
        if (0 === strpos($pathinfo, '/admin/laboratoire/examen') && preg_match('#^/admin/laboratoire/examen/(?P<consultation>[^/]++)/suivi$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_examen_suivi_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::suiviAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_examen_suivi_new
            if (0 === strpos($pathinfo, '/en/admin/laboratoire/examen') && preg_match('#^/en/admin/laboratoire/examen/(?P<consultation>[^/]++)/suivi$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_examen_suivi_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::suiviAction',  '_locale' => 'en',));
            }

            // es__RG__gestion_examen_suivi_new
            if (0 === strpos($pathinfo, '/es/admin/laboratoire/examen') && preg_match('#^/es/admin/laboratoire/examen/(?P<consultation>[^/]++)/suivi$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_examen_suivi_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::suiviAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__gestion_examen_suivi_manage
        if (0 === strpos($pathinfo, '/admin/laboratoire/examen') && preg_match('#^/admin/laboratoire/examen/(?P<consultation>[^/]++)/suivi/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_examen_suivi_manage')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::suiviAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_examen_suivi_manage
            if (0 === strpos($pathinfo, '/en/admin/laboratoire/examen') && preg_match('#^/en/admin/laboratoire/examen/(?P<consultation>[^/]++)/suivi/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_examen_suivi_manage')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::suiviAction',  '_locale' => 'en',));
            }

            // es__RG__gestion_examen_suivi_manage
            if (0 === strpos($pathinfo, '/es/admin/laboratoire/examen') && preg_match('#^/es/admin/laboratoire/examen/(?P<consultation>[^/]++)/suivi/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_examen_suivi_manage')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::suiviAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__gestion_examen_index
        if ('/admin/laboratoire/examen' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_examen_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_examen_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_examen_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_examen_index',);
        }
        not_fr__RG__gestion_examen_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_examen_index
            if ('/en/admin/laboratoire/examen' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_examen_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_examen_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_examen_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_examen_index',);
            }
            not_en__RG__gestion_examen_index:

            // es__RG__gestion_examen_index
            if ('/es/admin/laboratoire/examen' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_examen_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_examen_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_examen_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_examen_index',);
            }
            not_es__RG__gestion_examen_index:

        }

        // fr__RG__gestion_examen_new
        if ('/admin/laboratoire/examen/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_examen_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_examen_new',);
        }
        not_fr__RG__gestion_examen_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_examen_new
            if ('/en/admin/laboratoire/examen/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_examen_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_examen_new',);
            }
            not_en__RG__gestion_examen_new:

            // es__RG__gestion_examen_new
            if ('/es/admin/laboratoire/examen/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_examen_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_examen_new',);
            }
            not_es__RG__gestion_examen_new:

        }

        // fr__RG__gestion_examen_show
        if (0 === strpos($pathinfo, '/admin/laboratoire/examen') && preg_match('#^/admin/laboratoire/examen/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_examen_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_examen_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_examen_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_examen_show
            if (0 === strpos($pathinfo, '/en/admin/laboratoire/examen') && preg_match('#^/en/admin/laboratoire/examen/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_examen_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_examen_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_examen_show:

            // es__RG__gestion_examen_show
            if (0 === strpos($pathinfo, '/es/admin/laboratoire/examen') && preg_match('#^/es/admin/laboratoire/examen/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_examen_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_examen_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_examen_show:

        }

        // fr__RG__gestion_examen_edit
        if (0 === strpos($pathinfo, '/admin/laboratoire/examen') && preg_match('#^/admin/laboratoire/examen/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_examen_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_examen_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_examen_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_examen_edit
            if (0 === strpos($pathinfo, '/en/admin/laboratoire/examen') && preg_match('#^/en/admin/laboratoire/examen/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_examen_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_examen_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_examen_edit:

            // es__RG__gestion_examen_edit
            if (0 === strpos($pathinfo, '/es/admin/laboratoire/examen') && preg_match('#^/es/admin/laboratoire/examen/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_examen_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_examen_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_examen_edit:

        }

        // fr__RG__gestion_examen_delete
        if (0 === strpos($pathinfo, '/admin/laboratoire/examen') && preg_match('#^/admin/laboratoire/examen/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_examen_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_examen_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_examen_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_examen_delete
            if (0 === strpos($pathinfo, '/en/admin/laboratoire/examen') && preg_match('#^/en/admin/laboratoire/examen/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_examen_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_examen_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_examen_delete:

            // es__RG__gestion_examen_delete
            if (0 === strpos($pathinfo, '/es/admin/laboratoire/examen') && preg_match('#^/es/admin/laboratoire/examen/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_examen_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_examen_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ExamenController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_examen_delete:

        }

        // fr__RG__gestion_suivi_index
        if ('/admin/gestion/patient/suivi' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_suivi_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_suivi_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_suivi_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_suivi_index',);
        }
        not_fr__RG__gestion_suivi_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivi_index
            if ('/en/admin/gestion/patient/suivi' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_suivi_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_suivi_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_suivi_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_suivi_index',);
            }
            not_en__RG__gestion_suivi_index:

            // es__RG__gestion_suivi_index
            if ('/es/admin/gestion/patient/suivi' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_suivi_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_suivi_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_suivi_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_suivi_index',);
            }
            not_es__RG__gestion_suivi_index:

        }

        // fr__RG__gestion_suivi_new
        if ('/admin/gestion/patient/suivi/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_suivi_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_suivi_new',);
        }
        not_fr__RG__gestion_suivi_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivi_new
            if ('/en/admin/gestion/patient/suivi/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_suivi_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_suivi_new',);
            }
            not_en__RG__gestion_suivi_new:

            // es__RG__gestion_suivi_new
            if ('/es/admin/gestion/patient/suivi/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_suivi_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_suivi_new',);
            }
            not_es__RG__gestion_suivi_new:

        }

        // fr__RG__gestion_suivi_new_patient
        if (0 === strpos($pathinfo, '/admin/gestion/patient/suivi') && preg_match('#^/admin/gestion/patient/suivi/(?P<patient>[^/]++)/new$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_suivi_new_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_suivi_new_patient')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::newAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_suivi_new_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivi_new_patient
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient/suivi') && preg_match('#^/en/admin/gestion/patient/suivi/(?P<patient>[^/]++)/new$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_suivi_new_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_suivi_new_patient')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::newAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_suivi_new_patient:

            // es__RG__gestion_suivi_new_patient
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient/suivi') && preg_match('#^/es/admin/gestion/patient/suivi/(?P<patient>[^/]++)/new$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_suivi_new_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_suivi_new_patient')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::newAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_suivi_new_patient:

        }

        // fr__RG__gestion_suivi_show
        if (0 === strpos($pathinfo, '/admin/gestion/patient/suivi') && preg_match('#^/admin/gestion/patient/suivi/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_suivi_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_suivi_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_suivi_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivi_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient/suivi') && preg_match('#^/en/admin/gestion/patient/suivi/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_suivi_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_suivi_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_suivi_show:

            // es__RG__gestion_suivi_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient/suivi') && preg_match('#^/es/admin/gestion/patient/suivi/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_suivi_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_suivi_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_suivi_show:

        }

        // fr__RG__gestion_suivi_edit
        if (0 === strpos($pathinfo, '/admin/gestion/patient/suivi') && preg_match('#^/admin/gestion/patient/suivi/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_suivi_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_suivi_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_suivi_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivi_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient/suivi') && preg_match('#^/en/admin/gestion/patient/suivi/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_suivi_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_suivi_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_suivi_edit:

            // es__RG__gestion_suivi_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient/suivi') && preg_match('#^/es/admin/gestion/patient/suivi/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_suivi_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_suivi_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_suivi_edit:

        }

        // fr__RG__gestion_suivi_delete
        if (0 === strpos($pathinfo, '/admin/gestion/patient/suivi') && preg_match('#^/admin/gestion/patient/suivi/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_suivi_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_suivi_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_suivi_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivi_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient/suivi') && preg_match('#^/en/admin/gestion/patient/suivi/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_suivi_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_suivi_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_suivi_delete:

            // es__RG__gestion_suivi_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient/suivi') && preg_match('#^/es/admin/gestion/patient/suivi/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_suivi_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_suivi_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_suivi_delete:

        }

        // fr__RG__gestion_suivi_historique
        if ('/admin/gestion/patient/suivi/historique' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_suivi_historique;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::historiqueAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_suivi_historique',);
        }
        not_fr__RG__gestion_suivi_historique:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivi_historique
            if ('/en/admin/gestion/patient/suivi/historique' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_suivi_historique;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::historiqueAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_suivi_historique',);
            }
            not_en__RG__gestion_suivi_historique:

            // es__RG__gestion_suivi_historique
            if ('/es/admin/gestion/patient/suivi/historique' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_suivi_historique;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::historiqueAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_suivi_historique',);
            }
            not_es__RG__gestion_suivi_historique:

        }

        // fr__RG__gestion_suivi_historique_patient
        if (0 === strpos($pathinfo, '/admin/gestion/patient/suivi') && preg_match('#^/admin/gestion/patient/suivi/(?P<id>[^/]++)/historique$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_suivi_historique_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_suivi_historique_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::historiqueAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_suivi_historique_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivi_historique_patient
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient/suivi') && preg_match('#^/en/admin/gestion/patient/suivi/(?P<id>[^/]++)/historique$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_suivi_historique_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_suivi_historique_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::historiqueAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_suivi_historique_patient:

            // es__RG__gestion_suivi_historique_patient
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient/suivi') && preg_match('#^/es/admin/gestion/patient/suivi/(?P<id>[^/]++)/historique$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_suivi_historique_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_suivi_historique_patient')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::historiqueAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_suivi_historique_patient:

        }

        // fr__RG__gestion_suivi_search
        if ('/admin/gestion/patient/suivi/search' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_suivi_search;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_suivi_search',);
        }
        not_fr__RG__gestion_suivi_search:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_suivi_search
            if ('/en/admin/gestion/patient/suivi/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_suivi_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_suivi_search',);
            }
            not_en__RG__gestion_suivi_search:

            // es__RG__gestion_suivi_search
            if ('/es/admin/gestion/patient/suivi/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_suivi_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SuiviController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_suivi_search',);
            }
            not_es__RG__gestion_suivi_search:

        }

        // fr__RG__gestion_fiche_search
        if ('/admin/gestion/fiche/search' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fiche_search;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_fiche_search',);
        }
        not_fr__RG__gestion_fiche_search:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fiche_search
            if ('/en/admin/gestion/fiche/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fiche_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_fiche_search',);
            }
            not_en__RG__gestion_fiche_search:

            // es__RG__gestion_fiche_search
            if ('/es/admin/gestion/fiche/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fiche_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_fiche_search',);
            }
            not_es__RG__gestion_fiche_search:

        }

        // fr__RG__gestion_fiche_liste
        if (0 === strpos($pathinfo, '/admin/gestion/fiche/liste') && preg_match('#^/admin/gestion/fiche/liste(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_fiche_liste;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fiche_liste')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::listeAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fiche_liste:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fiche_liste
            if (0 === strpos($pathinfo, '/en/admin/gestion/fiche/liste') && preg_match('#^/en/admin/gestion/fiche/liste(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_fiche_liste;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fiche_liste')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::listeAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fiche_liste:

            // es__RG__gestion_fiche_liste
            if (0 === strpos($pathinfo, '/es/admin/gestion/fiche/liste') && preg_match('#^/es/admin/gestion/fiche/liste(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_fiche_liste;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fiche_liste')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::listeAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fiche_liste:

        }

        // fr__RG__gestion_fiche_print
        if (0 === strpos($pathinfo, '/admin/gestion/fiche') && preg_match('#^/admin/gestion/fiche/(?P<id>[^/]++)/print$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_fiche_print;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fiche_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::printAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fiche_print:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fiche_print
            if (0 === strpos($pathinfo, '/en/admin/gestion/fiche') && preg_match('#^/en/admin/gestion/fiche/(?P<id>[^/]++)/print$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_fiche_print;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fiche_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::printAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fiche_print:

            // es__RG__gestion_fiche_print
            if (0 === strpos($pathinfo, '/es/admin/gestion/fiche') && preg_match('#^/es/admin/gestion/fiche/(?P<id>[^/]++)/print$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_fiche_print;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fiche_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::printAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fiche_print:

        }

        // fr__RG__gestion_fiche_index
        if ('/admin/gestion/fiche' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_fiche_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_fiche_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_fiche_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_fiche_index',);
        }
        not_fr__RG__gestion_fiche_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fiche_index
            if ('/en/admin/gestion/fiche' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_fiche_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_fiche_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_fiche_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_fiche_index',);
            }
            not_en__RG__gestion_fiche_index:

            // es__RG__gestion_fiche_index
            if ('/es/admin/gestion/fiche' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_fiche_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_fiche_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_fiche_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_fiche_index',);
            }
            not_es__RG__gestion_fiche_index:

        }

        // fr__RG__gestion_fiche_histo
        if (0 === strpos($pathinfo, '/admin/gestion/fiche/historique') && preg_match('#^/admin/gestion/fiche/historique/(?P<patient>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fiche_histo;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fiche_histo')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::historiqueAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fiche_histo:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fiche_histo
            if (0 === strpos($pathinfo, '/en/admin/gestion/fiche/historique') && preg_match('#^/en/admin/gestion/fiche/historique/(?P<patient>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fiche_histo;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fiche_histo')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::historiqueAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fiche_histo:

            // es__RG__gestion_fiche_histo
            if (0 === strpos($pathinfo, '/es/admin/gestion/fiche/historique') && preg_match('#^/es/admin/gestion/fiche/historique/(?P<patient>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fiche_histo;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fiche_histo')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::historiqueAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fiche_histo:

        }

        // fr__RG__gestion_fiche_new
        if ('/admin/gestion/fiche/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fiche_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_fiche_new',);
        }
        not_fr__RG__gestion_fiche_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fiche_new
            if ('/en/admin/gestion/fiche/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fiche_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_fiche_new',);
            }
            not_en__RG__gestion_fiche_new:

            // es__RG__gestion_fiche_new
            if ('/es/admin/gestion/fiche/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fiche_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_fiche_new',);
            }
            not_es__RG__gestion_fiche_new:

        }

        // fr__RG__gestion_fiche_new_patient
        if (0 === strpos($pathinfo, '/admin/gestion/fiche/new') && preg_match('#^/admin/gestion/fiche/new(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fiche_new_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fiche_new_patient')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::newAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fiche_new_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fiche_new_patient
            if (0 === strpos($pathinfo, '/en/admin/gestion/fiche/new') && preg_match('#^/en/admin/gestion/fiche/new(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fiche_new_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fiche_new_patient')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::newAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fiche_new_patient:

            // es__RG__gestion_fiche_new_patient
            if (0 === strpos($pathinfo, '/es/admin/gestion/fiche/new') && preg_match('#^/es/admin/gestion/fiche/new(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fiche_new_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fiche_new_patient')), array (  'patient' => NULL,  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::newAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fiche_new_patient:

        }

        // fr__RG__gestion_fiche_show
        if (0 === strpos($pathinfo, '/admin/gestion/fiche') && preg_match('#^/admin/gestion/fiche/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_fiche_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fiche_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fiche_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fiche_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/fiche') && preg_match('#^/en/admin/gestion/fiche/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_fiche_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fiche_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fiche_show:

            // es__RG__gestion_fiche_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/fiche') && preg_match('#^/es/admin/gestion/fiche/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_fiche_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fiche_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fiche_show:

        }

        // fr__RG__gestion_fiche_edit
        if (0 === strpos($pathinfo, '/admin/gestion/fiche') && preg_match('#^/admin/gestion/fiche/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_fiche_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fiche_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fiche_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fiche_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/fiche') && preg_match('#^/en/admin/gestion/fiche/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_fiche_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fiche_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fiche_edit:

            // es__RG__gestion_fiche_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/fiche') && preg_match('#^/es/admin/gestion/fiche/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_fiche_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fiche_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fiche_edit:

        }

        // fr__RG__gestion_fiche_delete
        if (0 === strpos($pathinfo, '/admin/gestion/fiche') && preg_match('#^/admin/gestion/fiche/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__gestion_fiche_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_fiche_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_fiche_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_fiche_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/fiche') && preg_match('#^/en/admin/gestion/fiche/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__gestion_fiche_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_fiche_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_fiche_delete:

            // es__RG__gestion_fiche_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/fiche') && preg_match('#^/es/admin/gestion/fiche/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__gestion_fiche_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_fiche_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FicheController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_fiche_delete:

        }

        // fr__RG__ps_specialite_homepage
        if ('/admin/specialite' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__ps_specialite_homepage;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__ps_specialite_homepage');
            }

            return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_specialite_homepage',);
        }
        not_fr__RG__ps_specialite_homepage:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_specialite_homepage
            if ('/en/admin/specialite' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__ps_specialite_homepage;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__ps_specialite_homepage');
                }

                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_specialite_homepage',);
            }
            not_en__RG__ps_specialite_homepage:

            // es__RG__ps_specialite_homepage
            if ('/es/admin/specialite' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__ps_specialite_homepage;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__ps_specialite_homepage');
                }

                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_specialite_homepage',);
            }
            not_es__RG__ps_specialite_homepage:

        }

        // fr__RG__admin_specialite_typechamp_index
        if ('/admin/specialite/parametre/typechamp' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_specialite_typechamp_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_specialite_typechamp_index');
            }

            return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\TypeChampController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_specialite_typechamp_index',);
        }
        not_fr__RG__admin_specialite_typechamp_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_typechamp_index
            if ('/en/admin/specialite/parametre/typechamp' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_specialite_typechamp_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_specialite_typechamp_index');
                }

                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\TypeChampController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_specialite_typechamp_index',);
            }
            not_en__RG__admin_specialite_typechamp_index:

            // es__RG__admin_specialite_typechamp_index
            if ('/es/admin/specialite/parametre/typechamp' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_specialite_typechamp_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_specialite_typechamp_index');
                }

                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\TypeChampController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_specialite_typechamp_index',);
            }
            not_es__RG__admin_specialite_typechamp_index:

        }

        // fr__RG__admin_specialite_typechamp_new
        if ('/admin/specialite/parametre/typechamp/new' === $pathinfo) {
            return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\TypeChampController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_specialite_typechamp_new',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_typechamp_new
            if ('/en/admin/specialite/parametre/typechamp/new' === $pathinfo) {
                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\TypeChampController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_specialite_typechamp_new',);
            }

            // es__RG__admin_specialite_typechamp_new
            if ('/es/admin/specialite/parametre/typechamp/new' === $pathinfo) {
                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\TypeChampController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_specialite_typechamp_new',);
            }

        }

        // fr__RG__admin_specialite_typechamp_edit
        if (0 === strpos($pathinfo, '/admin/specialite/parametre/typechamp') && preg_match('#^/admin/specialite/parametre/typechamp/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_typechamp_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\TypeChampController::editAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_typechamp_edit
            if (0 === strpos($pathinfo, '/en/admin/specialite/parametre/typechamp') && preg_match('#^/en/admin/specialite/parametre/typechamp/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_typechamp_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\TypeChampController::editAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_typechamp_edit
            if (0 === strpos($pathinfo, '/es/admin/specialite/parametre/typechamp') && preg_match('#^/es/admin/specialite/parametre/typechamp/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_typechamp_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\TypeChampController::editAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_stats_index
        if ('/admin/specialite/parametre/stats' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_specialite_stats_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_specialite_stats_index');
            }

            return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_specialite_stats_index',);
        }
        not_fr__RG__admin_specialite_stats_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_stats_index
            if ('/en/admin/specialite/parametre/stats' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_specialite_stats_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_specialite_stats_index');
                }

                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_specialite_stats_index',);
            }
            not_en__RG__admin_specialite_stats_index:

            // es__RG__admin_specialite_stats_index
            if ('/es/admin/specialite/parametre/stats' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_specialite_stats_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_specialite_stats_index');
                }

                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_specialite_stats_index',);
            }
            not_es__RG__admin_specialite_stats_index:

        }

        // fr__RG__admin_specialite_stats_list
        if (0 === strpos($pathinfo, '/admin/specialite/parametre/stats') && preg_match('#^/admin/specialite/parametre/stats/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_stats_list')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::listAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_stats_list
            if (0 === strpos($pathinfo, '/en/admin/specialite/parametre/stats') && preg_match('#^/en/admin/specialite/parametre/stats/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_stats_list')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::listAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_stats_list
            if (0 === strpos($pathinfo, '/es/admin/specialite/parametre/stats') && preg_match('#^/es/admin/specialite/parametre/stats/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_stats_list')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::listAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_stats_new
        if (0 === strpos($pathinfo, '/admin/specialite/parametre/stats') && preg_match('#^/admin/specialite/parametre/stats/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_stats_new')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::newAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_stats_new
            if (0 === strpos($pathinfo, '/en/admin/specialite/parametre/stats') && preg_match('#^/en/admin/specialite/parametre/stats/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_stats_new')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::newAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_stats_new
            if (0 === strpos($pathinfo, '/es/admin/specialite/parametre/stats') && preg_match('#^/es/admin/specialite/parametre/stats/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_stats_new')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::newAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_stats_edit
        if (0 === strpos($pathinfo, '/admin/specialite/parametre/stats') && preg_match('#^/admin/specialite/parametre/stats/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_stats_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::editAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_stats_edit
            if (0 === strpos($pathinfo, '/en/admin/specialite/parametre/stats') && preg_match('#^/en/admin/specialite/parametre/stats/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_stats_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::editAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_stats_edit
            if (0 === strpos($pathinfo, '/es/admin/specialite/parametre/stats') && preg_match('#^/es/admin/specialite/parametre/stats/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_stats_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::editAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_stats_delete
        if (0 === strpos($pathinfo, '/admin/specialite/parametre/stats') && preg_match('#^/admin/specialite/parametre/stats/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_stats_delete')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::deleteAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_stats_delete
            if (0 === strpos($pathinfo, '/en/admin/specialite/parametre/stats') && preg_match('#^/en/admin/specialite/parametre/stats/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_stats_delete')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::deleteAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_stats_delete
            if (0 === strpos($pathinfo, '/es/admin/specialite/parametre/stats') && preg_match('#^/es/admin/specialite/parametre/stats/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_stats_delete')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::deleteAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_champ_index
        if ('/admin/specialite/parametre/champ' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_specialite_champ_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_specialite_champ_index');
            }

            return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_specialite_champ_index',);
        }
        not_fr__RG__admin_specialite_champ_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_champ_index
            if ('/en/admin/specialite/parametre/champ' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_specialite_champ_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_specialite_champ_index');
                }

                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_specialite_champ_index',);
            }
            not_en__RG__admin_specialite_champ_index:

            // es__RG__admin_specialite_champ_index
            if ('/es/admin/specialite/parametre/champ' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_specialite_champ_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_specialite_champ_index');
                }

                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_specialite_champ_index',);
            }
            not_es__RG__admin_specialite_champ_index:

        }

        // fr__RG__admin_specialite_champ_list
        if (0 === strpos($pathinfo, '/admin/specialite/parametre/champ') && preg_match('#^/admin/specialite/parametre/champ/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_champ_list')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::gridAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_champ_list
            if (0 === strpos($pathinfo, '/en/admin/specialite/parametre/champ') && preg_match('#^/en/admin/specialite/parametre/champ/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_champ_list')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::gridAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_champ_list
            if (0 === strpos($pathinfo, '/es/admin/specialite/parametre/champ') && preg_match('#^/es/admin/specialite/parametre/champ/(?P<id>[^/]++)/liste$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_champ_list')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::gridAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_champ_new
        if (0 === strpos($pathinfo, '/admin/specialite/parametre/champ') && preg_match('#^/admin/specialite/parametre/champ/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_champ_new')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::newAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_champ_new
            if (0 === strpos($pathinfo, '/en/admin/specialite/parametre/champ') && preg_match('#^/en/admin/specialite/parametre/champ/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_champ_new')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::newAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_champ_new
            if (0 === strpos($pathinfo, '/es/admin/specialite/parametre/champ') && preg_match('#^/es/admin/specialite/parametre/champ/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_champ_new')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::newAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_champ_edit
        if (0 === strpos($pathinfo, '/admin/specialite/parametre/champ') && preg_match('#^/admin/specialite/parametre/champ/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_champ_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::editAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_champ_edit
            if (0 === strpos($pathinfo, '/en/admin/specialite/parametre/champ') && preg_match('#^/en/admin/specialite/parametre/champ/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_champ_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::editAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_champ_edit
            if (0 === strpos($pathinfo, '/es/admin/specialite/parametre/champ') && preg_match('#^/es/admin/specialite/parametre/champ/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_champ_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::editAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_champ_delete
        if (0 === strpos($pathinfo, '/admin/specialite/parametre/champ') && preg_match('#^/admin/specialite/parametre/champ/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_champ_delete')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::deleteAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_champ_delete
            if (0 === strpos($pathinfo, '/en/admin/specialite/parametre/champ') && preg_match('#^/en/admin/specialite/parametre/champ/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_champ_delete')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::deleteAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_champ_delete
            if (0 === strpos($pathinfo, '/es/admin/specialite/parametre/champ') && preg_match('#^/es/admin/specialite/parametre/champ/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_champ_delete')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::deleteAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_champ_show
        if (0 === strpos($pathinfo, '/admin/specialite/parametre/champ') && preg_match('#^/admin/specialite/parametre/champ/(?P<id>[^/]++)/show(?:/(?P<etape>[^/]++))?$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_champ_show')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::showAction',  'etape' => NULL,  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_champ_show
            if (0 === strpos($pathinfo, '/en/admin/specialite/parametre/champ') && preg_match('#^/en/admin/specialite/parametre/champ/(?P<id>[^/]++)/show(?:/(?P<etape>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_champ_show')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::showAction',  'etape' => NULL,  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_champ_show
            if (0 === strpos($pathinfo, '/es/admin/specialite/parametre/champ') && preg_match('#^/es/admin/specialite/parametre/champ/(?P<id>[^/]++)/show(?:/(?P<etape>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_champ_show')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\ChampController::showAction',  'etape' => NULL,  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_etape_index
        if ('/admin/specialite/parametre/etape' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_specialite_etape_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_specialite_etape_index');
            }

            return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\EtapeController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_specialite_etape_index',);
        }
        not_fr__RG__admin_specialite_etape_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_etape_index
            if ('/en/admin/specialite/parametre/etape' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_specialite_etape_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_specialite_etape_index');
                }

                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\EtapeController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_specialite_etape_index',);
            }
            not_en__RG__admin_specialite_etape_index:

            // es__RG__admin_specialite_etape_index
            if ('/es/admin/specialite/parametre/etape' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_specialite_etape_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_specialite_etape_index');
                }

                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\EtapeController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_specialite_etape_index',);
            }
            not_es__RG__admin_specialite_etape_index:

        }

        // fr__RG__admin_specialite_etape_new
        if ('/admin/specialite/parametre/etape/new' === $pathinfo) {
            return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\EtapeController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_specialite_etape_new',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_etape_new
            if ('/en/admin/specialite/parametre/etape/new' === $pathinfo) {
                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\EtapeController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_specialite_etape_new',);
            }

            // es__RG__admin_specialite_etape_new
            if ('/es/admin/specialite/parametre/etape/new' === $pathinfo) {
                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\EtapeController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_specialite_etape_new',);
            }

        }

        // fr__RG__admin_specialite_etape_edit
        if (0 === strpos($pathinfo, '/admin/specialite/parametre/etape') && preg_match('#^/admin/specialite/parametre/etape/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_etape_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\EtapeController::editAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_etape_edit
            if (0 === strpos($pathinfo, '/en/admin/specialite/parametre/etape') && preg_match('#^/en/admin/specialite/parametre/etape/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_etape_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\EtapeController::editAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_etape_edit
            if (0 === strpos($pathinfo, '/es/admin/specialite/parametre/etape') && preg_match('#^/es/admin/specialite/parametre/etape/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_etape_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\EtapeController::editAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_fiche_search
        if ('/admin/specialite/fiche/search' === $pathinfo) {
            return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_specialite_fiche_search',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_fiche_search
            if ('/en/admin/specialite/fiche/search' === $pathinfo) {
                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_specialite_fiche_search',);
            }

            // es__RG__admin_specialite_fiche_search
            if ('/es/admin/specialite/fiche/search' === $pathinfo) {
                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_specialite_fiche_search',);
            }

        }

        // fr__RG__admin_specialite_fiche_index
        if (0 === strpos($pathinfo, '/admin/specialite/fiche/liste') && preg_match('#^/admin/specialite/fiche/liste/(?P<patient>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_fiche_index')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::indexAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_fiche_index
            if (0 === strpos($pathinfo, '/en/admin/specialite/fiche/liste') && preg_match('#^/en/admin/specialite/fiche/liste/(?P<patient>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_fiche_index')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::indexAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_fiche_index
            if (0 === strpos($pathinfo, '/es/admin/specialite/fiche/liste') && preg_match('#^/es/admin/specialite/fiche/liste/(?P<patient>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_fiche_index')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::indexAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_fiche_new
        if (0 === strpos($pathinfo, '/admin/specialite/fiche/new') && preg_match('#^/admin/specialite/fiche/new/(?P<patient>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_fiche_new')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::newAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_fiche_new
            if (0 === strpos($pathinfo, '/en/admin/specialite/fiche/new') && preg_match('#^/en/admin/specialite/fiche/new/(?P<patient>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_fiche_new')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::newAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_fiche_new
            if (0 === strpos($pathinfo, '/es/admin/specialite/fiche/new') && preg_match('#^/es/admin/specialite/fiche/new/(?P<patient>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_fiche_new')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::newAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_fiche_edit
        if (0 === strpos($pathinfo, '/admin/specialite/fiche/edit') && preg_match('#^/admin/specialite/fiche/edit/(?P<fiche>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_fiche_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::editAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_fiche_edit
            if (0 === strpos($pathinfo, '/en/admin/specialite/fiche/edit') && preg_match('#^/en/admin/specialite/fiche/edit/(?P<fiche>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_fiche_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::editAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_fiche_edit
            if (0 === strpos($pathinfo, '/es/admin/specialite/fiche/edit') && preg_match('#^/es/admin/specialite/fiche/edit/(?P<fiche>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_fiche_edit')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::editAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_fiche_details
        if (0 === strpos($pathinfo, '/admin/specialite/fiche/details') && preg_match('#^/admin/specialite/fiche/details/(?P<fiche>[^/]++)(?:/(?P<etape>[^/]++))?$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_fiche_details')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::detailsAction',  'etape' => NULL,  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_fiche_details
            if (0 === strpos($pathinfo, '/en/admin/specialite/fiche/details') && preg_match('#^/en/admin/specialite/fiche/details/(?P<fiche>[^/]++)(?:/(?P<etape>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_fiche_details')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::detailsAction',  'etape' => NULL,  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_fiche_details
            if (0 === strpos($pathinfo, '/es/admin/specialite/fiche/details') && preg_match('#^/es/admin/specialite/fiche/details/(?P<fiche>[^/]++)(?:/(?P<etape>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_fiche_details')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::detailsAction',  'etape' => NULL,  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_fiche_donnee
        if (0 === strpos($pathinfo, '/admin/specialite/fiche') && preg_match('#^/admin/specialite/fiche/(?P<fiche>[^/]++)/donnees(?:/(?P<etape>[^/]++))?$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_fiche_donnee')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::donneeAction',  'etape' => NULL,  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_fiche_donnee
            if (0 === strpos($pathinfo, '/en/admin/specialite/fiche') && preg_match('#^/en/admin/specialite/fiche/(?P<fiche>[^/]++)/donnees(?:/(?P<etape>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_fiche_donnee')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::donneeAction',  'etape' => NULL,  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_fiche_donnee
            if (0 === strpos($pathinfo, '/es/admin/specialite/fiche') && preg_match('#^/es/admin/specialite/fiche/(?P<fiche>[^/]++)/donnees(?:/(?P<etape>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_fiche_donnee')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::donneeAction',  'etape' => NULL,  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_fiche_etape
        if (0 === strpos($pathinfo, '/admin/specialite/fiche') && preg_match('#^/admin/specialite/fiche/(?P<fiche>[^/]++)/etapes/(?P<specialite>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_fiche_etape')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::etapeAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_fiche_etape
            if (0 === strpos($pathinfo, '/en/admin/specialite/fiche') && preg_match('#^/en/admin/specialite/fiche/(?P<fiche>[^/]++)/etapes/(?P<specialite>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_fiche_etape')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::etapeAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_fiche_etape
            if (0 === strpos($pathinfo, '/es/admin/specialite/fiche') && preg_match('#^/es/admin/specialite/fiche/(?P<fiche>[^/]++)/etapes/(?P<specialite>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_fiche_etape')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::etapeAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_specialite_fiche_historique
        if (0 === strpos($pathinfo, '/admin/specialite/fiche/historique') && preg_match('#^/admin/specialite/fiche/historique/(?P<patient>[^/]++)/(?P<fiche>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_specialite_fiche_historique')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::historiqueAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_specialite_fiche_historique
            if (0 === strpos($pathinfo, '/en/admin/specialite/fiche/historique') && preg_match('#^/en/admin/specialite/fiche/historique/(?P<patient>[^/]++)/(?P<fiche>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_specialite_fiche_historique')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::historiqueAction',  '_locale' => 'en',));
            }

            // es__RG__admin_specialite_fiche_historique
            if (0 === strpos($pathinfo, '/es/admin/specialite/fiche/historique') && preg_match('#^/es/admin/specialite/fiche/historique/(?P<patient>[^/]++)/(?P<fiche>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_specialite_fiche_historique')), array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\FicheController::historiqueAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__new
        if ('/admin/specialite/new' === $pathinfo) {
            return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__new',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__new
            if ('/en/admin/specialite/new' === $pathinfo) {
                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__new',);
            }

            // es__RG__new
            if ('/es/admin/specialite/new' === $pathinfo) {
                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__new',);
            }

        }

        // fr__RG__edit
        if ('/admin/specialite/edit' === $pathinfo) {
            return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::editAction',  '_locale' => 'fr',  '_route' => 'fr__RG__edit',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__edit
            if ('/en/admin/specialite/edit' === $pathinfo) {
                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::editAction',  '_locale' => 'en',  '_route' => 'en__RG__edit',);
            }

            // es__RG__edit
            if ('/es/admin/specialite/edit' === $pathinfo) {
                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::editAction',  '_locale' => 'es',  '_route' => 'es__RG__edit',);
            }

        }

        // fr__RG__delete
        if ('/admin/specialite/delete' === $pathinfo) {
            return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::deleteAction',  '_locale' => 'fr',  '_route' => 'fr__RG__delete',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__delete
            if ('/en/admin/specialite/delete' === $pathinfo) {
                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::deleteAction',  '_locale' => 'en',  '_route' => 'en__RG__delete',);
            }

            // es__RG__delete
            if ('/es/admin/specialite/delete' === $pathinfo) {
                return array (  '_controller' => 'PS\\SpecialiteBundle\\Controller\\StatistiqueController::deleteAction',  '_locale' => 'es',  '_route' => 'es__RG__delete',);
            }

        }

        // fr__RG__reset_password
        if ('/api/reset-password' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__reset_password;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::resetPasswordAction',  '_format' => 'json',  '_locale' => 'fr',  '_route' => 'fr__RG__reset_password',);
        }
        not_fr__RG__reset_password:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__reset_password
            if ('/en/api/reset-password' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__reset_password;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::resetPasswordAction',  '_format' => 'json',  '_locale' => 'en',  '_route' => 'en__RG__reset_password',);
            }
            not_en__RG__reset_password:

            // es__RG__reset_password
            if ('/es/api/reset-password' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__reset_password;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::resetPasswordAction',  '_format' => 'json',  '_locale' => 'es',  '_route' => 'es__RG__reset_password',);
            }
            not_es__RG__reset_password:

        }

        // fr__RG__post_login
        if ('/api/login' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_login;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::postLoginAction',  '_format' => 'json',  '_locale' => 'fr',  '_route' => 'fr__RG__post_login',);
        }
        not_fr__RG__post_login:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_login
            if ('/en/api/login' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_login;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::postLoginAction',  '_format' => 'json',  '_locale' => 'en',  '_route' => 'en__RG__post_login',);
            }
            not_en__RG__post_login:

            // es__RG__post_login
            if ('/es/api/login' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_login;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::postLoginAction',  '_format' => 'json',  '_locale' => 'es',  '_route' => 'es__RG__post_login',);
            }
            not_es__RG__post_login:

        }

        // fr__RG__post_register
        if ('/api/register' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_register;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::postRegisterAction',  '_format' => 'json',  '_locale' => 'fr',  '_route' => 'fr__RG__post_register',);
        }
        not_fr__RG__post_register:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_register
            if ('/en/api/register' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_register;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::postRegisterAction',  '_format' => 'json',  '_locale' => 'en',  '_route' => 'en__RG__post_register',);
            }
            not_en__RG__post_register:

            // es__RG__post_register
            if ('/es/api/register' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_register;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::postRegisterAction',  '_format' => 'json',  '_locale' => 'es',  '_route' => 'es__RG__post_register',);
            }
            not_es__RG__post_register:

        }

        // fr__RG__get_authenticate
        if ('/api/authenticate' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_authenticate;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::getAuthenticateAction',  '_format' => 'json',  '_locale' => 'fr',  '_route' => 'fr__RG__get_authenticate',);
        }
        not_fr__RG__get_authenticate:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_authenticate
            if ('/en/api/authenticate' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_authenticate;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::getAuthenticateAction',  '_format' => 'json',  '_locale' => 'en',  '_route' => 'en__RG__get_authenticate',);
            }
            not_en__RG__get_authenticate:

            // es__RG__get_authenticate
            if ('/es/api/authenticate' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_authenticate;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::getAuthenticateAction',  '_format' => 'json',  '_locale' => 'es',  '_route' => 'es__RG__get_authenticate',);
            }
            not_es__RG__get_authenticate:

        }

        // fr__RG__get_refresh_token
        if (0 === strpos($pathinfo, '/api/refresh-token') && preg_match('#^/api/refresh\\-token/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_refresh_token;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_refresh_token')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::getRefreshTokenAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_refresh_token:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_refresh_token
            if (0 === strpos($pathinfo, '/en/api/refresh-token') && preg_match('#^/en/api/refresh\\-token/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_refresh_token;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_refresh_token')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::getRefreshTokenAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_refresh_token:

            // es__RG__get_refresh_token
            if (0 === strpos($pathinfo, '/es/api/refresh-token') && preg_match('#^/es/api/refresh\\-token/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_refresh_token;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_refresh_token')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::getRefreshTokenAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_refresh_token:

        }

        // fr__RG__post_identification
        if ('/api/identification' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_identification;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::postIdentificationAction',  '_format' => 'json',  '_locale' => 'fr',  '_route' => 'fr__RG__post_identification',);
        }
        not_fr__RG__post_identification:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_identification
            if ('/en/api/identification' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_identification;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::postIdentificationAction',  '_format' => 'json',  '_locale' => 'en',  '_route' => 'en__RG__post_identification',);
            }
            not_en__RG__post_identification:

            // es__RG__post_identification
            if ('/es/api/identification' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_identification;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::postIdentificationAction',  '_format' => 'json',  '_locale' => 'es',  '_route' => 'es__RG__post_identification',);
            }
            not_es__RG__post_identification:

        }

        // fr__RG__post_profil
        if ('/api/profil' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_profil;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::postProfilAction',  '_format' => 'json',  '_locale' => 'fr',  '_route' => 'fr__RG__post_profil',);
        }
        not_fr__RG__post_profil:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_profil
            if ('/en/api/profil' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_profil;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::postProfilAction',  '_format' => 'json',  '_locale' => 'en',  '_route' => 'en__RG__post_profil',);
            }
            not_en__RG__post_profil:

            // es__RG__post_profil
            if ('/es/api/profil' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_profil;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\DefaultController::postProfilAction',  '_format' => 'json',  '_locale' => 'es',  '_route' => 'es__RG__post_profil',);
            }
            not_es__RG__post_profil:

        }

        // fr__RG__ps_api_v1_patient_rendezvous_getallrendezvous
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches) && ($request->attributes->get("version") == "v1")) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_api_v1_patient_rendezvous_getallrendezvous;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_v1_patient_rendezvous_getallrendezvous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\RendezVousController::getAllRendezVousAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_v1_patient_rendezvous_getallrendezvous:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_v1_patient_rendezvous_getallrendezvous
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches) && ($request->attributes->get("version") == "v1")) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_api_v1_patient_rendezvous_getallrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_v1_patient_rendezvous_getallrendezvous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\RendezVousController::getAllRendezVousAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_v1_patient_rendezvous_getallrendezvous:

            // es__RG__ps_api_v1_patient_rendezvous_getallrendezvous
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches) && ($request->attributes->get("version") == "v1")) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_api_v1_patient_rendezvous_getallrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_v1_patient_rendezvous_getallrendezvous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\RendezVousController::getAllRendezVousAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_v1_patient_rendezvous_getallrendezvous:

        }

        // fr__RG__ps_api_v1_patient_consultation_getconsultations
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches) && ($request->attributes->get("version") == "v1")) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_api_v1_patient_consultation_getconsultations;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_v1_patient_consultation_getconsultations')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::getConsultationsAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_v1_patient_consultation_getconsultations:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_v1_patient_consultation_getconsultations
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches) && ($request->attributes->get("version") == "v1")) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_api_v1_patient_consultation_getconsultations;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_v1_patient_consultation_getconsultations')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::getConsultationsAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_v1_patient_consultation_getconsultations:

            // es__RG__ps_api_v1_patient_consultation_getconsultations
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches) && ($request->attributes->get("version") == "v1")) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_api_v1_patient_consultation_getconsultations;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_v1_patient_consultation_getconsultations')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::getConsultationsAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_v1_patient_consultation_getconsultations:

        }

        // fr__RG__ps_api_v1_patient_consultation_getconsultation
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_api_v1_patient_consultation_getconsultation;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_v1_patient_consultation_getconsultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::getConsultationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_v1_patient_consultation_getconsultation:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_v1_patient_consultation_getconsultation
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_api_v1_patient_consultation_getconsultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_v1_patient_consultation_getconsultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::getConsultationAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_v1_patient_consultation_getconsultation:

            // es__RG__ps_api_v1_patient_consultation_getconsultation
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_api_v1_patient_consultation_getconsultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_v1_patient_consultation_getconsultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::getConsultationAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_v1_patient_consultation_getconsultation:

        }

        // fr__RG__ps_api_v1_patient_consultation_postconsultation
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_api_v1_patient_consultation_postconsultation;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_v1_patient_consultation_postconsultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::postConsultationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_v1_patient_consultation_postconsultation:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_v1_patient_consultation_postconsultation
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_api_v1_patient_consultation_postconsultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_v1_patient_consultation_postconsultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::postConsultationAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_v1_patient_consultation_postconsultation:

            // es__RG__ps_api_v1_patient_consultation_postconsultation
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_api_v1_patient_consultation_postconsultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_v1_patient_consultation_postconsultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::postConsultationAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_v1_patient_consultation_postconsultation:

        }

        // fr__RG__ps_api_v1_patient_consultation_putconsultation
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__ps_api_v1_patient_consultation_putconsultation;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_v1_patient_consultation_putconsultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::putConsultationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_v1_patient_consultation_putconsultation:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_v1_patient_consultation_putconsultation
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__ps_api_v1_patient_consultation_putconsultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_v1_patient_consultation_putconsultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::putConsultationAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_v1_patient_consultation_putconsultation:

            // es__RG__ps_api_v1_patient_consultation_putconsultation
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__ps_api_v1_patient_consultation_putconsultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_v1_patient_consultation_putconsultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::putConsultationAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_v1_patient_consultation_putconsultation:

        }

        // fr__RG__ps_api_v1_patient_consultation_deleteconsultation
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__ps_api_v1_patient_consultation_deleteconsultation;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_v1_patient_consultation_deleteconsultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::deleteConsultationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_v1_patient_consultation_deleteconsultation:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_v1_patient_consultation_deleteconsultation
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__ps_api_v1_patient_consultation_deleteconsultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_v1_patient_consultation_deleteconsultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::deleteConsultationAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_v1_patient_consultation_deleteconsultation:

            // es__RG__ps_api_v1_patient_consultation_deleteconsultation
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__ps_api_v1_patient_consultation_deleteconsultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_v1_patient_consultation_deleteconsultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Patient\\ConsultationController::deleteConsultationAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_v1_patient_consultation_deleteconsultation:

        }

        // fr__RG__ps_api_v1_medecin_rendezvous_getmedecinrendezvous
        if (0 === strpos($pathinfo, '/api/medecins') && preg_match('#^/api/medecins/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches) && ($request->attributes->get("version") == "v1")) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_api_v1_medecin_rendezvous_getmedecinrendezvous;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_v1_medecin_rendezvous_getmedecinrendezvous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Medecin\\RendezVousController::getMedecinRendezVousAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_v1_medecin_rendezvous_getmedecinrendezvous:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_v1_medecin_rendezvous_getmedecinrendezvous
            if (0 === strpos($pathinfo, '/en/api/medecins') && preg_match('#^/en/api/medecins/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches) && ($request->attributes->get("version") == "v1")) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_api_v1_medecin_rendezvous_getmedecinrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_v1_medecin_rendezvous_getmedecinrendezvous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Medecin\\RendezVousController::getMedecinRendezVousAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_v1_medecin_rendezvous_getmedecinrendezvous:

            // es__RG__ps_api_v1_medecin_rendezvous_getmedecinrendezvous
            if (0 === strpos($pathinfo, '/es/api/medecins') && preg_match('#^/es/api/medecins/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches) && ($request->attributes->get("version") == "v1")) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_api_v1_medecin_rendezvous_getmedecinrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_v1_medecin_rendezvous_getmedecinrendezvous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Medecin\\RendezVousController::getMedecinRendezVousAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_v1_medecin_rendezvous_getmedecinrendezvous:

        }

        // fr__RG__ps_api_v1_medecin_rendezvous_postrendezvous
        if (0 === strpos($pathinfo, '/api/medecins') && preg_match('#^/api/medecins/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_api_v1_medecin_rendezvous_postrendezvous;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_v1_medecin_rendezvous_postrendezvous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Medecin\\RendezVousController::postRendezVousAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_v1_medecin_rendezvous_postrendezvous:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_v1_medecin_rendezvous_postrendezvous
            if (0 === strpos($pathinfo, '/en/api/medecins') && preg_match('#^/en/api/medecins/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_api_v1_medecin_rendezvous_postrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_v1_medecin_rendezvous_postrendezvous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Medecin\\RendezVousController::postRendezVousAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_v1_medecin_rendezvous_postrendezvous:

            // es__RG__ps_api_v1_medecin_rendezvous_postrendezvous
            if (0 === strpos($pathinfo, '/es/api/medecins') && preg_match('#^/es/api/medecins/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_api_v1_medecin_rendezvous_postrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_v1_medecin_rendezvous_postrendezvous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Medecin\\RendezVousController::postRendezVousAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_v1_medecin_rendezvous_postrendezvous:

        }

        // fr__RG__ps_api_v1_medecin_rendezvous_patchrendezvous
        if (0 === strpos($pathinfo, '/api/medecins') && preg_match('#^/api/medecins/(?P<id>[^/]++)/rendez\\-vous/(?P<rendezVous>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__ps_api_v1_medecin_rendezvous_patchrendezvous;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_v1_medecin_rendezvous_patchrendezvous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Medecin\\RendezVousController::patchRendezVousAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_v1_medecin_rendezvous_patchrendezvous:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_v1_medecin_rendezvous_patchrendezvous
            if (0 === strpos($pathinfo, '/en/api/medecins') && preg_match('#^/en/api/medecins/(?P<id>[^/]++)/rendez\\-vous/(?P<rendezVous>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__ps_api_v1_medecin_rendezvous_patchrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_v1_medecin_rendezvous_patchrendezvous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Medecin\\RendezVousController::patchRendezVousAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_v1_medecin_rendezvous_patchrendezvous:

            // es__RG__ps_api_v1_medecin_rendezvous_patchrendezvous
            if (0 === strpos($pathinfo, '/es/api/medecins') && preg_match('#^/es/api/medecins/(?P<id>[^/]++)/rendez\\-vous/(?P<rendezVous>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__ps_api_v1_medecin_rendezvous_patchrendezvous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_v1_medecin_rendezvous_patchrendezvous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Medecin\\RendezVousController::patchRendezVousAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_v1_medecin_rendezvous_patchrendezvous:

        }

        // fr__RG__ps_api_v1_medecin_consultation_getconsultations
        if (0 === strpos($pathinfo, '/api/medecins') && preg_match('#^/api/medecins/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches) && ($request->attributes->get("version") == "v1")) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_api_v1_medecin_consultation_getconsultations;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_v1_medecin_consultation_getconsultations')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Medecin\\ConsultationController::getConsultationsAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_v1_medecin_consultation_getconsultations:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_v1_medecin_consultation_getconsultations
            if (0 === strpos($pathinfo, '/en/api/medecins') && preg_match('#^/en/api/medecins/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches) && ($request->attributes->get("version") == "v1")) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_api_v1_medecin_consultation_getconsultations;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_v1_medecin_consultation_getconsultations')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Medecin\\ConsultationController::getConsultationsAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_v1_medecin_consultation_getconsultations:

            // es__RG__ps_api_v1_medecin_consultation_getconsultations
            if (0 === strpos($pathinfo, '/es/api/medecins') && preg_match('#^/es/api/medecins/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches) && ($request->attributes->get("version") == "v1")) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_api_v1_medecin_consultation_getconsultations;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_v1_medecin_consultation_getconsultations')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\V1\\Medecin\\ConsultationController::getConsultationsAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_v1_medecin_consultation_getconsultations:

        }

        // fr__RG__ps_api_pays_getpays
        if ('/api/pays' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_api_pays_getpays;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\PaysController::getPaysAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_api_pays_getpays',);
        }
        not_fr__RG__ps_api_pays_getpays:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_pays_getpays
            if ('/en/api/pays' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_api_pays_getpays;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\PaysController::getPaysAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_api_pays_getpays',);
            }
            not_en__RG__ps_api_pays_getpays:

            // es__RG__ps_api_pays_getpays
            if ('/es/api/pays' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_api_pays_getpays;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\PaysController::getPaysAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_api_pays_getpays',);
            }
            not_es__RG__ps_api_pays_getpays:

        }

        // fr__RG__patch_user
        if (0 === strpos($pathinfo, '/api/users') && preg_match('#^/api/users/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__patch_user;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__patch_user')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\UserController::patchUserAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__patch_user:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__patch_user
            if (0 === strpos($pathinfo, '/en/api/users') && preg_match('#^/en/api/users/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__patch_user;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__patch_user')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\UserController::patchUserAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__patch_user:

            // es__RG__patch_user
            if (0 === strpos($pathinfo, '/es/api/users') && preg_match('#^/es/api/users/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__patch_user;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__patch_user')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\UserController::patchUserAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__patch_user:

        }

        // fr__RG__get_user
        if (0 === strpos($pathinfo, '/api/users') && preg_match('#^/api/users/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_user;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_user')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\UserController::getUserAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_user:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_user
            if (0 === strpos($pathinfo, '/en/api/users') && preg_match('#^/en/api/users/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_user;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_user')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\UserController::getUserAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_user:

            // es__RG__get_user
            if (0 === strpos($pathinfo, '/es/api/users') && preg_match('#^/es/api/users/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_user;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_user')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\UserController::getUserAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_user:

        }

        // fr__RG__get_medecins
        if (0 === strpos($pathinfo, '/api/medecins') && preg_match('#^/api/medecins/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_medecins;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_medecins')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\MedecinController::getMedecinsAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_medecins:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_medecins
            if (0 === strpos($pathinfo, '/en/api/medecins') && preg_match('#^/en/api/medecins/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_medecins;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_medecins')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\MedecinController::getMedecinsAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_medecins:

            // es__RG__get_medecins
            if (0 === strpos($pathinfo, '/es/api/medecins') && preg_match('#^/es/api/medecins/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_medecins;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_medecins')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\MedecinController::getMedecinsAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_medecins:

        }

        // fr__RG__patch_medecins
        if (0 === strpos($pathinfo, '/api/medecins') && preg_match('#^/api/medecins/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__patch_medecins;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__patch_medecins')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\MedecinController::patchMedecinsAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__patch_medecins:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__patch_medecins
            if (0 === strpos($pathinfo, '/en/api/medecins') && preg_match('#^/en/api/medecins/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__patch_medecins;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__patch_medecins')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\MedecinController::patchMedecinsAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__patch_medecins:

            // es__RG__patch_medecins
            if (0 === strpos($pathinfo, '/es/api/medecins') && preg_match('#^/es/api/medecins/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__patch_medecins;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__patch_medecins')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\MedecinController::patchMedecinsAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__patch_medecins:

        }

        // fr__RG__get_assurances
        if ('/api/assurances' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_assurances;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\AssuranceController::getAssurancesAction',  '_format' => 'json',  '_locale' => 'fr',  '_route' => 'fr__RG__get_assurances',);
        }
        not_fr__RG__get_assurances:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_assurances
            if ('/en/api/assurances' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_assurances;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\AssuranceController::getAssurancesAction',  '_format' => 'json',  '_locale' => 'en',  '_route' => 'en__RG__get_assurances',);
            }
            not_en__RG__get_assurances:

            // es__RG__get_assurances
            if ('/es/api/assurances' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_assurances;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\AssuranceController::getAssurancesAction',  '_format' => 'json',  '_locale' => 'es',  '_route' => 'es__RG__get_assurances',);
            }
            not_es__RG__get_assurances:

        }

        // fr__RG__get_groupe_sanguins
        if ('/api/groupe-sanguins' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_groupe_sanguins;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\GroupeSanguinController::getGroupeSanguinsAction',  '_format' => 'json',  '_locale' => 'fr',  '_route' => 'fr__RG__get_groupe_sanguins',);
        }
        not_fr__RG__get_groupe_sanguins:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_groupe_sanguins
            if ('/en/api/groupe-sanguins' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_groupe_sanguins;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\GroupeSanguinController::getGroupeSanguinsAction',  '_format' => 'json',  '_locale' => 'en',  '_route' => 'en__RG__get_groupe_sanguins',);
            }
            not_en__RG__get_groupe_sanguins:

            // es__RG__get_groupe_sanguins
            if ('/es/api/groupe-sanguins' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_groupe_sanguins;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\GroupeSanguinController::getGroupeSanguinsAction',  '_format' => 'json',  '_locale' => 'es',  '_route' => 'es__RG__get_groupe_sanguins',);
            }
            not_es__RG__get_groupe_sanguins:

        }

        // fr__RG__get_specialites
        if ('/api/specialites' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_specialites;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\SpecialiteController::getSpecialitesAction',  '_format' => 'json',  '_locale' => 'fr',  '_route' => 'fr__RG__get_specialites',);
        }
        not_fr__RG__get_specialites:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_specialites
            if ('/en/api/specialites' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_specialites;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\SpecialiteController::getSpecialitesAction',  '_format' => 'json',  '_locale' => 'en',  '_route' => 'en__RG__get_specialites',);
            }
            not_en__RG__get_specialites:

            // es__RG__get_specialites
            if ('/es/api/specialites' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_specialites;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\SpecialiteController::getSpecialitesAction',  '_format' => 'json',  '_locale' => 'es',  '_route' => 'es__RG__get_specialites',);
            }
            not_es__RG__get_specialites:

        }

        // fr__RG__get_hopitaux
        if ('/api/hopitaux' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_hopitaux;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\HopitalController::getHopitauxAction',  '_format' => 'json',  '_locale' => 'fr',  '_route' => 'fr__RG__get_hopitaux',);
        }
        not_fr__RG__get_hopitaux:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_hopitaux
            if ('/en/api/hopitaux' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_hopitaux;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\HopitalController::getHopitauxAction',  '_format' => 'json',  '_locale' => 'en',  '_route' => 'en__RG__get_hopitaux',);
            }
            not_en__RG__get_hopitaux:

            // es__RG__get_hopitaux
            if ('/es/api/hopitaux' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_hopitaux;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\HopitalController::getHopitauxAction',  '_format' => 'json',  '_locale' => 'es',  '_route' => 'es__RG__get_hopitaux',);
            }
            not_es__RG__get_hopitaux:

        }

        // fr__RG__get_villes
        if ('/api/villes' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_villes;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\VilleController::getVillesAction',  '_format' => 'json',  '_locale' => 'fr',  '_route' => 'fr__RG__get_villes',);
        }
        not_fr__RG__get_villes:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_villes
            if ('/en/api/villes' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_villes;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\VilleController::getVillesAction',  '_format' => 'json',  '_locale' => 'en',  '_route' => 'en__RG__get_villes',);
            }
            not_en__RG__get_villes:

            // es__RG__get_villes
            if ('/es/api/villes' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_villes;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\VilleController::getVillesAction',  '_format' => 'json',  '_locale' => 'es',  '_route' => 'es__RG__get_villes',);
            }
            not_es__RG__get_villes:

        }

        // fr__RG__get_consultations
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_consultations;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_consultations')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::getConsultationsAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_consultations:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_consultations
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_consultations;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_consultations')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::getConsultationsAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_consultations:

            // es__RG__get_consultations
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_consultations;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_consultations')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::getConsultationsAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_consultations:

        }

        // fr__RG__get_consultation
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_consultation;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_consultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::getConsultationAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_consultation:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_consultation
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_consultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_consultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::getConsultationAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_consultation:

            // es__RG__get_consultation
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_consultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_consultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::getConsultationAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_consultation:

        }

        // fr__RG__post_consultation
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_consultation;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__post_consultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::postConsultationAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__post_consultation:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_consultation
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_consultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__post_consultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::postConsultationAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__post_consultation:

            // es__RG__post_consultation
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_consultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__post_consultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::postConsultationAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__post_consultation:

        }

        // fr__RG__put_consultation
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__put_consultation;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__put_consultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::putConsultationAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__put_consultation:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__put_consultation
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__put_consultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__put_consultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::putConsultationAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__put_consultation:

            // es__RG__put_consultation
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__put_consultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__put_consultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::putConsultationAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__put_consultation:

        }

        // fr__RG__delete_consultation
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__delete_consultation;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__delete_consultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::deleteConsultationAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__delete_consultation:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__delete_consultation
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__delete_consultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__delete_consultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::deleteConsultationAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__delete_consultation:

            // es__RG__delete_consultation
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__delete_consultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__delete_consultation')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ConsultationController::deleteConsultationAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__delete_consultation:

        }

        // fr__RG__get_all_affection
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/affections$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_all_affection;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_all_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::getAllAffectionAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_all_affection:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_all_affection
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/affections$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_all_affection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_all_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::getAllAffectionAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_all_affection:

            // es__RG__get_all_affection
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/affections$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_all_affection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_all_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::getAllAffectionAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_all_affection:

        }

        // fr__RG__get_affection
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_affection;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::getAffectionAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_affection:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_affection
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_affection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::getAffectionAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_affection:

            // es__RG__get_affection
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_affection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::getAffectionAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_affection:

        }

        // fr__RG__post_affection
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/affections$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_affection;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__post_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::postAffectionAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__post_affection:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_affection
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/affections$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_affection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__post_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::postAffectionAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__post_affection:

            // es__RG__post_affection
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/affections$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_affection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__post_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::postAffectionAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__post_affection:

        }

        // fr__RG__put_affection
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__put_affection;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__put_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::putAffectionAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__put_affection:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__put_affection
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__put_affection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__put_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::putAffectionAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__put_affection:

            // es__RG__put_affection
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__put_affection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__put_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::putAffectionAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__put_affection:

        }

        // fr__RG__delete_affection
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__delete_affection;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__delete_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::deleteAffectionAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__delete_affection:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__delete_affection
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__delete_affection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__delete_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::deleteAffectionAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__delete_affection:

            // es__RG__delete_affection
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__delete_affection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__delete_affection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AffectionController::deleteAffectionAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__delete_affection:

        }

        // fr__RG__get_all_allergie
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/allergies$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_all_allergie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_all_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::getAllAllergieAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_all_allergie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_all_allergie
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/allergies$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_all_allergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_all_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::getAllAllergieAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_all_allergie:

            // es__RG__get_all_allergie
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/allergies$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_all_allergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_all_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::getAllAllergieAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_all_allergie:

        }

        // fr__RG__get_allergie
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_allergie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::getAllergieAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_allergie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_allergie
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_allergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::getAllergieAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_allergie:

            // es__RG__get_allergie
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_allergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::getAllergieAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_allergie:

        }

        // fr__RG__patch_allergie
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__patch_allergie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__patch_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::patchAllergieAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__patch_allergie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__patch_allergie
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__patch_allergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__patch_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::patchAllergieAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__patch_allergie:

            // es__RG__patch_allergie
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__patch_allergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__patch_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::patchAllergieAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__patch_allergie:

        }

        // fr__RG__put_allergie
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__put_allergie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__put_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::putAllergieAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__put_allergie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__put_allergie
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__put_allergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__put_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::putAllergieAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__put_allergie:

            // es__RG__put_allergie
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__put_allergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__put_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::putAllergieAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__put_allergie:

        }

        // fr__RG__post_allergie
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/allergies$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_allergie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__post_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::postAllergieAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__post_allergie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_allergie
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/allergies$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_allergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__post_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::postAllergieAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__post_allergie:

            // es__RG__post_allergie
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/allergies$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_allergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__post_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::postAllergieAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__post_allergie:

        }

        // fr__RG__delete_allergie
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__delete_allergie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__delete_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::deleteAllergieAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__delete_allergie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__delete_allergie
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__delete_allergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__delete_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::deleteAllergieAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__delete_allergie:

            // es__RG__delete_allergie
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/allergies/(?P<allergie>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__delete_allergie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__delete_allergie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AllergieController::deleteAllergieAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__delete_allergie:

        }

        // fr__RG__get_all_ordonnance
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/ordonnances$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_all_ordonnance;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_all_ordonnance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\OrdonnanceController::getAllOrdonnanceAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_all_ordonnance:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_all_ordonnance
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/ordonnances$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_all_ordonnance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_all_ordonnance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\OrdonnanceController::getAllOrdonnanceAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_all_ordonnance:

            // es__RG__get_all_ordonnance
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/ordonnances$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_all_ordonnance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_all_ordonnance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\OrdonnanceController::getAllOrdonnanceAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_all_ordonnance:

        }

        // fr__RG__get_ordonnance
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/ordonnances/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_ordonnance;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_ordonnance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\OrdonnanceController::getOrdonnanceAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_ordonnance:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_ordonnance
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/ordonnances/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_ordonnance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_ordonnance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\OrdonnanceController::getOrdonnanceAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_ordonnance:

            // es__RG__get_ordonnance
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/ordonnances/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_ordonnance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_ordonnance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\OrdonnanceController::getOrdonnanceAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_ordonnance:

        }

        // fr__RG__get_all
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/contacts$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_all;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_all')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::getAllAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_all:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_all
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/contacts$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_all;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_all')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::getAllAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_all:

            // es__RG__get_all
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/contacts$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_all;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_all')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::getAllAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_all:

        }

        // fr__RG__get_contact
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_contact;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_contact')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::getContactAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_contact:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_contact
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_contact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_contact')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::getContactAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_contact:

            // es__RG__get_contact
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_contact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_contact')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::getContactAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_contact:

        }

        // fr__RG__put_contact
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__put_contact;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__put_contact')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::putContactAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__put_contact:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__put_contact
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__put_contact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__put_contact')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::putContactAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__put_contact:

            // es__RG__put_contact
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__put_contact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__put_contact')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::putContactAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__put_contact:

        }

        // fr__RG__post_contact
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/contacts$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_contact;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__post_contact')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::postContactAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__post_contact:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_contact
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/contacts$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_contact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__post_contact')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::postContactAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__post_contact:

            // es__RG__post_contact
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/contacts$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_contact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__post_contact')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::postContactAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__post_contact:

        }

        // fr__RG__delete_contact
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__delete_contact;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__delete_contact')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::deleteContactAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__delete_contact:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__delete_contact
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__delete_contact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__delete_contact')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::deleteContactAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__delete_contact:

            // es__RG__delete_contact
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/contacts/(?P<contact>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__delete_contact;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__delete_contact')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\ContactController::deleteContactAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__delete_contact:

        }

        // fr__RG__get_all_rendez_vous
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_all_rendez_vous;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_all_rendez_vous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\RendezVousController::getAllRendezVousAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_all_rendez_vous:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_all_rendez_vous
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_all_rendez_vous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_all_rendez_vous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\RendezVousController::getAllRendezVousAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_all_rendez_vous:

            // es__RG__get_all_rendez_vous
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/rendez\\-vous$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_all_rendez_vous;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_all_rendez_vous')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\RendezVousController::getAllRendezVousAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_all_rendez_vous:

        }

        // fr__RG__post_photo
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/photo$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_photo;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__post_photo')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\PatientController::postPhotoAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__post_photo:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_photo
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/photo$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_photo;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__post_photo')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\PatientController::postPhotoAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__post_photo:

            // es__RG__post_photo
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/photo$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_photo;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__post_photo')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\PatientController::postPhotoAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__post_photo:

        }

        // fr__RG__patch_patient
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__patch_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__patch_patient')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\PatientController::patchPatientAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__patch_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__patch_patient
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__patch_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__patch_patient')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\PatientController::patchPatientAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__patch_patient:

            // es__RG__patch_patient
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__patch_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__patch_patient')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\PatientController::patchPatientAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__patch_patient:

        }

        // fr__RG__post_patient
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__post_patient')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\PatientController::postPatientAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__post_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_patient
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__post_patient')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\PatientController::postPatientAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__post_patient:

            // es__RG__post_patient
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__post_patient')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\PatientController::postPatientAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__post_patient:

        }

        // fr__RG__get_patient
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_patient')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\PatientController::getPatientAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_patient
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_patient')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\PatientController::getPatientAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_patient:

            // es__RG__get_patient
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_patient')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\PatientController::getPatientAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_patient:

        }

        // fr__RG__get_medicaments
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_medicaments;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_medicaments')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\MedicamentController::getMedicamentsAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_medicaments:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_medicaments
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_medicaments;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_medicaments')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\MedicamentController::getMedicamentsAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_medicaments:

            // es__RG__get_medicaments
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_medicaments;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_medicaments')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\MedicamentController::getMedicamentsAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_medicaments:

        }

        // fr__RG__post_medicaments
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_medicaments;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__post_medicaments')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\MedicamentController::postMedicamentsAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__post_medicaments:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_medicaments
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_medicaments;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__post_medicaments')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\MedicamentController::postMedicamentsAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__post_medicaments:

            // es__RG__post_medicaments
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_medicaments;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__post_medicaments')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\MedicamentController::postMedicamentsAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__post_medicaments:

        }

        // fr__RG__patch_medicaments
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments/(?P<medicament>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__patch_medicaments;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__patch_medicaments')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\MedicamentController::patchMedicamentsAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__patch_medicaments:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__patch_medicaments
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments/(?P<medicament>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__patch_medicaments;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__patch_medicaments')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\MedicamentController::patchMedicamentsAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__patch_medicaments:

            // es__RG__patch_medicaments
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments/(?P<medicament>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__patch_medicaments;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__patch_medicaments')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\MedicamentController::patchMedicamentsAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__patch_medicaments:

        }

        // fr__RG__delete_medicaments
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments/(?P<medicament>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__delete_medicaments;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__delete_medicaments')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\MedicamentController::deleteMedicamentsAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__delete_medicaments:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__delete_medicaments
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments/(?P<medicament>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__delete_medicaments;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__delete_medicaments')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\MedicamentController::deleteMedicamentsAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__delete_medicaments:

            // es__RG__delete_medicaments
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/medicaments/(?P<medicament>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__delete_medicaments;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__delete_medicaments')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\MedicamentController::deleteMedicamentsAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__delete_medicaments:

        }

        // fr__RG__get_analyses
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_analyses;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_analyses')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AnalyseController::getAnalysesAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_analyses:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_analyses
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_analyses;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_analyses')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AnalyseController::getAnalysesAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_analyses:

            // es__RG__get_analyses
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_analyses;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_analyses')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AnalyseController::getAnalysesAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_analyses:

        }

        // fr__RG__post_analyses
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_analyses;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__post_analyses')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AnalyseController::postAnalysesAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__post_analyses:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_analyses
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_analyses;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__post_analyses')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AnalyseController::postAnalysesAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__post_analyses:

            // es__RG__post_analyses
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_analyses;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__post_analyses')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AnalyseController::postAnalysesAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__post_analyses:

        }

        // fr__RG__patch_analyses
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses/(?P<analyse>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__patch_analyses;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__patch_analyses')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AnalyseController::patchAnalysesAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__patch_analyses:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__patch_analyses
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses/(?P<analyse>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__patch_analyses;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__patch_analyses')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AnalyseController::patchAnalysesAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__patch_analyses:

            // es__RG__patch_analyses
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses/(?P<analyse>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__patch_analyses;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__patch_analyses')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AnalyseController::patchAnalysesAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__patch_analyses:

        }

        // fr__RG__delete_analyses
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses/(?P<analyse>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__delete_analyses;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__delete_analyses')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AnalyseController::deleteAnalysesAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__delete_analyses:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__delete_analyses
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses/(?P<analyse>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__delete_analyses;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__delete_analyses')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AnalyseController::deleteAnalysesAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__delete_analyses:

            // es__RG__delete_analyses
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/analyses/(?P<analyse>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__delete_analyses;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__delete_analyses')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AnalyseController::deleteAnalysesAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__delete_analyses:

        }

        // fr__RG__get_affections
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/affections$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_affections;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_affections')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AffectionController::getAffectionsAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_affections:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_affections
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/affections$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_affections;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_affections')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AffectionController::getAffectionsAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_affections:

            // es__RG__get_affections
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/affections$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_affections;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_affections')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AffectionController::getAffectionsAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_affections:

        }

        // fr__RG__post_affections
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/affections$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_affections;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__post_affections')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AffectionController::postAffectionsAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__post_affections:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_affections
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/affections$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_affections;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__post_affections')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AffectionController::postAffectionsAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__post_affections:

            // es__RG__post_affections
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/affections$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_affections;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__post_affections')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AffectionController::postAffectionsAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__post_affections:

        }

        // fr__RG__patch_affections
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__patch_affections;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__patch_affections')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AffectionController::patchAffectionsAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__patch_affections:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__patch_affections
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__patch_affections;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__patch_affections')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AffectionController::patchAffectionsAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__patch_affections:

            // es__RG__patch_affections
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/affections/(?P<affection>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__patch_affections;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__patch_affections')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AffectionController::patchAffectionsAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__patch_affections:

        }

        // fr__RG__delete_affections
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/affections/(?P<afection>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__delete_affections;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__delete_affections')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AffectionController::deleteAffectionsAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__delete_affections:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__delete_affections
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/affections/(?P<afection>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__delete_affections;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__delete_affections')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AffectionController::deleteAffectionsAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__delete_affections:

            // es__RG__delete_affections
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/consultations/(?P<consultation>[^/]++)/affections/(?P<afection>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__delete_affections;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__delete_affections')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\Consultation\\AffectionController::deleteAffectionsAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__delete_affections:

        }

        // fr__RG__get_all_assurance
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/assurances$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_all_assurance;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_all_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::getAllAssuranceAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_all_assurance:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_all_assurance
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/assurances$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_all_assurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_all_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::getAllAssuranceAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_all_assurance:

            // es__RG__get_all_assurance
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/assurances$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_all_assurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_all_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::getAllAssuranceAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_all_assurance:

        }

        // fr__RG__get_assurance
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_assurance;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::getAssuranceAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_assurance:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_assurance
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_assurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::getAssuranceAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_assurance:

            // es__RG__get_assurance
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_assurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::getAssuranceAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_assurance:

        }

        // fr__RG__put_assurance
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__put_assurance;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__put_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::putAssuranceAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__put_assurance:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__put_assurance
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__put_assurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__put_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::putAssuranceAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__put_assurance:

            // es__RG__put_assurance
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__put_assurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__put_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::putAssuranceAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__put_assurance:

        }

        // fr__RG__post_assurance
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/assurances$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_assurance;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__post_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::postAssuranceAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__post_assurance:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_assurance
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/assurances$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_assurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__post_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::postAssuranceAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__post_assurance:

            // es__RG__post_assurance
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/assurances$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_assurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__post_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::postAssuranceAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__post_assurance:

        }

        // fr__RG__delete_assurance
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__delete_assurance;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__delete_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::deleteAssuranceAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__delete_assurance:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__delete_assurance
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__delete_assurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__delete_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::deleteAssuranceAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__delete_assurance:

            // es__RG__delete_assurance
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/assurances/(?P<assurance>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__delete_assurance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__delete_assurance')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssuranceController::deleteAssuranceAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__delete_assurance:

        }

        // fr__RG__get_all_vaccin
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/vaccins$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_all_vaccin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_all_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::getAllVaccinAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_all_vaccin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_all_vaccin
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/vaccins$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_all_vaccin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_all_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::getAllVaccinAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_all_vaccin:

            // es__RG__get_all_vaccin
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/vaccins$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_all_vaccin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_all_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::getAllVaccinAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_all_vaccin:

        }

        // fr__RG__get_vaccin
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/vaccins/(?P<vaccin>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_vaccin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::getVaccinAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_vaccin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_vaccin
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/vaccins/(?P<vaccin>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_vaccin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::getVaccinAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_vaccin:

            // es__RG__get_vaccin
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/vaccins/(?P<vaccin>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_vaccin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::getVaccinAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_vaccin:

        }

        // fr__RG__post_vaccin
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/vaccins$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_vaccin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__post_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::postVaccinAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__post_vaccin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_vaccin
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/vaccins$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_vaccin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__post_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::postVaccinAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__post_vaccin:

            // es__RG__post_vaccin
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/vaccins$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_vaccin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__post_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::postVaccinAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__post_vaccin:

        }

        // fr__RG__put_vaccin
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/vaccins/(?P<vaccin>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__put_vaccin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__put_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::putVaccinAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__put_vaccin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__put_vaccin
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/vaccins/(?P<vaccin>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__put_vaccin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__put_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::putVaccinAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__put_vaccin:

            // es__RG__put_vaccin
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/vaccins/(?P<vaccin>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__put_vaccin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__put_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::putVaccinAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__put_vaccin:

        }

        // fr__RG__delete_vaccin
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/vaccins/(?P<vaccin>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__delete_vaccin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__delete_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::deleteVaccinAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__delete_vaccin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__delete_vaccin
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/vaccins/(?P<vaccin>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__delete_vaccin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__delete_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::deleteVaccinAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__delete_vaccin:

            // es__RG__delete_vaccin
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/vaccins/(?P<vaccin>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__delete_vaccin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__delete_vaccin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\VaccinationController::deleteVaccinAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__delete_vaccin:

        }

        // fr__RG__get_all_medecin
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_all_medecin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_all_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::getAllMedecinAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_all_medecin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_all_medecin
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_all_medecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_all_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::getAllMedecinAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_all_medecin:

            // es__RG__get_all_medecin
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_all_medecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_all_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::getAllMedecinAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_all_medecin:

        }

        // fr__RG__get_medecin
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__get_medecin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__get_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::getMedecinAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__get_medecin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__get_medecin
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__get_medecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__get_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::getMedecinAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__get_medecin:

            // es__RG__get_medecin
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__get_medecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__get_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::getMedecinAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__get_medecin:

        }

        // fr__RG__put_medecin
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PUT') {
                $allow[] = 'PUT';
                goto not_fr__RG__put_medecin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__put_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::putMedecinAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__put_medecin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__put_medecin
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_en__RG__put_medecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__put_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::putMedecinAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__put_medecin:

            // es__RG__put_medecin
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PUT') {
                    $allow[] = 'PUT';
                    goto not_es__RG__put_medecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__put_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::putMedecinAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__put_medecin:

        }

        // fr__RG__post_medecin
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__post_medecin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__post_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::postMedecinAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__post_medecin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__post_medecin
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__post_medecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__post_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::postMedecinAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__post_medecin:

            // es__RG__post_medecin
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/medecins$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__post_medecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__post_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::postMedecinAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__post_medecin:

        }

        // fr__RG__delete_medecin
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__delete_medecin;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__delete_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::deleteMedecinAction',  '_format' => 'json',  '_locale' => 'fr',));
        }
        not_fr__RG__delete_medecin:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__delete_medecin
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__delete_medecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__delete_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::deleteMedecinAction',  '_format' => 'json',  '_locale' => 'en',));
            }
            not_en__RG__delete_medecin:

            // es__RG__delete_medecin
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/medecins/(?P<medecin>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__delete_medecin;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__delete_medecin')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\MedecinController::deleteMedecinAction',  '_format' => 'json',  '_locale' => 'es',));
            }
            not_es__RG__delete_medecin:

        }

        // fr__RG__ps_api_patient_associe_getallassocie
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/associes$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_api_patient_associe_getallassocie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_patient_associe_getallassocie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssocieController::getAllAssocieAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_patient_associe_getallassocie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_patient_associe_getallassocie
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/associes$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_api_patient_associe_getallassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_patient_associe_getallassocie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssocieController::getAllAssocieAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_patient_associe_getallassocie:

            // es__RG__ps_api_patient_associe_getallassocie
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/associes$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_api_patient_associe_getallassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_patient_associe_getallassocie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssocieController::getAllAssocieAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_patient_associe_getallassocie:

        }

        // fr__RG__ps_api_patient_associe_postassocie
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/associes$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__ps_api_patient_associe_postassocie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_patient_associe_postassocie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssocieController::postAssocieAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_patient_associe_postassocie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_patient_associe_postassocie
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/associes$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__ps_api_patient_associe_postassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_patient_associe_postassocie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssocieController::postAssocieAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_patient_associe_postassocie:

            // es__RG__ps_api_patient_associe_postassocie
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/associes$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__ps_api_patient_associe_postassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_patient_associe_postassocie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssocieController::postAssocieAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_patient_associe_postassocie:

        }

        // fr__RG__ps_api_patient_associe_patchassocie
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/associes/(?P<associe>[^/]++)$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__ps_api_patient_associe_patchassocie;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_patient_associe_patchassocie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssocieController::patchAssocieAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_patient_associe_patchassocie:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_patient_associe_patchassocie
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/associes/(?P<associe>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__ps_api_patient_associe_patchassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_patient_associe_patchassocie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssocieController::patchAssocieAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_patient_associe_patchassocie:

            // es__RG__ps_api_patient_associe_patchassocie
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/associes/(?P<associe>[^/]++)$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__ps_api_patient_associe_patchassocie;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_patient_associe_patchassocie')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AssocieController::patchAssocieAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_patient_associe_patchassocie:

        }

        // fr__RG__ps_api_patient_attribut_patchaffection
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/attributs$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'PATCH') {
                $allow[] = 'PATCH';
                goto not_fr__RG__ps_api_patient_attribut_patchaffection;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_patient_attribut_patchaffection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AttributController::patchAffectionAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_patient_attribut_patchaffection:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_patient_attribut_patchaffection
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/attributs$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_en__RG__ps_api_patient_attribut_patchaffection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_patient_attribut_patchaffection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AttributController::patchAffectionAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_patient_attribut_patchaffection:

            // es__RG__ps_api_patient_attribut_patchaffection
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/attributs$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'PATCH') {
                    $allow[] = 'PATCH';
                    goto not_es__RG__ps_api_patient_attribut_patchaffection;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_patient_attribut_patchaffection')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AttributController::patchAffectionAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_patient_attribut_patchaffection:

        }

        // fr__RG__ps_api_patient_attribut_getallattribut
        if (0 === strpos($pathinfo, '/api/patients') && preg_match('#^/api/patients/(?P<id>[^/]++)/attributs$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_api_patient_attribut_getallattribut;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__ps_api_patient_attribut_getallattribut')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AttributController::getAllAttributAction',  '_locale' => 'fr',));
        }
        not_fr__RG__ps_api_patient_attribut_getallattribut:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_patient_attribut_getallattribut
            if (0 === strpos($pathinfo, '/en/api/patients') && preg_match('#^/en/api/patients/(?P<id>[^/]++)/attributs$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_api_patient_attribut_getallattribut;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__ps_api_patient_attribut_getallattribut')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AttributController::getAllAttributAction',  '_locale' => 'en',));
            }
            not_en__RG__ps_api_patient_attribut_getallattribut:

            // es__RG__ps_api_patient_attribut_getallattribut
            if (0 === strpos($pathinfo, '/es/api/patients') && preg_match('#^/es/api/patients/(?P<id>[^/]++)/attributs$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_api_patient_attribut_getallattribut;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__ps_api_patient_attribut_getallattribut')), array (  '_controller' => 'PS\\ApiBundle\\Controller\\Patient\\AttributController::getAllAttributAction',  '_locale' => 'es',));
            }
            not_es__RG__ps_api_patient_attribut_getallattribut:

        }

        // fr__RG__ps_api_attribut_getattributs
        if ('/api/attributs' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__ps_api_attribut_getattributs;
            }

            return array (  '_controller' => 'PS\\ApiBundle\\Controller\\AttributController::getAttributsAction',  '_locale' => 'fr',  '_route' => 'fr__RG__ps_api_attribut_getattributs',);
        }
        not_fr__RG__ps_api_attribut_getattributs:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__ps_api_attribut_getattributs
            if ('/en/api/attributs' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__ps_api_attribut_getattributs;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\AttributController::getAttributsAction',  '_locale' => 'en',  '_route' => 'en__RG__ps_api_attribut_getattributs',);
            }
            not_en__RG__ps_api_attribut_getattributs:

            // es__RG__ps_api_attribut_getattributs
            if ('/es/api/attributs' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__ps_api_attribut_getattributs;
                }

                return array (  '_controller' => 'PS\\ApiBundle\\Controller\\AttributController::getAttributsAction',  '_locale' => 'es',  '_route' => 'es__RG__ps_api_attribut_getattributs',);
            }
            not_es__RG__ps_api_attribut_getattributs:

        }

        // fr__RG__psm_login_check
        if ('/login_check' === $pathinfo) {
            return array (  '_locale' => 'fr',  '_route' => 'fr__RG__psm_login_check',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__psm_login_check
            if ('/en/login_check' === $pathinfo) {
                return array (  '_locale' => 'en',  '_route' => 'en__RG__psm_login_check',);
            }

            // es__RG__psm_login_check
            if ('/es/login_check' === $pathinfo) {
                return array (  '_locale' => 'es',  '_route' => 'es__RG__psm_login_check',);
            }

        }

        // fr__RG__psm_logout
        if ('/logout' === $pathinfo) {
            return array (  '_locale' => 'fr',  '_route' => 'fr__RG__psm_logout',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__psm_logout
            if ('/en/logout' === $pathinfo) {
                return array (  '_locale' => 'en',  '_route' => 'en__RG__psm_logout',);
            }

            // es__RG__psm_logout
            if ('/es/logout' === $pathinfo) {
                return array (  '_locale' => 'es',  '_route' => 'es__RG__psm_logout',);
            }

        }

        // fr__RG__admin_consultation_search
        if ('/admin/consultation/search' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_search;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_consultation_search',);
        }
        not_fr__RG__admin_consultation_search:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_search
            if ('/en/admin/consultation/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_consultation_search',);
            }
            not_en__RG__admin_consultation_search:

            // es__RG__admin_consultation_search
            if ('/es/admin/consultation/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_consultation_search',);
            }
            not_es__RG__admin_consultation_search:

        }

        // fr__RG__admin_consultation_index
        if ('/admin/consultation' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_consultation_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_consultation_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_consultation_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_consultation_index',);
        }
        not_fr__RG__admin_consultation_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_index
            if ('/en/admin/consultation' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_consultation_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_consultation_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_consultation_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_consultation_index',);
            }
            not_en__RG__admin_consultation_index:

            // es__RG__admin_consultation_index
            if ('/es/admin/consultation' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_consultation_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_consultation_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_consultation_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_consultation_index',);
            }
            not_es__RG__admin_consultation_index:

        }

        // fr__RG__admin_consultation_show
        if (0 === strpos($pathinfo, '/admin/consultation') && preg_match('#^/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_consultation_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_show
            if (0 === strpos($pathinfo, '/en/admin/consultation') && preg_match('#^/en/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_consultation_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_show:

            // es__RG__admin_consultation_show
            if (0 === strpos($pathinfo, '/es/admin/consultation') && preg_match('#^/es/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_consultation_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_show:

        }

        // fr__RG__admin_consultation_info
        if (0 === strpos($pathinfo, '/admin/consultation') && preg_match('#^/admin/consultation/(?P<patient>[^/]++)/(?P<consultation>[^/]++)/info$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_info;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_info')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::infoAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_info:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_info
            if (0 === strpos($pathinfo, '/en/admin/consultation') && preg_match('#^/en/admin/consultation/(?P<patient>[^/]++)/(?P<consultation>[^/]++)/info$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_info;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_info')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::infoAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_info:

            // es__RG__admin_consultation_info
            if (0 === strpos($pathinfo, '/es/admin/consultation') && preg_match('#^/es/admin/consultation/(?P<patient>[^/]++)/(?P<consultation>[^/]++)/info$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_info;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_info')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::infoAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_info:

        }

        // fr__RG__admin_consultation_actions
        if (0 === strpos($pathinfo, '/admin/consultation') && preg_match('#^/admin/consultation/(?P<id>[^/]++)/actions$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_consultation_actions;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_actions')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::actionsAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_actions:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_actions
            if (0 === strpos($pathinfo, '/en/admin/consultation') && preg_match('#^/en/admin/consultation/(?P<id>[^/]++)/actions$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_consultation_actions;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_actions')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::actionsAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_actions:

            // es__RG__admin_consultation_actions
            if (0 === strpos($pathinfo, '/es/admin/consultation') && preg_match('#^/es/admin/consultation/(?P<id>[^/]++)/actions$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_consultation_actions;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_actions')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::actionsAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_actions:

        }

        // fr__RG__admin_consultation_new
        if (0 === strpos($pathinfo, '/admin/consultation/new') && preg_match('#^/admin/consultation/new(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_new;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::newAction',  'id' => NULL,  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_new
            if (0 === strpos($pathinfo, '/en/admin/consultation/new') && preg_match('#^/en/admin/consultation/new(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_new;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::newAction',  'id' => NULL,  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_new:

            // es__RG__admin_consultation_new
            if (0 === strpos($pathinfo, '/es/admin/consultation/new') && preg_match('#^/es/admin/consultation/new(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_new;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::newAction',  'id' => NULL,  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_new:

        }

        // fr__RG__admin_consultation_liste
        if (0 === strpos($pathinfo, '/admin/consultation/liste') && preg_match('#^/admin/consultation/liste(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_liste;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_liste')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::listeAction',  'id' => NULL,  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_liste:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_liste
            if (0 === strpos($pathinfo, '/en/admin/consultation/liste') && preg_match('#^/en/admin/consultation/liste(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_liste;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_liste')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::listeAction',  'id' => NULL,  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_liste:

            // es__RG__admin_consultation_liste
            if (0 === strpos($pathinfo, '/es/admin/consultation/liste') && preg_match('#^/es/admin/consultation/liste(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_liste;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_liste')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::listeAction',  'id' => NULL,  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_liste:

        }

        // fr__RG__admin_consultation_edit
        if (0 === strpos($pathinfo, '/admin/consultation') && preg_match('#^/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_edit
            if (0 === strpos($pathinfo, '/en/admin/consultation') && preg_match('#^/en/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_edit:

            // es__RG__admin_consultation_edit
            if (0 === strpos($pathinfo, '/es/admin/consultation') && preg_match('#^/es/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_edit:

        }

        // fr__RG__admin_consultation_delete
        if (0 === strpos($pathinfo, '/admin/consultation') && preg_match('#^/admin/consultation/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_consultation_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_delete
            if (0 === strpos($pathinfo, '/en/admin/consultation') && preg_match('#^/en/admin/consultation/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_consultation_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_delete:

            // es__RG__admin_consultation_delete
            if (0 === strpos($pathinfo, '/es/admin/consultation') && preg_match('#^/es/admin/consultation/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_consultation_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_delete:

        }

        // fr__RG__admin_consultation_historique_show
        if (0 === strpos($pathinfo, '/admin/consultation') && preg_match('#^/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/historique$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_consultation_historique_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_historique_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::historiqueShowAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_historique_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_historique_show
            if (0 === strpos($pathinfo, '/en/admin/consultation') && preg_match('#^/en/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/historique$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_consultation_historique_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_historique_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::historiqueShowAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_historique_show:

            // es__RG__admin_consultation_historique_show
            if (0 === strpos($pathinfo, '/es/admin/consultation') && preg_match('#^/es/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/historique$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_consultation_historique_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_historique_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::historiqueShowAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_historique_show:

        }

        // fr__RG__admin_consultation_historique
        if ('/admin/consultation/historique' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_historique;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::historiqueAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_consultation_historique',);
        }
        not_fr__RG__admin_consultation_historique:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_historique
            if ('/en/admin/consultation/historique' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_historique;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::historiqueAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_consultation_historique',);
            }
            not_en__RG__admin_consultation_historique:

            // es__RG__admin_consultation_historique
            if ('/es/admin/consultation/historique' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_historique;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::historiqueAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_consultation_historique',);
            }
            not_es__RG__admin_consultation_historique:

        }

        // fr__RG__admin_consultation_ordonnance
        if (0 === strpos($pathinfo, '/admin/consultation') && preg_match('#^/admin/consultation/(?P<patient>[^/]++)/(?P<consultation>[^/]++)/ordonnance$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_ordonnance;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_ordonnance')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::ordonnanceAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_ordonnance:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_ordonnance
            if (0 === strpos($pathinfo, '/en/admin/consultation') && preg_match('#^/en/admin/consultation/(?P<patient>[^/]++)/(?P<consultation>[^/]++)/ordonnance$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_ordonnance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_ordonnance')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::ordonnanceAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_ordonnance:

            // es__RG__admin_consultation_ordonnance
            if (0 === strpos($pathinfo, '/es/admin/consultation') && preg_match('#^/es/admin/consultation/(?P<patient>[^/]++)/(?P<consultation>[^/]++)/ordonnance$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_ordonnance;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_ordonnance')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::ordonnanceAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_ordonnance:

        }

        // fr__RG__admin_consultation_print
        if (0 === strpos($pathinfo, '/admin/consultation') && preg_match('#^/admin/consultation/(?P<id>[^/]++)/print_consultation$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_print;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::imprimerConsultationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_print:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_print
            if (0 === strpos($pathinfo, '/en/admin/consultation') && preg_match('#^/en/admin/consultation/(?P<id>[^/]++)/print_consultation$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_print;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::imprimerConsultationAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_print:

            // es__RG__admin_consultation_print
            if (0 === strpos($pathinfo, '/es/admin/consultation') && preg_match('#^/es/admin/consultation/(?P<id>[^/]++)/print_consultation$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_print;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::imprimerConsultationAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_print:

        }

        // fr__RG__admin_consultation_preview_print
        if (0 === strpos($pathinfo, '/admin/consultation') && preg_match('#^/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/preview_consultation$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_preview_print;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_preview_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::previewConsultationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_preview_print:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_preview_print
            if (0 === strpos($pathinfo, '/en/admin/consultation') && preg_match('#^/en/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/preview_consultation$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_preview_print;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_preview_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::previewConsultationAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_preview_print:

            // es__RG__admin_consultation_preview_print
            if (0 === strpos($pathinfo, '/es/admin/consultation') && preg_match('#^/es/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/preview_consultation$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_preview_print;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_preview_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::previewConsultationAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_preview_print:

        }

        // fr__RG__admin_consultation_ordonnance_print
        if (0 === strpos($pathinfo, '/admin/consultation') && preg_match('#^/admin/consultation/(?P<id>[^/]++)/print_ordonnance$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_ordonnance_print;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_ordonnance_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::imprimerOrdonnanceAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_ordonnance_print:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_ordonnance_print
            if (0 === strpos($pathinfo, '/en/admin/consultation') && preg_match('#^/en/admin/consultation/(?P<id>[^/]++)/print_ordonnance$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_ordonnance_print;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_ordonnance_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::imprimerOrdonnanceAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_ordonnance_print:

            // es__RG__admin_consultation_ordonnance_print
            if (0 === strpos($pathinfo, '/es/admin/consultation') && preg_match('#^/es/admin/consultation/(?P<id>[^/]++)/print_ordonnance$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_ordonnance_print;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_ordonnance_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::imprimerOrdonnanceAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_ordonnance_print:

        }

        // fr__RG__admin_consultation_ordonnance_preview_print
        if (0 === strpos($pathinfo, '/admin/consultation') && preg_match('#^/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/preview_ordonnance$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_consultation_ordonnance_preview_print;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_consultation_ordonnance_preview_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::previewOrdonnanceAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_consultation_ordonnance_preview_print:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_consultation_ordonnance_preview_print
            if (0 === strpos($pathinfo, '/en/admin/consultation') && preg_match('#^/en/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/preview_ordonnance$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_consultation_ordonnance_preview_print;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_consultation_ordonnance_preview_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::previewOrdonnanceAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_consultation_ordonnance_preview_print:

            // es__RG__admin_consultation_ordonnance_preview_print
            if (0 === strpos($pathinfo, '/es/admin/consultation') && preg_match('#^/es/admin/consultation/(?P<id>[^/]++)/(?P<id1>[^/]++)/preview_ordonnance$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_consultation_ordonnance_preview_print;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_consultation_ordonnance_preview_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::previewOrdonnanceAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_consultation_ordonnance_preview_print:

        }

        // fr__RG__admin_pharmacie_search
        if ('/admin/pharmacie/search' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_pharmacie_search;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_pharmacie_search',);
        }
        not_fr__RG__admin_pharmacie_search:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_search
            if ('/en/admin/pharmacie/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_pharmacie_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_pharmacie_search',);
            }
            not_en__RG__admin_pharmacie_search:

            // es__RG__admin_pharmacie_search
            if ('/es/admin/pharmacie/search' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_pharmacie_search;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_pharmacie_search',);
            }
            not_es__RG__admin_pharmacie_search:

        }

        // fr__RG__admin_pharmacie_index
        if ('/admin/pharmacie' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_pharmacie_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_pharmacie_index');
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_pharmacie_index',);
        }
        not_fr__RG__admin_pharmacie_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_index
            if ('/en/admin/pharmacie' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_pharmacie_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_pharmacie_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_pharmacie_index',);
            }
            not_en__RG__admin_pharmacie_index:

            // es__RG__admin_pharmacie_index
            if ('/es/admin/pharmacie' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_pharmacie_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_pharmacie_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_pharmacie_index',);
            }
            not_es__RG__admin_pharmacie_index:

        }

        // fr__RG__admin_pharmacie_add
        if ('/admin/pharmacie/add' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_pharmacie_add',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_add
            if ('/en/admin/pharmacie/add' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_pharmacie_add',);
            }

            // es__RG__admin_pharmacie_add
            if ('/es/admin/pharmacie/add' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_pharmacie_add',);
            }

        }

        // fr__RG__admin_pharmacie_verif
        if (0 === strpos($pathinfo, '/admin/pharmacie/verif') && preg_match('#^/admin/pharmacie/verif(?:/(?P<consultation>[^/]++))?$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_pharmacie_verif')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::verificationMedicamentAction',  'consultation' => NULL,  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_verif
            if (0 === strpos($pathinfo, '/en/admin/pharmacie/verif') && preg_match('#^/en/admin/pharmacie/verif(?:/(?P<consultation>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_pharmacie_verif')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::verificationMedicamentAction',  'consultation' => NULL,  '_locale' => 'en',));
            }

            // es__RG__admin_pharmacie_verif
            if (0 === strpos($pathinfo, '/es/admin/pharmacie/verif') && preg_match('#^/es/admin/pharmacie/verif(?:/(?P<consultation>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_pharmacie_verif')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::verificationMedicamentAction',  'consultation' => NULL,  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_pharmacie_export
        if ('/admin/pharmacie/export' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::exportAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_pharmacie_export',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_export
            if ('/en/admin/pharmacie/export' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::exportAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_pharmacie_export',);
            }

            // es__RG__admin_pharmacie_export
            if ('/es/admin/pharmacie/export' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::exportAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_pharmacie_export',);
            }

        }

        // fr__RG__admin_pharmacie_garde
        if ('/admin/pharmacie/garde' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::gardePharmacieAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_pharmacie_garde',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_garde
            if ('/en/admin/pharmacie/garde' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::gardePharmacieAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_pharmacie_garde',);
            }

            // es__RG__admin_pharmacie_garde
            if ('/es/admin/pharmacie/garde' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::gardePharmacieAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_pharmacie_garde',);
            }

        }

        // fr__RG__admin_pharmacie_liste
        if ('/admin/pharmacie/liste' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::listeMedicamentsAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_pharmacie_liste',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_liste
            if ('/en/admin/pharmacie/liste' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::listeMedicamentsAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_pharmacie_liste',);
            }

            // es__RG__admin_pharmacie_liste
            if ('/es/admin/pharmacie/liste' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::listeMedicamentsAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_pharmacie_liste',);
            }

        }

        // fr__RG__admin_pharmacie_dispo
        if ('/admin/pharmacie/disponibilite' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::disponibiliteMedicamentsAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_pharmacie_dispo',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_dispo
            if ('/en/admin/pharmacie/disponibilite' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::disponibiliteMedicamentsAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_pharmacie_dispo',);
            }

            // es__RG__admin_pharmacie_dispo
            if ('/es/admin/pharmacie/disponibilite' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::disponibiliteMedicamentsAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_pharmacie_dispo',);
            }

        }

        // fr__RG__admin_pharmacie_edit
        if (0 === strpos($pathinfo, '/admin/pharmacie') && preg_match('#^/admin/pharmacie/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_pharmacie_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::editAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_edit
            if (0 === strpos($pathinfo, '/en/admin/pharmacie') && preg_match('#^/en/admin/pharmacie/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_pharmacie_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::editAction',  '_locale' => 'en',));
            }

            // es__RG__admin_pharmacie_edit
            if (0 === strpos($pathinfo, '/es/admin/pharmacie') && preg_match('#^/es/admin/pharmacie/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_pharmacie_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::editAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_pharmacie_show
        if (0 === strpos($pathinfo, '/admin/pharmacie') && preg_match('#^/admin/pharmacie/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_pharmacie_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::showAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_show
            if (0 === strpos($pathinfo, '/en/admin/pharmacie') && preg_match('#^/en/admin/pharmacie/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_pharmacie_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::showAction',  '_locale' => 'en',));
            }

            // es__RG__admin_pharmacie_show
            if (0 === strpos($pathinfo, '/es/admin/pharmacie') && preg_match('#^/es/admin/pharmacie/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_pharmacie_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::showAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_pharmacie_delete
        if (0 === strpos($pathinfo, '/admin/pharmacie') && preg_match('#^/admin/pharmacie/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_pharmacie_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::deleteAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_delete
            if (0 === strpos($pathinfo, '/en/admin/pharmacie') && preg_match('#^/en/admin/pharmacie/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_pharmacie_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::deleteAction',  '_locale' => 'en',));
            }

            // es__RG__admin_pharmacie_delete
            if (0 === strpos($pathinfo, '/es/admin/pharmacie') && preg_match('#^/es/admin/pharmacie/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_pharmacie_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::deleteAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_pharmacie_historique
        if ('/admin/pharmacie/historique' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_pharmacie_historique;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::historiqueAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_pharmacie_historique',);
        }
        not_fr__RG__admin_pharmacie_historique:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_historique
            if ('/en/admin/pharmacie/historique' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_pharmacie_historique;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::historiqueAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_pharmacie_historique',);
            }
            not_en__RG__admin_pharmacie_historique:

            // es__RG__admin_pharmacie_historique
            if ('/es/admin/pharmacie/historique' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_pharmacie_historique;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::historiqueAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_pharmacie_historique',);
            }
            not_es__RG__admin_pharmacie_historique:

        }

        // fr__RG__admin_pharmacie_ordonnance
        if (0 === strpos($pathinfo, '/admin/pharmacie/ordonnances') && preg_match('#^/admin/pharmacie/ordonnances(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_pharmacie_ordonnance')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::ordonnanceAction',  'id' => NULL,  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_ordonnance
            if (0 === strpos($pathinfo, '/en/admin/pharmacie/ordonnances') && preg_match('#^/en/admin/pharmacie/ordonnances(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_pharmacie_ordonnance')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::ordonnanceAction',  'id' => NULL,  '_locale' => 'en',));
            }

            // es__RG__admin_pharmacie_ordonnance
            if (0 === strpos($pathinfo, '/es/admin/pharmacie/ordonnances') && preg_match('#^/es/admin/pharmacie/ordonnances(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_pharmacie_ordonnance')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::ordonnanceAction',  'id' => NULL,  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_pharmacie_medicament
        if (0 === strpos($pathinfo, '/admin/pharmacie/medicaments') && preg_match('#^/admin/pharmacie/medicaments/(?P<patient>[^/]++)/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_pharmacie_medicament')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::medicamentAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_medicament
            if (0 === strpos($pathinfo, '/en/admin/pharmacie/medicaments') && preg_match('#^/en/admin/pharmacie/medicaments/(?P<patient>[^/]++)/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_pharmacie_medicament')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::medicamentAction',  '_locale' => 'en',));
            }

            // es__RG__admin_pharmacie_medicament
            if (0 === strpos($pathinfo, '/es/admin/pharmacie/medicaments') && preg_match('#^/es/admin/pharmacie/medicaments/(?P<patient>[^/]++)/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_pharmacie_medicament')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::medicamentAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_pharmacie_historique_med
        if (0 === strpos($pathinfo, '/admin/pharmacie/medicaments/historique') && preg_match('#^/admin/pharmacie/medicaments/historique/(?P<patient>[^/]++)/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_pharmacie_historique_med')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::historiqueAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_pharmacie_historique_med
            if (0 === strpos($pathinfo, '/en/admin/pharmacie/medicaments/historique') && preg_match('#^/en/admin/pharmacie/medicaments/historique/(?P<patient>[^/]++)/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_pharmacie_historique_med')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::historiqueAction',  '_locale' => 'en',));
            }

            // es__RG__admin_pharmacie_historique_med
            if (0 === strpos($pathinfo, '/es/admin/pharmacie/medicaments/historique') && preg_match('#^/es/admin/pharmacie/medicaments/historique/(?P<patient>[^/]++)/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_pharmacie_historique_med')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PharmacieController::historiqueAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_site_index
        if ('/admin/gestion/site' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_gestion_site_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_gestion_site_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_site_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_site_index',);
        }
        not_fr__RG__admin_gestion_site_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_site_index
            if ('/en/admin/gestion/site' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_gestion_site_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_gestion_site_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_site_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_site_index',);
            }
            not_en__RG__admin_gestion_site_index:

            // es__RG__admin_gestion_site_index
            if ('/es/admin/gestion/site' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_gestion_site_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_gestion_site_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_site_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_site_index',);
            }
            not_es__RG__admin_gestion_site_index:

        }

        // fr__RG__admin_gestion_site_show
        if (0 === strpos($pathinfo, '/admin/gestion/site') && preg_match('#^/admin/gestion/site/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_site_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_site_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_site_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_site_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/site') && preg_match('#^/en/admin/gestion/site/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_site_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_site_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_site_show:

            // es__RG__admin_gestion_site_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/site') && preg_match('#^/es/admin/gestion/site/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_site_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_site_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_site_show:

        }

        // fr__RG__admin_gestion_site_new
        if ('/admin/gestion/site/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_site_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_site_new',);
        }
        not_fr__RG__admin_gestion_site_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_site_new
            if ('/en/admin/gestion/site/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_site_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_site_new',);
            }
            not_en__RG__admin_gestion_site_new:

            // es__RG__admin_gestion_site_new
            if ('/es/admin/gestion/site/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_site_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_site_new',);
            }
            not_es__RG__admin_gestion_site_new:

        }

        // fr__RG__admin_gestion_site_edit
        if (0 === strpos($pathinfo, '/admin/gestion/site') && preg_match('#^/admin/gestion/site/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_site_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_site_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_site_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_site_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/site') && preg_match('#^/en/admin/gestion/site/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_site_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_site_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_site_edit:

            // es__RG__admin_gestion_site_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/site') && preg_match('#^/es/admin/gestion/site/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_site_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_site_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_site_edit:

        }

        // fr__RG__admin_gestion_site_delete
        if (0 === strpos($pathinfo, '/admin/gestion/site') && preg_match('#^/admin/gestion/site/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_gestion_site_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_site_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_site_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_site_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/site') && preg_match('#^/en/admin/gestion/site/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_gestion_site_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_site_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_site_delete:

            // es__RG__admin_gestion_site_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/site') && preg_match('#^/es/admin/gestion/site/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_gestion_site_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_site_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_site_delete:

        }

        // fr__RG__admin_gestion_faq_index
        if ('/admin/gestion/faq' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_gestion_faq_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_gestion_faq_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_faq_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_faq_index',);
        }
        not_fr__RG__admin_gestion_faq_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_faq_index
            if ('/en/admin/gestion/faq' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_gestion_faq_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_gestion_faq_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_faq_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_faq_index',);
            }
            not_en__RG__admin_gestion_faq_index:

            // es__RG__admin_gestion_faq_index
            if ('/es/admin/gestion/faq' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_gestion_faq_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_gestion_faq_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_faq_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_faq_index',);
            }
            not_es__RG__admin_gestion_faq_index:

        }

        // fr__RG__admin_gestion_faq_show
        if (0 === strpos($pathinfo, '/admin/gestion/faq') && preg_match('#^/admin/gestion/faq/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_faq_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_faq_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_faq_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_faq_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/faq') && preg_match('#^/en/admin/gestion/faq/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_faq_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_faq_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_faq_show:

            // es__RG__admin_gestion_faq_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/faq') && preg_match('#^/es/admin/gestion/faq/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_faq_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_faq_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_faq_show:

        }

        // fr__RG__admin_gestion_faq_new
        if ('/admin/gestion/faq/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_faq_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_faq_new',);
        }
        not_fr__RG__admin_gestion_faq_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_faq_new
            if ('/en/admin/gestion/faq/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_faq_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_faq_new',);
            }
            not_en__RG__admin_gestion_faq_new:

            // es__RG__admin_gestion_faq_new
            if ('/es/admin/gestion/faq/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_faq_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_faq_new',);
            }
            not_es__RG__admin_gestion_faq_new:

        }

        // fr__RG__admin_gestion_faq_edit
        if (0 === strpos($pathinfo, '/admin/gestion/faq') && preg_match('#^/admin/gestion/faq/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_faq_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_faq_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_faq_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_faq_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/faq') && preg_match('#^/en/admin/gestion/faq/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_faq_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_faq_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_faq_edit:

            // es__RG__admin_gestion_faq_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/faq') && preg_match('#^/es/admin/gestion/faq/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_faq_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_faq_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_faq_edit:

        }

        // fr__RG__admin_gestion_faq_delete
        if (0 === strpos($pathinfo, '/admin/gestion/faq') && preg_match('#^/admin/gestion/faq/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_gestion_faq_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_faq_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_faq_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_faq_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/faq') && preg_match('#^/en/admin/gestion/faq/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_gestion_faq_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_faq_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_faq_delete:

            // es__RG__admin_gestion_faq_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/faq') && preg_match('#^/es/admin/gestion/faq/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_gestion_faq_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_faq_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\FaqController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_faq_delete:

        }

        // fr__RG__admin_gestion_patient_info
        if (0 === strpos($pathinfo, '/admin/patient/info') && preg_match('#^/admin/patient/info(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_patient_info;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_patient_info')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::infoAction',  'id' => NULL,  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_patient_info:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_patient_info
            if (0 === strpos($pathinfo, '/en/admin/patient/info') && preg_match('#^/en/admin/patient/info(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_patient_info;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_patient_info')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::infoAction',  'id' => NULL,  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_patient_info:

            // es__RG__admin_gestion_patient_info
            if (0 === strpos($pathinfo, '/es/admin/patient/info') && preg_match('#^/es/admin/patient/info(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_patient_info;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_patient_info')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::infoAction',  'id' => NULL,  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_patient_info:

        }

        // fr__RG__admin_gestion_patient_modifier
        if (0 === strpos($pathinfo, '/admin/patient') && preg_match('#^/admin/patient/(?P<id>[^/]++)/modifier$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_patient_modifier;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_patient_modifier')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::modifierAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_patient_modifier:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_patient_modifier
            if (0 === strpos($pathinfo, '/en/admin/patient') && preg_match('#^/en/admin/patient/(?P<id>[^/]++)/modifier$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_patient_modifier;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_patient_modifier')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::modifierAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_patient_modifier:

            // es__RG__admin_gestion_patient_modifier
            if (0 === strpos($pathinfo, '/es/admin/patient') && preg_match('#^/es/admin/patient/(?P<id>[^/]++)/modifier$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_patient_modifier;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_patient_modifier')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::modifierAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_patient_modifier:

        }

        // fr__RG__admin_patient_historique_show
        if (0 === strpos($pathinfo, '/admin/patient') && preg_match('#^/admin/patient/(?P<id>[^/]++)/(?P<id1>[^/]++)/historique$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_patient_historique_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_patient_historique_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::historiqueShowAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_patient_historique_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_patient_historique_show
            if (0 === strpos($pathinfo, '/en/admin/patient') && preg_match('#^/en/admin/patient/(?P<id>[^/]++)/(?P<id1>[^/]++)/historique$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_patient_historique_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_patient_historique_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::historiqueShowAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_patient_historique_show:

            // es__RG__admin_patient_historique_show
            if (0 === strpos($pathinfo, '/es/admin/patient') && preg_match('#^/es/admin/patient/(?P<id>[^/]++)/(?P<id1>[^/]++)/historique$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_patient_historique_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_patient_historique_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::historiqueShowAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_patient_historique_show:

        }

        // fr__RG__admin_patient_historique
        if ('/admin/patient/historique' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_patient_historique;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::historiqueAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_patient_historique',);
        }
        not_fr__RG__admin_patient_historique:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_patient_historique
            if ('/en/admin/patient/historique' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_patient_historique;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::historiqueAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_patient_historique',);
            }
            not_en__RG__admin_patient_historique:

            // es__RG__admin_patient_historique
            if ('/es/admin/patient/historique' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_patient_historique;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\ConsultationController::historiqueAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_patient_historique',);
            }
            not_es__RG__admin_patient_historique:

        }

        // fr__RG__admin_gestion_patient_index
        if ('/admin/gestion/patient' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_gestion_patient_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_gestion_patient_index');
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_patient_index',);
        }
        not_fr__RG__admin_gestion_patient_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_patient_index
            if ('/en/admin/gestion/patient' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_gestion_patient_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_gestion_patient_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_patient_index',);
            }
            not_en__RG__admin_gestion_patient_index:

            // es__RG__admin_gestion_patient_index
            if ('/es/admin/gestion/patient' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_gestion_patient_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_gestion_patient_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_patient_index',);
            }
            not_es__RG__admin_gestion_patient_index:

        }

        // fr__RG__admin_gestion_patient_show
        if (0 === strpos($pathinfo, '/admin/gestion/patient') && preg_match('#^/admin/gestion/patient/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_patient_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_patient_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_patient_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_patient_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient') && preg_match('#^/en/admin/gestion/patient/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_patient_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_patient_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_patient_show:

            // es__RG__admin_gestion_patient_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient') && preg_match('#^/es/admin/gestion/patient/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_patient_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_patient_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_patient_show:

        }

        // fr__RG__admin_gestion_patient_unregister
        if (0 === strpos($pathinfo, '/admin/gestion/patient') && preg_match('#^/admin/gestion/patient/(?P<id>[^/]++)/unregister$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_patient_unregister;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_patient_unregister')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::unregisterAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_patient_unregister:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_patient_unregister
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient') && preg_match('#^/en/admin/gestion/patient/(?P<id>[^/]++)/unregister$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_patient_unregister;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_patient_unregister')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::unregisterAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_patient_unregister:

            // es__RG__admin_gestion_patient_unregister
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient') && preg_match('#^/es/admin/gestion/patient/(?P<id>[^/]++)/unregister$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_patient_unregister;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_patient_unregister')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::unregisterAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_patient_unregister:

        }

        // fr__RG__admin_gestion_patient_export
        if ('/admin/gestion/patient/export' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_patient_export;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::exportAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_patient_export',);
        }
        not_fr__RG__admin_gestion_patient_export:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_patient_export
            if ('/en/admin/gestion/patient/export' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_patient_export;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::exportAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_patient_export',);
            }
            not_en__RG__admin_gestion_patient_export:

            // es__RG__admin_gestion_patient_export
            if ('/es/admin/gestion/patient/export' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_patient_export;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::exportAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_patient_export',);
            }
            not_es__RG__admin_gestion_patient_export:

        }

        // fr__RG__admin_gestion_patient_photo
        if ('/admin/gestion/patient/photo' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_patient_photo;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::photoAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_patient_photo',);
        }
        not_fr__RG__admin_gestion_patient_photo:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_patient_photo
            if ('/en/admin/gestion/patient/photo' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_patient_photo;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::photoAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_patient_photo',);
            }
            not_en__RG__admin_gestion_patient_photo:

            // es__RG__admin_gestion_patient_photo
            if ('/es/admin/gestion/patient/photo' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_patient_photo;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::photoAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_patient_photo',);
            }
            not_es__RG__admin_gestion_patient_photo:

        }

        // fr__RG__admin_gestion_patient_new
        if (0 === strpos($pathinfo, '/admin/gestion/patient/new') && preg_match('#^/admin/gestion/patient/new(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_patient_new;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_patient_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::newAction',  'id' => NULL,  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_patient_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_patient_new
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient/new') && preg_match('#^/en/admin/gestion/patient/new(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_patient_new;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_patient_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::newAction',  'id' => NULL,  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_patient_new:

            // es__RG__admin_gestion_patient_new
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient/new') && preg_match('#^/es/admin/gestion/patient/new(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_patient_new;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_patient_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::newAction',  'id' => NULL,  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_patient_new:

        }

        // fr__RG__admin_gestion_patient_edit
        if (0 === strpos($pathinfo, '/admin/gestion/patient') && preg_match('#^/admin/gestion/patient/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_patient_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_patient_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_patient_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_patient_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient') && preg_match('#^/en/admin/gestion/patient/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_patient_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_patient_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_patient_edit:

            // es__RG__admin_gestion_patient_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient') && preg_match('#^/es/admin/gestion/patient/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_patient_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_patient_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_patient_edit:

        }

        // fr__RG__admin_gestion_patient_delete
        if (0 === strpos($pathinfo, '/admin/gestion/patient') && preg_match('#^/admin/gestion/patient/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_patient_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_patient_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_patient_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_patient_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient') && preg_match('#^/en/admin/gestion/patient/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_patient_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_patient_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_patient_delete:

            // es__RG__admin_gestion_patient_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient') && preg_match('#^/es/admin/gestion/patient/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('DELETE', 'GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('DELETE', 'GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_patient_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_patient_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_patient_delete:

        }

        // fr__RG__admin_gestion_patient_import
        if ('/admin/gestion/patient/import' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_patient_import;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::importAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_patient_import',);
        }
        not_fr__RG__admin_gestion_patient_import:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_patient_import
            if ('/en/admin/gestion/patient/import' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_patient_import;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::importAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_patient_import',);
            }
            not_en__RG__admin_gestion_patient_import:

            // es__RG__admin_gestion_patient_import
            if ('/es/admin/gestion/patient/import' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_patient_import;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::importAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_patient_import',);
            }
            not_es__RG__admin_gestion_patient_import:

        }

        // fr__RG__admin_gestion_patient_associe
        if (0 === strpos($pathinfo, '/admin/gestion/patient/associe') && preg_match('#^/admin/gestion/patient/associe(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_patient_associe;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_patient_associe')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::associeAction',  'id' => NULL,  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_patient_associe:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_patient_associe
            if (0 === strpos($pathinfo, '/en/admin/gestion/patient/associe') && preg_match('#^/en/admin/gestion/patient/associe(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_patient_associe;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_patient_associe')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::associeAction',  'id' => NULL,  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_patient_associe:

            // es__RG__admin_gestion_patient_associe
            if (0 === strpos($pathinfo, '/es/admin/gestion/patient/associe') && preg_match('#^/es/admin/gestion/patient/associe(?:/(?P<id>[^/]++))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_patient_associe;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_patient_associe')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::associeAction',  'id' => NULL,  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_patient_associe:

        }

        // fr__RG__gestion_admin_patient_associe_index
        if ('/admin/patient/comptes' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_admin_patient_associe_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_admin_patient_associe_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_admin_patient_associe_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_admin_patient_associe_index',);
        }
        not_fr__RG__gestion_admin_patient_associe_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_admin_patient_associe_index
            if ('/en/admin/patient/comptes' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_admin_patient_associe_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_admin_patient_associe_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_admin_patient_associe_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_admin_patient_associe_index',);
            }
            not_en__RG__gestion_admin_patient_associe_index:

            // es__RG__gestion_admin_patient_associe_index
            if ('/es/admin/patient/comptes' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_admin_patient_associe_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_admin_patient_associe_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_admin_patient_associe_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_admin_patient_associe_index',);
            }
            not_es__RG__gestion_admin_patient_associe_index:

        }

        // fr__RG__gestion_admin_patient_associe_cpte_edit
        if (0 === strpos($pathinfo, '/admin/patient/comptes/edit') && preg_match('#^/admin/patient/comptes/edit/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_admin_patient_associe_cpte_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_admin_patient_associe_cpte_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_admin_patient_associe_cpte_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_admin_patient_associe_cpte_edit
            if (0 === strpos($pathinfo, '/en/admin/patient/comptes/edit') && preg_match('#^/en/admin/patient/comptes/edit/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_admin_patient_associe_cpte_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_admin_patient_associe_cpte_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_admin_patient_associe_cpte_edit:

            // es__RG__gestion_admin_patient_associe_cpte_edit
            if (0 === strpos($pathinfo, '/es/admin/patient/comptes/edit') && preg_match('#^/es/admin/patient/comptes/edit/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_admin_patient_associe_cpte_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_admin_patient_associe_cpte_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_admin_patient_associe_cpte_edit:

        }

        // fr__RG__gestion_admin_patient_associe_cpte_new
        if ('/admin/patient/comptes/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_admin_patient_associe_cpte_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_admin_patient_associe_cpte_new',);
        }
        not_fr__RG__gestion_admin_patient_associe_cpte_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_admin_patient_associe_cpte_new
            if ('/en/admin/patient/comptes/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_admin_patient_associe_cpte_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_admin_patient_associe_cpte_new',);
            }
            not_en__RG__gestion_admin_patient_associe_cpte_new:

            // es__RG__gestion_admin_patient_associe_cpte_new
            if ('/es/admin/patient/comptes/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_admin_patient_associe_cpte_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_admin_patient_associe_cpte_new',);
            }
            not_es__RG__gestion_admin_patient_associe_cpte_new:

        }

        // fr__RG__gestion_admin_patient_associe_association_new
        if ('/admin/patient/comptes/association' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_admin_patient_associe_association_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::associationAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_admin_patient_associe_association_new',);
        }
        not_fr__RG__gestion_admin_patient_associe_association_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_admin_patient_associe_association_new
            if ('/en/admin/patient/comptes/association' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_admin_patient_associe_association_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::associationAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_admin_patient_associe_association_new',);
            }
            not_en__RG__gestion_admin_patient_associe_association_new:

            // es__RG__gestion_admin_patient_associe_association_new
            if ('/es/admin/patient/comptes/association' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_admin_patient_associe_association_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::associationAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_admin_patient_associe_association_new',);
            }
            not_es__RG__gestion_admin_patient_associe_association_new:

        }

        // fr__RG__gestion_admin_patient_associe_cpte_password
        if ('/admin/patient/comptes/password' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__gestion_admin_patient_associe_cpte_password;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::passwordAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_admin_patient_associe_cpte_password',);
        }
        not_fr__RG__gestion_admin_patient_associe_cpte_password:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_admin_patient_associe_cpte_password
            if ('/en/admin/patient/comptes/password' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__gestion_admin_patient_associe_cpte_password;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::passwordAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_admin_patient_associe_cpte_password',);
            }
            not_en__RG__gestion_admin_patient_associe_cpte_password:

            // es__RG__gestion_admin_patient_associe_cpte_password
            if ('/es/admin/patient/comptes/password' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__gestion_admin_patient_associe_cpte_password;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::passwordAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_admin_patient_associe_cpte_password',);
            }
            not_es__RG__gestion_admin_patient_associe_cpte_password:

        }

        // fr__RG__gestion_admin_patient_associe_cpte_historique
        if (0 === strpos($pathinfo, '/admin/patient/comptes/historique') && preg_match('#^/admin/patient/comptes/historique/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_admin_patient_associe_cpte_historique;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_admin_patient_associe_cpte_historique')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::historiqueAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_admin_patient_associe_cpte_historique:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_admin_patient_associe_cpte_historique
            if (0 === strpos($pathinfo, '/en/admin/patient/comptes/historique') && preg_match('#^/en/admin/patient/comptes/historique/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_admin_patient_associe_cpte_historique;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_admin_patient_associe_cpte_historique')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::historiqueAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_admin_patient_associe_cpte_historique:

            // es__RG__gestion_admin_patient_associe_cpte_historique
            if (0 === strpos($pathinfo, '/es/admin/patient/comptes/historique') && preg_match('#^/es/admin/patient/comptes/historique/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_admin_patient_associe_cpte_historique;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_admin_patient_associe_cpte_historique')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::historiqueAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_admin_patient_associe_cpte_historique:

        }

        // fr__RG__gestion_admin_patient_associe_cpte_consultation
        if (0 === strpos($pathinfo, '/admin/patient/comptes/consultation') && preg_match('#^/admin/patient/comptes/consultation/(?P<id>[^/]++)/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__gestion_admin_patient_associe_cpte_consultation;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__gestion_admin_patient_associe_cpte_consultation')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::consultationAction',  '_locale' => 'fr',));
        }
        not_fr__RG__gestion_admin_patient_associe_cpte_consultation:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_admin_patient_associe_cpte_consultation
            if (0 === strpos($pathinfo, '/en/admin/patient/comptes/consultation') && preg_match('#^/en/admin/patient/comptes/consultation/(?P<id>[^/]++)/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__gestion_admin_patient_associe_cpte_consultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__gestion_admin_patient_associe_cpte_consultation')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::consultationAction',  '_locale' => 'en',));
            }
            not_en__RG__gestion_admin_patient_associe_cpte_consultation:

            // es__RG__gestion_admin_patient_associe_cpte_consultation
            if (0 === strpos($pathinfo, '/es/admin/patient/comptes/consultation') && preg_match('#^/es/admin/patient/comptes/consultation/(?P<id>[^/]++)/(?P<consultation>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__gestion_admin_patient_associe_cpte_consultation;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__gestion_admin_patient_associe_cpte_consultation')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CompteAssocieController::consultationAction',  '_locale' => 'es',));
            }
            not_es__RG__gestion_admin_patient_associe_cpte_consultation:

        }

        // fr__RG__admin_config_medecin_index
        if ('/admin/config/medecin' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_config_medecin_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_config_medecin_index');
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_medecin_index',);
        }
        not_fr__RG__admin_config_medecin_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_medecin_index
            if ('/en/admin/config/medecin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_config_medecin_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_config_medecin_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_medecin_index',);
            }
            not_en__RG__admin_config_medecin_index:

            // es__RG__admin_config_medecin_index
            if ('/es/admin/config/medecin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_config_medecin_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_config_medecin_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_medecin_index',);
            }
            not_es__RG__admin_config_medecin_index:

        }

        // fr__RG__admin_config_medecin_show
        if (0 === strpos($pathinfo, '/admin/config/medecin') && preg_match('#^/admin/config/medecin/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_config_medecin_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_medecin_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_medecin_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_medecin_show
            if (0 === strpos($pathinfo, '/en/admin/config/medecin') && preg_match('#^/en/admin/config/medecin/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_config_medecin_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_medecin_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_medecin_show:

            // es__RG__admin_config_medecin_show
            if (0 === strpos($pathinfo, '/es/admin/config/medecin') && preg_match('#^/es/admin/config/medecin/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_config_medecin_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_medecin_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_medecin_show:

        }

        // fr__RG__admin_config_medecin_new
        if ('/admin/config/medecin/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_medecin_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_medecin_new',);
        }
        not_fr__RG__admin_config_medecin_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_medecin_new
            if ('/en/admin/config/medecin/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_medecin_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_medecin_new',);
            }
            not_en__RG__admin_config_medecin_new:

            // es__RG__admin_config_medecin_new
            if ('/es/admin/config/medecin/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_medecin_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_medecin_new',);
            }
            not_es__RG__admin_config_medecin_new:

        }

        // fr__RG__admin_config_medecin_edit
        if (0 === strpos($pathinfo, '/admin/config/medecin') && preg_match('#^/admin/config/medecin/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_medecin_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_medecin_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_medecin_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_medecin_edit
            if (0 === strpos($pathinfo, '/en/admin/config/medecin') && preg_match('#^/en/admin/config/medecin/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_medecin_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_medecin_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_medecin_edit:

            // es__RG__admin_config_medecin_edit
            if (0 === strpos($pathinfo, '/es/admin/config/medecin') && preg_match('#^/es/admin/config/medecin/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_medecin_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_medecin_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_medecin_edit:

        }

        // fr__RG__admin_config_medecin_delete
        if (0 === strpos($pathinfo, '/admin/config/medecin') && preg_match('#^/admin/config/medecin/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_config_medecin_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_medecin_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_medecin_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_medecin_delete
            if (0 === strpos($pathinfo, '/en/admin/config/medecin') && preg_match('#^/en/admin/config/medecin/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_config_medecin_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_medecin_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_medecin_delete:

            // es__RG__admin_config_medecin_delete
            if (0 === strpos($pathinfo, '/es/admin/config/medecin') && preg_match('#^/es/admin/config/medecin/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_config_medecin_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_medecin_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_medecin_delete:

        }

        // fr__RG__admin_config_medecin_specialites
        if (0 === strpos($pathinfo, '/admin/config/medecin') && preg_match('#^/admin/config/medecin/(?P<id>[^/]++)/specialites$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_medecin_specialites;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_medecin_specialites')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::specialitesAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_medecin_specialites:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_medecin_specialites
            if (0 === strpos($pathinfo, '/en/admin/config/medecin') && preg_match('#^/en/admin/config/medecin/(?P<id>[^/]++)/specialites$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_medecin_specialites;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_medecin_specialites')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::specialitesAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_medecin_specialites:

            // es__RG__admin_config_medecin_specialites
            if (0 === strpos($pathinfo, '/es/admin/config/medecin') && preg_match('#^/es/admin/config/medecin/(?P<id>[^/]++)/specialites$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_medecin_specialites;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_medecin_specialites')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\MedecinController::specialitesAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_medecin_specialites:

        }

        // fr__RG__admin_gestion_traitement_index
        if ('/admin/gestion/traitement' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_gestion_traitement_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_gestion_traitement_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_traitement_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_traitement_index',);
        }
        not_fr__RG__admin_gestion_traitement_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_traitement_index
            if ('/en/admin/gestion/traitement' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_gestion_traitement_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_gestion_traitement_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_traitement_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_traitement_index',);
            }
            not_en__RG__admin_gestion_traitement_index:

            // es__RG__admin_gestion_traitement_index
            if ('/es/admin/gestion/traitement' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_gestion_traitement_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_gestion_traitement_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_traitement_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_traitement_index',);
            }
            not_es__RG__admin_gestion_traitement_index:

        }

        // fr__RG__admin_gestion_traitement_show
        if (0 === strpos($pathinfo, '/admin/gestion/traitement') && preg_match('#^/admin/gestion/traitement/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_traitement_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_traitement_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_traitement_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_traitement_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/traitement') && preg_match('#^/en/admin/gestion/traitement/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_traitement_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_traitement_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_traitement_show:

            // es__RG__admin_gestion_traitement_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/traitement') && preg_match('#^/es/admin/gestion/traitement/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_traitement_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_traitement_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_traitement_show:

        }

        // fr__RG__admin_gestion_traitement_new
        if ('/admin/gestion/traitement/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_traitement_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_traitement_new',);
        }
        not_fr__RG__admin_gestion_traitement_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_traitement_new
            if ('/en/admin/gestion/traitement/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_traitement_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_traitement_new',);
            }
            not_en__RG__admin_gestion_traitement_new:

            // es__RG__admin_gestion_traitement_new
            if ('/es/admin/gestion/traitement/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_traitement_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_traitement_new',);
            }
            not_es__RG__admin_gestion_traitement_new:

        }

        // fr__RG__admin_gestion_traitement_edit
        if (0 === strpos($pathinfo, '/admin/gestion/traitement') && preg_match('#^/admin/gestion/traitement/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_traitement_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_traitement_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_traitement_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_traitement_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/traitement') && preg_match('#^/en/admin/gestion/traitement/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_traitement_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_traitement_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_traitement_edit:

            // es__RG__admin_gestion_traitement_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/traitement') && preg_match('#^/es/admin/gestion/traitement/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_traitement_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_traitement_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_traitement_edit:

        }

        // fr__RG__admin_gestion_traitement_delete
        if (0 === strpos($pathinfo, '/admin/gestion/traitement') && preg_match('#^/admin/gestion/traitement/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_gestion_traitement_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_traitement_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_traitement_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_traitement_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/traitement') && preg_match('#^/en/admin/gestion/traitement/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_gestion_traitement_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_traitement_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_traitement_delete:

            // es__RG__admin_gestion_traitement_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/traitement') && preg_match('#^/es/admin/gestion/traitement/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_gestion_traitement_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_traitement_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\TraitementController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_traitement_delete:

        }

        // fr__RG__admin_gestion_ligneanalyse_index
        if ('/admin/gestion/ligneanalyse' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_gestion_ligneanalyse_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_gestion_ligneanalyse_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_ligneanalyse_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_ligneanalyse_index',);
        }
        not_fr__RG__admin_gestion_ligneanalyse_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_ligneanalyse_index
            if ('/en/admin/gestion/ligneanalyse' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_gestion_ligneanalyse_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_gestion_ligneanalyse_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_ligneanalyse_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_ligneanalyse_index',);
            }
            not_en__RG__admin_gestion_ligneanalyse_index:

            // es__RG__admin_gestion_ligneanalyse_index
            if ('/es/admin/gestion/ligneanalyse' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_gestion_ligneanalyse_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_gestion_ligneanalyse_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_ligneanalyse_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_ligneanalyse_index',);
            }
            not_es__RG__admin_gestion_ligneanalyse_index:

        }

        // fr__RG__admin_gestion_ligneanalyse_show
        if (0 === strpos($pathinfo, '/admin/gestion/ligneanalyse') && preg_match('#^/admin/gestion/ligneanalyse/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_ligneanalyse_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_ligneanalyse_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_ligneanalyse_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_ligneanalyse_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/ligneanalyse') && preg_match('#^/en/admin/gestion/ligneanalyse/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_ligneanalyse_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_ligneanalyse_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_ligneanalyse_show:

            // es__RG__admin_gestion_ligneanalyse_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/ligneanalyse') && preg_match('#^/es/admin/gestion/ligneanalyse/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_ligneanalyse_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_ligneanalyse_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_ligneanalyse_show:

        }

        // fr__RG__admin_gestion_ligneanalyse_new
        if ('/admin/gestion/ligneanalyse/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_ligneanalyse_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_ligneanalyse_new',);
        }
        not_fr__RG__admin_gestion_ligneanalyse_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_ligneanalyse_new
            if ('/en/admin/gestion/ligneanalyse/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_ligneanalyse_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_ligneanalyse_new',);
            }
            not_en__RG__admin_gestion_ligneanalyse_new:

            // es__RG__admin_gestion_ligneanalyse_new
            if ('/es/admin/gestion/ligneanalyse/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_ligneanalyse_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_ligneanalyse_new',);
            }
            not_es__RG__admin_gestion_ligneanalyse_new:

        }

        // fr__RG__admin_gestion_ligneanalyse_edit
        if (0 === strpos($pathinfo, '/admin/gestion/ligneanalyse') && preg_match('#^/admin/gestion/ligneanalyse/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_ligneanalyse_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_ligneanalyse_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_ligneanalyse_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_ligneanalyse_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/ligneanalyse') && preg_match('#^/en/admin/gestion/ligneanalyse/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_ligneanalyse_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_ligneanalyse_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_ligneanalyse_edit:

            // es__RG__admin_gestion_ligneanalyse_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/ligneanalyse') && preg_match('#^/es/admin/gestion/ligneanalyse/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_ligneanalyse_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_ligneanalyse_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_ligneanalyse_edit:

        }

        // fr__RG__admin_gestion_ligneanalyse_delete
        if (0 === strpos($pathinfo, '/admin/gestion/ligneanalyse') && preg_match('#^/admin/gestion/ligneanalyse/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_gestion_ligneanalyse_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_ligneanalyse_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_ligneanalyse_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_ligneanalyse_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/ligneanalyse') && preg_match('#^/en/admin/gestion/ligneanalyse/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_gestion_ligneanalyse_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_ligneanalyse_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_ligneanalyse_delete:

            // es__RG__admin_gestion_ligneanalyse_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/ligneanalyse') && preg_match('#^/es/admin/gestion/ligneanalyse/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_gestion_ligneanalyse_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_ligneanalyse_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\LigneAnalyseController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_ligneanalyse_delete:

        }

        // fr__RG__admin_gestion_hospitalisation_index
        if ('/admin/gestion/hospitalisation' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_gestion_hospitalisation_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_gestion_hospitalisation_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_hospitalisation_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_hospitalisation_index',);
        }
        not_fr__RG__admin_gestion_hospitalisation_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_hospitalisation_index
            if ('/en/admin/gestion/hospitalisation' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_gestion_hospitalisation_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_gestion_hospitalisation_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_hospitalisation_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_hospitalisation_index',);
            }
            not_en__RG__admin_gestion_hospitalisation_index:

            // es__RG__admin_gestion_hospitalisation_index
            if ('/es/admin/gestion/hospitalisation' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_gestion_hospitalisation_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_gestion_hospitalisation_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_hospitalisation_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_hospitalisation_index',);
            }
            not_es__RG__admin_gestion_hospitalisation_index:

        }

        // fr__RG__admin_gestion_hospitalisation_show
        if (0 === strpos($pathinfo, '/admin/gestion/hospitalisation') && preg_match('#^/admin/gestion/hospitalisation/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_hospitalisation_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_hospitalisation_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_hospitalisation_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_hospitalisation_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/hospitalisation') && preg_match('#^/en/admin/gestion/hospitalisation/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_hospitalisation_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_hospitalisation_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_hospitalisation_show:

            // es__RG__admin_gestion_hospitalisation_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/hospitalisation') && preg_match('#^/es/admin/gestion/hospitalisation/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_hospitalisation_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_hospitalisation_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_hospitalisation_show:

        }

        // fr__RG__admin_gestion_hospitalisation_new
        if ('/admin/gestion/hospitalisation/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_hospitalisation_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_hospitalisation_new',);
        }
        not_fr__RG__admin_gestion_hospitalisation_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_hospitalisation_new
            if ('/en/admin/gestion/hospitalisation/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_hospitalisation_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_hospitalisation_new',);
            }
            not_en__RG__admin_gestion_hospitalisation_new:

            // es__RG__admin_gestion_hospitalisation_new
            if ('/es/admin/gestion/hospitalisation/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_hospitalisation_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_hospitalisation_new',);
            }
            not_es__RG__admin_gestion_hospitalisation_new:

        }

        // fr__RG__admin_gestion_hospitalisation_edit
        if (0 === strpos($pathinfo, '/admin/gestion/hospitalisation') && preg_match('#^/admin/gestion/hospitalisation/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_hospitalisation_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_hospitalisation_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_hospitalisation_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_hospitalisation_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/hospitalisation') && preg_match('#^/en/admin/gestion/hospitalisation/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_hospitalisation_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_hospitalisation_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_hospitalisation_edit:

            // es__RG__admin_gestion_hospitalisation_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/hospitalisation') && preg_match('#^/es/admin/gestion/hospitalisation/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_hospitalisation_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_hospitalisation_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_hospitalisation_edit:

        }

        // fr__RG__admin_gestion_hospitalisation_delete
        if (0 === strpos($pathinfo, '/admin/gestion/hospitalisation') && preg_match('#^/admin/gestion/hospitalisation/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_gestion_hospitalisation_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_hospitalisation_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_hospitalisation_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_hospitalisation_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/hospitalisation') && preg_match('#^/en/admin/gestion/hospitalisation/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_gestion_hospitalisation_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_hospitalisation_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_hospitalisation_delete:

            // es__RG__admin_gestion_hospitalisation_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/hospitalisation') && preg_match('#^/es/admin/gestion/hospitalisation/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_gestion_hospitalisation_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_hospitalisation_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\HospitalisationController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_hospitalisation_delete:

        }

        // fr__RG__admin_statistique_index
        if ('/admin/gestion/statistique' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_statistique_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_statistique_index');
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\StatistiqueController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_statistique_index',);
        }
        not_fr__RG__admin_statistique_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_statistique_index
            if ('/en/admin/gestion/statistique' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_statistique_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_statistique_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\StatistiqueController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_statistique_index',);
            }
            not_en__RG__admin_statistique_index:

            // es__RG__admin_statistique_index
            if ('/es/admin/gestion/statistique' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_statistique_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_statistique_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\StatistiqueController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_statistique_index',);
            }
            not_es__RG__admin_statistique_index:

        }

        // fr__RG__gestion_homepage
        if ('/admin' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__gestion_homepage;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__gestion_homepage');
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__gestion_homepage',);
        }
        not_fr__RG__gestion_homepage:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__gestion_homepage
            if ('/en/admin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__gestion_homepage;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__gestion_homepage');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__gestion_homepage',);
            }
            not_en__RG__gestion_homepage:

            // es__RG__gestion_homepage
            if ('/es/admin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__gestion_homepage;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__gestion_homepage');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__gestion_homepage',);
            }
            not_es__RG__gestion_homepage:

        }

        // fr__RG__admin_gestion_rdv_index
        if (0 === strpos($pathinfo, '/admin/rendez-vous') && preg_match('#^/admin/rendez\\-vous(?:/(?P<patient>\\d+))?$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_rdv_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::indexAction',  'patient' => NULL,  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_rdv_index
            if (0 === strpos($pathinfo, '/en/admin/rendez-vous') && preg_match('#^/en/admin/rendez\\-vous(?:/(?P<patient>\\d+))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_rdv_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::indexAction',  'patient' => NULL,  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_rdv_index
            if (0 === strpos($pathinfo, '/es/admin/rendez-vous') && preg_match('#^/es/admin/rendez\\-vous(?:/(?P<patient>\\d+))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_rdv_index')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::indexAction',  'patient' => NULL,  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_rdv_list
        if (0 === strpos($pathinfo, '/admin/rendez-vous/rendez-vous') && preg_match('#^/admin/rendez\\-vous/rendez\\-vous(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_rdv_list')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::rendezVousAction',  'patient' => NULL,  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_rdv_list
            if (0 === strpos($pathinfo, '/en/admin/rendez-vous/rendez-vous') && preg_match('#^/en/admin/rendez\\-vous/rendez\\-vous(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_rdv_list')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::rendezVousAction',  'patient' => NULL,  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_rdv_list
            if (0 === strpos($pathinfo, '/es/admin/rendez-vous/rendez-vous') && preg_match('#^/es/admin/rendez\\-vous/rendez\\-vous(?:/(?P<patient>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_rdv_list')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::rendezVousAction',  'patient' => NULL,  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_rdv_add
        if ('/admin/rendez-vous/add' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_rdv_add;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::addAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_rdv_add',);
        }
        not_fr__RG__admin_gestion_rdv_add:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_rdv_add
            if ('/en/admin/rendez-vous/add' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_rdv_add;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::addAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_rdv_add',);
            }
            not_en__RG__admin_gestion_rdv_add:

            // es__RG__admin_gestion_rdv_add
            if ('/es/admin/rendez-vous/add' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_rdv_add;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::addAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_rdv_add',);
            }
            not_es__RG__admin_gestion_rdv_add:

        }

        // fr__RG__admin_gestion_rdv_edit
        if (0 === strpos($pathinfo, '/admin/rendez-vous/edit') && preg_match('#^/admin/rendez\\-vous/edit/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_rdv_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::editAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_rdv_edit
            if (0 === strpos($pathinfo, '/en/admin/rendez-vous/edit') && preg_match('#^/en/admin/rendez\\-vous/edit/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_rdv_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::editAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_rdv_edit
            if (0 === strpos($pathinfo, '/es/admin/rendez-vous/edit') && preg_match('#^/es/admin/rendez\\-vous/edit/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_rdv_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::editAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_rdv_search
        if ('/admin/rendez-vous/search' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_rdv_search',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_rdv_search
            if ('/en/admin/rendez-vous/search' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_rdv_search',);
            }

            // es__RG__admin_gestion_rdv_search
            if ('/es/admin/rendez-vous/search' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_rdv_search',);
            }

        }

        // fr__RG__admin_gestion_rdv_delete
        if (0 === strpos($pathinfo, '/admin/rendez-vous/delete') && preg_match('#^/admin/rendez\\-vous/delete/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_rdv_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::deleteAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_rdv_delete
            if (0 === strpos($pathinfo, '/en/admin/rendez-vous/delete') && preg_match('#^/en/admin/rendez\\-vous/delete/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_rdv_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::deleteAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_rdv_delete
            if (0 === strpos($pathinfo, '/es/admin/rendez-vous/delete') && preg_match('#^/es/admin/rendez\\-vous/delete/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_rdv_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::deleteAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_rdv_annuler
        if (0 === strpos($pathinfo, '/admin/rendez-vous/annuler') && preg_match('#^/admin/rendez\\-vous/annuler/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_rdv_annuler')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::annulerAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_rdv_annuler
            if (0 === strpos($pathinfo, '/en/admin/rendez-vous/annuler') && preg_match('#^/en/admin/rendez\\-vous/annuler/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_rdv_annuler')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::annulerAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_rdv_annuler
            if (0 === strpos($pathinfo, '/es/admin/rendez-vous/annuler') && preg_match('#^/es/admin/rendez\\-vous/annuler/(?P<id>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_rdv_annuler')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\RendezVousController::annulerAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_sms_index
        if ('/admin/sms' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_gestion_sms_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_gestion_sms_index');
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_sms_index',);
        }
        not_fr__RG__admin_gestion_sms_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_sms_index
            if ('/en/admin/sms' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_gestion_sms_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_gestion_sms_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_sms_index',);
            }
            not_en__RG__admin_gestion_sms_index:

            // es__RG__admin_gestion_sms_index
            if ('/es/admin/sms' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_gestion_sms_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_gestion_sms_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_sms_index',);
            }
            not_es__RG__admin_gestion_sms_index:

        }

        // fr__RG__admin_gestion_sms_import
        if ('/admin/sms/import' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::importAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_sms_import',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_sms_import
            if ('/en/admin/sms/import' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::importAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_sms_import',);
            }

            // es__RG__admin_gestion_sms_import
            if ('/es/admin/sms/import' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::importAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_sms_import',);
            }

        }

        // fr__RG__admin_gestion_sms_export
        if (0 === strpos($pathinfo, '/admin/sms/export') && preg_match('#^/admin/sms/export/(?P<corporate>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_sms_export')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::exportAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_sms_export
            if (0 === strpos($pathinfo, '/en/admin/sms/export') && preg_match('#^/en/admin/sms/export/(?P<corporate>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_sms_export')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::exportAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_sms_export
            if (0 === strpos($pathinfo, '/es/admin/sms/export') && preg_match('#^/es/admin/sms/export/(?P<corporate>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_sms_export')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::exportAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_sms_excel
        if (0 === strpos($pathinfo, '/admin/sms/excel') && preg_match('#^/admin/sms/excel/(?P<corporate>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_sms_excel')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::excelAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_sms_excel
            if (0 === strpos($pathinfo, '/en/admin/sms/excel') && preg_match('#^/en/admin/sms/excel/(?P<corporate>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_sms_excel')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::excelAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_sms_excel
            if (0 === strpos($pathinfo, '/es/admin/sms/excel') && preg_match('#^/es/admin/sms/excel/(?P<corporate>[^/]++)$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_sms_excel')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::excelAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_sms_new
        if ('/admin/sms/new' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_sms_new',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_sms_new
            if ('/en/admin/sms/new' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_sms_new',);
            }

            // es__RG__admin_gestion_sms_new
            if ('/es/admin/sms/new' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_sms_new',);
            }

        }

        // fr__RG__admin_gestion_sms_send
        if ('/admin/sms/send' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::sendAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_sms_send',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_sms_send
            if ('/en/admin/sms/send' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::sendAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_sms_send',);
            }

            // es__RG__admin_gestion_sms_send
            if ('/es/admin/sms/send' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::sendAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_sms_send',);
            }

        }

        // fr__RG__admin_gestion_sms_stats
        if ('/admin/sms/stats' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::statsAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_sms_stats',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_sms_stats
            if ('/en/admin/sms/stats' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::statsAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_sms_stats',);
            }

            // es__RG__admin_gestion_sms_stats
            if ('/es/admin/sms/stats' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SmsController::statsAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_sms_stats',);
            }

        }

        // fr__RG__admin_gestion_infirmier_index
        if ('/admin/infirmier' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_gestion_infirmier_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_gestion_infirmier_index');
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_infirmier_index',);
        }
        not_fr__RG__admin_gestion_infirmier_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_infirmier_index
            if ('/en/admin/infirmier' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_gestion_infirmier_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_gestion_infirmier_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_infirmier_index',);
            }
            not_en__RG__admin_gestion_infirmier_index:

            // es__RG__admin_gestion_infirmier_index
            if ('/es/admin/infirmier' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_gestion_infirmier_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_gestion_infirmier_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_infirmier_index',);
            }
            not_es__RG__admin_gestion_infirmier_index:

        }

        // fr__RG__admin_gestion_infirmier_new
        if (0 === strpos($pathinfo, '/admin/infirmier') && preg_match('#^/admin/infirmier/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_infirmier_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::newAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_infirmier_new
            if (0 === strpos($pathinfo, '/en/admin/infirmier') && preg_match('#^/en/admin/infirmier/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_infirmier_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::newAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_infirmier_new
            if (0 === strpos($pathinfo, '/es/admin/infirmier') && preg_match('#^/es/admin/infirmier/(?P<id>[^/]++)/new$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_infirmier_new')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::newAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_infirmier_info
        if (0 === strpos($pathinfo, '/admin/infirmier') && preg_match('#^/admin/infirmier/(?P<id>[^/]++)/info$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_infirmier_info')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::infoAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_infirmier_info
            if (0 === strpos($pathinfo, '/en/admin/infirmier') && preg_match('#^/en/admin/infirmier/(?P<id>[^/]++)/info$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_infirmier_info')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::infoAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_infirmier_info
            if (0 === strpos($pathinfo, '/es/admin/infirmier') && preg_match('#^/es/admin/infirmier/(?P<id>[^/]++)/info$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_infirmier_info')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::infoAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_infirmier_show
        if (0 === strpos($pathinfo, '/admin/infirmier') && preg_match('#^/admin/infirmier/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_infirmier_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::showAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_infirmier_show
            if (0 === strpos($pathinfo, '/en/admin/infirmier') && preg_match('#^/en/admin/infirmier/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_infirmier_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::showAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_infirmier_show
            if (0 === strpos($pathinfo, '/es/admin/infirmier') && preg_match('#^/es/admin/infirmier/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_infirmier_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::showAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_infirmier_edit
        if (0 === strpos($pathinfo, '/admin/infirmier') && preg_match('#^/admin/infirmier/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_infirmier_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::editAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_infirmier_edit
            if (0 === strpos($pathinfo, '/en/admin/infirmier') && preg_match('#^/en/admin/infirmier/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_infirmier_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::editAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_infirmier_edit
            if (0 === strpos($pathinfo, '/es/admin/infirmier') && preg_match('#^/es/admin/infirmier/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_infirmier_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::editAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_infirmier_delete
        if (0 === strpos($pathinfo, '/admin/infirmier') && preg_match('#^/admin/infirmier/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_infirmier_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::deleteAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_infirmier_delete
            if (0 === strpos($pathinfo, '/en/admin/infirmier') && preg_match('#^/en/admin/infirmier/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_infirmier_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::deleteAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_infirmier_delete
            if (0 === strpos($pathinfo, '/es/admin/infirmier') && preg_match('#^/es/admin/infirmier/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_infirmier_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::deleteAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_infirmier_consultation
        if (0 === strpos($pathinfo, '/admin/infirmier') && preg_match('#^/admin/infirmier/(?P<id>[^/]++)/consultation(?:/(?P<consultation>[^/]++))?$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_infirmier_consultation')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::consultationAction',  'consultation' => NULL,  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_infirmier_consultation
            if (0 === strpos($pathinfo, '/en/admin/infirmier') && preg_match('#^/en/admin/infirmier/(?P<id>[^/]++)/consultation(?:/(?P<consultation>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_infirmier_consultation')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::consultationAction',  'consultation' => NULL,  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_infirmier_consultation
            if (0 === strpos($pathinfo, '/es/admin/infirmier') && preg_match('#^/es/admin/infirmier/(?P<id>[^/]++)/consultation(?:/(?P<consultation>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_infirmier_consultation')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::consultationAction',  'consultation' => NULL,  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_infirmier_compte
        if (0 === strpos($pathinfo, '/admin/infirmier') && preg_match('#^/admin/infirmier/(?P<id>[^/]++)/compte$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_infirmier_compte')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::compteAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_infirmier_compte
            if (0 === strpos($pathinfo, '/en/admin/infirmier') && preg_match('#^/en/admin/infirmier/(?P<id>[^/]++)/compte$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_infirmier_compte')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::compteAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_infirmier_compte
            if (0 === strpos($pathinfo, '/es/admin/infirmier') && preg_match('#^/es/admin/infirmier/(?P<id>[^/]++)/compte$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_infirmier_compte')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::compteAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_infirmier_patient
        if ('/admin/infirmier/patient' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::patientAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_infirmier_patient',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_infirmier_patient
            if ('/en/admin/infirmier/patient' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::patientAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_infirmier_patient',);
            }

            // es__RG__admin_gestion_infirmier_patient
            if ('/es/admin/infirmier/patient' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::patientAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_infirmier_patient',);
            }

        }

        // fr__RG__admin_gestion_infirmier_historique
        if ('/admin/infirmier/historique' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::historiqueAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_infirmier_historique',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_infirmier_historique
            if ('/en/admin/infirmier/historique' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::historiqueAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_infirmier_historique',);
            }

            // es__RG__admin_gestion_infirmier_historique
            if ('/es/admin/infirmier/historique' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\InfirmierController::historiqueAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_infirmier_historique',);
            }

        }

        // fr__RG__admin_gestion_corporate_index
        if ('/admin/gestion/corporate' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_gestion_corporate_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_gestion_corporate_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_corporate_index;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_corporate_index',);
        }
        not_fr__RG__admin_gestion_corporate_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_corporate_index
            if ('/en/admin/gestion/corporate' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_gestion_corporate_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_gestion_corporate_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_corporate_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_corporate_index',);
            }
            not_en__RG__admin_gestion_corporate_index:

            // es__RG__admin_gestion_corporate_index
            if ('/es/admin/gestion/corporate' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_gestion_corporate_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_gestion_corporate_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_corporate_index;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_corporate_index',);
            }
            not_es__RG__admin_gestion_corporate_index:

        }

        // fr__RG__admin_gestion_corporate_show
        if (0 === strpos($pathinfo, '/admin/gestion/corporate') && preg_match('#^/admin/gestion/corporate/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_corporate_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_corporate_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_corporate_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_corporate_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/corporate') && preg_match('#^/en/admin/gestion/corporate/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_corporate_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_corporate_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_corporate_show:

            // es__RG__admin_gestion_corporate_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/corporate') && preg_match('#^/es/admin/gestion/corporate/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_corporate_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_corporate_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_corporate_show:

        }

        // fr__RG__admin_gestion_corporate_pharmacie
        if (0 === strpos($pathinfo, '/admin/gestion/corporate') && preg_match('#^/admin/gestion/corporate/(?P<id>[^/]++)/pharmacies$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_corporate_pharmacie')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::pharmacieAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_corporate_pharmacie
            if (0 === strpos($pathinfo, '/en/admin/gestion/corporate') && preg_match('#^/en/admin/gestion/corporate/(?P<id>[^/]++)/pharmacies$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_corporate_pharmacie')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::pharmacieAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_corporate_pharmacie
            if (0 === strpos($pathinfo, '/es/admin/gestion/corporate') && preg_match('#^/es/admin/gestion/corporate/(?P<id>[^/]++)/pharmacies$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_corporate_pharmacie')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::pharmacieAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_corporate_hopital
        if (0 === strpos($pathinfo, '/admin/gestion/corporate') && preg_match('#^/admin/gestion/corporate/(?P<id>[^/]++)/hopitaux$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_corporate_hopital')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::hopitalAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_corporate_hopital
            if (0 === strpos($pathinfo, '/en/admin/gestion/corporate') && preg_match('#^/en/admin/gestion/corporate/(?P<id>[^/]++)/hopitaux$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_corporate_hopital')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::hopitalAction',  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_corporate_hopital
            if (0 === strpos($pathinfo, '/es/admin/gestion/corporate') && preg_match('#^/es/admin/gestion/corporate/(?P<id>[^/]++)/hopitaux$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_corporate_hopital')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::hopitalAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_corporate_new
        if ('/admin/gestion/corporate/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_corporate_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_corporate_new',);
        }
        not_fr__RG__admin_gestion_corporate_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_corporate_new
            if ('/en/admin/gestion/corporate/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_corporate_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_corporate_new',);
            }
            not_en__RG__admin_gestion_corporate_new:

            // es__RG__admin_gestion_corporate_new
            if ('/es/admin/gestion/corporate/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_corporate_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_corporate_new',);
            }
            not_es__RG__admin_gestion_corporate_new:

        }

        // fr__RG__admin_gestion_corporate_edit
        if (0 === strpos($pathinfo, '/admin/gestion/corporate') && preg_match('#^/admin/gestion/corporate/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_corporate_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_corporate_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_corporate_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_corporate_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/corporate') && preg_match('#^/en/admin/gestion/corporate/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_corporate_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_corporate_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_corporate_edit:

            // es__RG__admin_gestion_corporate_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/corporate') && preg_match('#^/es/admin/gestion/corporate/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_corporate_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_corporate_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_corporate_edit:

        }

        // fr__RG__admin_gestion_corporate_delete
        if (0 === strpos($pathinfo, '/admin/gestion/corporate') && preg_match('#^/admin/gestion/corporate/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_gestion_corporate_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_corporate_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_corporate_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_corporate_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/corporate') && preg_match('#^/en/admin/gestion/corporate/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_gestion_corporate_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_corporate_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_corporate_delete:

            // es__RG__admin_gestion_corporate_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/corporate') && preg_match('#^/es/admin/gestion/corporate/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_gestion_corporate_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_corporate_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\CorporateController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_corporate_delete:

        }

        // fr__RG__admin_gestion_abonnement_index
        if ('/admin/gestion/abonnement' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_gestion_abonnement_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_gestion_abonnement_index');
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_abonnement_index',);
        }
        not_fr__RG__admin_gestion_abonnement_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_abonnement_index
            if ('/en/admin/gestion/abonnement' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_gestion_abonnement_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_gestion_abonnement_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_abonnement_index',);
            }
            not_en__RG__admin_gestion_abonnement_index:

            // es__RG__admin_gestion_abonnement_index
            if ('/es/admin/gestion/abonnement' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_gestion_abonnement_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_gestion_abonnement_index');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_abonnement_index',);
            }
            not_es__RG__admin_gestion_abonnement_index:

        }

        // fr__RG__admin_gestion_abonnement_show
        if (0 === strpos($pathinfo, '/admin/gestion/abonnement') && preg_match('#^/admin/gestion/abonnement/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_gestion_abonnement_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_abonnement_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_abonnement_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_abonnement_show
            if (0 === strpos($pathinfo, '/en/admin/gestion/abonnement') && preg_match('#^/en/admin/gestion/abonnement/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_gestion_abonnement_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_abonnement_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_abonnement_show:

            // es__RG__admin_gestion_abonnement_show
            if (0 === strpos($pathinfo, '/es/admin/gestion/abonnement') && preg_match('#^/es/admin/gestion/abonnement/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_gestion_abonnement_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_abonnement_show')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_abonnement_show:

        }

        // fr__RG__admin_gestion_abonnement_search
        if ('/admin/gestion/abonnement/search' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::searchAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_abonnement_search',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_abonnement_search
            if ('/en/admin/gestion/abonnement/search' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::searchAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_abonnement_search',);
            }

            // es__RG__admin_gestion_abonnement_search
            if ('/es/admin/gestion/abonnement/search' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::searchAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_abonnement_search',);
            }

        }

        // fr__RG__admin_gestion_abonnement_commande
        if (0 === strpos($pathinfo, '/admin/gestion/abonnement/commande') && preg_match('#^/admin/gestion/abonnement/commande(?:/(?P<pass>[^/]++))?$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_abonnement_commande')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::commandeAction',  'pass' => NULL,  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_abonnement_commande
            if (0 === strpos($pathinfo, '/en/admin/gestion/abonnement/commande') && preg_match('#^/en/admin/gestion/abonnement/commande(?:/(?P<pass>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_abonnement_commande')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::commandeAction',  'pass' => NULL,  '_locale' => 'en',));
            }

            // es__RG__admin_gestion_abonnement_commande
            if (0 === strpos($pathinfo, '/es/admin/gestion/abonnement/commande') && preg_match('#^/es/admin/gestion/abonnement/commande(?:/(?P<pass>[^/]++))?$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_abonnement_commande')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::commandeAction',  'pass' => NULL,  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_gestion_abonnement_new
        if ('/admin/gestion/abonnement/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_abonnement_new;
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_gestion_abonnement_new',);
        }
        not_fr__RG__admin_gestion_abonnement_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_abonnement_new
            if ('/en/admin/gestion/abonnement/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_abonnement_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_gestion_abonnement_new',);
            }
            not_en__RG__admin_gestion_abonnement_new:

            // es__RG__admin_gestion_abonnement_new
            if ('/es/admin/gestion/abonnement/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_abonnement_new;
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_gestion_abonnement_new',);
            }
            not_es__RG__admin_gestion_abonnement_new:

        }

        // fr__RG__admin_gestion_abonnement_edit
        if (0 === strpos($pathinfo, '/admin/gestion/abonnement') && preg_match('#^/admin/gestion/abonnement/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_gestion_abonnement_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_abonnement_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_abonnement_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_abonnement_edit
            if (0 === strpos($pathinfo, '/en/admin/gestion/abonnement') && preg_match('#^/en/admin/gestion/abonnement/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_gestion_abonnement_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_abonnement_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_abonnement_edit:

            // es__RG__admin_gestion_abonnement_edit
            if (0 === strpos($pathinfo, '/es/admin/gestion/abonnement') && preg_match('#^/es/admin/gestion/abonnement/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_gestion_abonnement_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_abonnement_edit')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_abonnement_edit:

        }

        // fr__RG__admin_gestion_abonnement_delete
        if (0 === strpos($pathinfo, '/admin/gestion/abonnement') && preg_match('#^/admin/gestion/abonnement/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'DELETE', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'DELETE', 'HEAD'));
                goto not_fr__RG__admin_gestion_abonnement_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_gestion_abonnement_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_gestion_abonnement_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_gestion_abonnement_delete
            if (0 === strpos($pathinfo, '/en/admin/gestion/abonnement') && preg_match('#^/en/admin/gestion/abonnement/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'DELETE', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'DELETE', 'HEAD'));
                    goto not_en__RG__admin_gestion_abonnement_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_gestion_abonnement_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_gestion_abonnement_delete:

            // es__RG__admin_gestion_abonnement_delete
            if (0 === strpos($pathinfo, '/es/admin/gestion/abonnement') && preg_match('#^/es/admin/gestion/abonnement/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'DELETE', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'DELETE', 'HEAD'));
                    goto not_es__RG__admin_gestion_abonnement_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_gestion_abonnement_delete')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\AbonnementController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_gestion_abonnement_delete:

        }

        // fr__RG__index
        if ('/index' === $pathinfo) {
            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__index',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__index
            if ('/en/index' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__index',);
            }

            // es__RG__index
            if ('/es/index' === $pathinfo) {
                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\SiteController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__index',);
            }

        }

        // fr__RG__admin_config_utilisateur_index
        if ('/admin/config/utilisateur' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_config_utilisateur_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_config_utilisateur_index');
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_utilisateur_index',);
        }
        not_fr__RG__admin_config_utilisateur_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_utilisateur_index
            if ('/en/admin/config/utilisateur' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_config_utilisateur_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_config_utilisateur_index');
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_utilisateur_index',);
            }
            not_en__RG__admin_config_utilisateur_index:

            // es__RG__admin_config_utilisateur_index
            if ('/es/admin/config/utilisateur' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_config_utilisateur_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_config_utilisateur_index');
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_utilisateur_index',);
            }
            not_es__RG__admin_config_utilisateur_index:

        }

        // fr__RG__admin_config_utilisateur_show
        if (0 === strpos($pathinfo, '/admin/config/utilisateur') && preg_match('#^/admin/config/utilisateur/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_config_utilisateur_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_utilisateur_show')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_utilisateur_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_utilisateur_show
            if (0 === strpos($pathinfo, '/en/admin/config/utilisateur') && preg_match('#^/en/admin/config/utilisateur/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_config_utilisateur_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_utilisateur_show')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_utilisateur_show:

            // es__RG__admin_config_utilisateur_show
            if (0 === strpos($pathinfo, '/es/admin/config/utilisateur') && preg_match('#^/es/admin/config/utilisateur/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_config_utilisateur_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_utilisateur_show')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_utilisateur_show:

        }

        // fr__RG__admin_config_utilisateur_deactivate
        if (0 === strpos($pathinfo, '/admin/config/utilisateur') && preg_match('#^/admin/config/utilisateur/(?P<id>[^/]++)/deactivate$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_utilisateur_deactivate')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::deactivateAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_utilisateur_deactivate
            if (0 === strpos($pathinfo, '/en/admin/config/utilisateur') && preg_match('#^/en/admin/config/utilisateur/(?P<id>[^/]++)/deactivate$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_utilisateur_deactivate')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::deactivateAction',  '_locale' => 'en',));
            }

            // es__RG__admin_config_utilisateur_deactivate
            if (0 === strpos($pathinfo, '/es/admin/config/utilisateur') && preg_match('#^/es/admin/config/utilisateur/(?P<id>[^/]++)/deactivate$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_utilisateur_deactivate')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::deactivateAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_config_utilisateur_new
        if ('/admin/config/utilisateur/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_utilisateur_new;
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_utilisateur_new',);
        }
        not_fr__RG__admin_config_utilisateur_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_utilisateur_new
            if ('/en/admin/config/utilisateur/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_utilisateur_new;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_utilisateur_new',);
            }
            not_en__RG__admin_config_utilisateur_new:

            // es__RG__admin_config_utilisateur_new
            if ('/es/admin/config/utilisateur/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_utilisateur_new;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_utilisateur_new',);
            }
            not_es__RG__admin_config_utilisateur_new:

        }

        // fr__RG__admin_config_utilisateur_unregister
        if ('/admin/config/utilisateur/unregister' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_config_utilisateur_unregister;
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::unregisterAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_utilisateur_unregister',);
        }
        not_fr__RG__admin_config_utilisateur_unregister:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_utilisateur_unregister
            if ('/en/admin/config/utilisateur/unregister' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_config_utilisateur_unregister;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::unregisterAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_utilisateur_unregister',);
            }
            not_en__RG__admin_config_utilisateur_unregister:

            // es__RG__admin_config_utilisateur_unregister
            if ('/es/admin/config/utilisateur/unregister' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_config_utilisateur_unregister;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::unregisterAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_utilisateur_unregister',);
            }
            not_es__RG__admin_config_utilisateur_unregister:

        }

        // fr__RG__admin_config_utilisateur_edit
        if (0 === strpos($pathinfo, '/admin/config/utilisateur') && preg_match('#^/admin/config/utilisateur/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_utilisateur_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_utilisateur_edit')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_utilisateur_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_utilisateur_edit
            if (0 === strpos($pathinfo, '/en/admin/config/utilisateur') && preg_match('#^/en/admin/config/utilisateur/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_utilisateur_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_utilisateur_edit')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_utilisateur_edit:

            // es__RG__admin_config_utilisateur_edit
            if (0 === strpos($pathinfo, '/es/admin/config/utilisateur') && preg_match('#^/es/admin/config/utilisateur/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_utilisateur_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_utilisateur_edit')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_utilisateur_edit:

        }

        // fr__RG__admin_config_utilisateur_delete
        if (0 === strpos($pathinfo, '/admin/config/utilisateur') && preg_match('#^/admin/config/utilisateur/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_config_utilisateur_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_utilisateur_delete')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_utilisateur_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_utilisateur_delete
            if (0 === strpos($pathinfo, '/en/admin/config/utilisateur') && preg_match('#^/en/admin/config/utilisateur/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_config_utilisateur_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_utilisateur_delete')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_utilisateur_delete:

            // es__RG__admin_config_utilisateur_delete
            if (0 === strpos($pathinfo, '/es/admin/config/utilisateur') && preg_match('#^/es/admin/config/utilisateur/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_config_utilisateur_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_utilisateur_delete')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_utilisateur_delete:

        }

        // fr__RG__admin_config_utilisateur_edit_profil
        if (0 === strpos($pathinfo, '/admin/config/utilisateur') && preg_match('#^/admin/config/utilisateur/(?P<id>[^/]++)/profil$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_utilisateur_edit_profil;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_utilisateur_edit_profil')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\ProfileController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_utilisateur_edit_profil:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_utilisateur_edit_profil
            if (0 === strpos($pathinfo, '/en/admin/config/utilisateur') && preg_match('#^/en/admin/config/utilisateur/(?P<id>[^/]++)/profil$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_utilisateur_edit_profil;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_utilisateur_edit_profil')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\ProfileController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_utilisateur_edit_profil:

            // es__RG__admin_config_utilisateur_edit_profil
            if (0 === strpos($pathinfo, '/es/admin/config/utilisateur') && preg_match('#^/es/admin/config/utilisateur/(?P<id>[^/]++)/profil$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_utilisateur_edit_profil;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_utilisateur_edit_profil')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\ProfileController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_utilisateur_edit_profil:

        }

        // fr__RG__admin_config_utilisateur_patient
        if (0 === strpos($pathinfo, '/admin/config/utilisateur') && preg_match('#^/admin/config/utilisateur/(?P<id>[^/]++)/patient$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_utilisateur_patient;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_utilisateur_patient')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::patientAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_utilisateur_patient:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_utilisateur_patient
            if (0 === strpos($pathinfo, '/en/admin/config/utilisateur') && preg_match('#^/en/admin/config/utilisateur/(?P<id>[^/]++)/patient$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_utilisateur_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_utilisateur_patient')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::patientAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_utilisateur_patient:

            // es__RG__admin_config_utilisateur_patient
            if (0 === strpos($pathinfo, '/es/admin/config/utilisateur') && preg_match('#^/es/admin/config/utilisateur/(?P<id>[^/]++)/patient$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_utilisateur_patient;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_utilisateur_patient')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::patientAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_utilisateur_patient:

        }

        // fr__RG__admin_config_utilisateur_sms_verif
        if (0 === strpos($pathinfo, '/admin/config/utilisateur') && preg_match('#^/admin/config/utilisateur/(?P<id>[^/]++)/code$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_utilisateur_sms_verif;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_utilisateur_sms_verif')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::codeAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_utilisateur_sms_verif:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_utilisateur_sms_verif
            if (0 === strpos($pathinfo, '/en/admin/config/utilisateur') && preg_match('#^/en/admin/config/utilisateur/(?P<id>[^/]++)/code$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_utilisateur_sms_verif;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_utilisateur_sms_verif')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::codeAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_utilisateur_sms_verif:

            // es__RG__admin_config_utilisateur_sms_verif
            if (0 === strpos($pathinfo, '/es/admin/config/utilisateur') && preg_match('#^/es/admin/config/utilisateur/(?P<id>[^/]++)/code$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_utilisateur_sms_verif;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_utilisateur_sms_verif')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\UtilisateurController::codeAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_utilisateur_sms_verif:

        }

        // fr__RG__admin_config_personne_index
        if ('/admin/config/personne' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_config_personne_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_config_personne_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_config_personne_index;
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_personne_index',);
        }
        not_fr__RG__admin_config_personne_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_personne_index
            if ('/en/admin/config/personne' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_config_personne_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_config_personne_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_config_personne_index;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_personne_index',);
            }
            not_en__RG__admin_config_personne_index:

            // es__RG__admin_config_personne_index
            if ('/es/admin/config/personne' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_config_personne_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_config_personne_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_config_personne_index;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_personne_index',);
            }
            not_es__RG__admin_config_personne_index:

        }

        // fr__RG__admin_config_personne_show
        if (0 === strpos($pathinfo, '/admin/config/personne') && preg_match('#^/admin/config/personne/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_config_personne_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_personne_show')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_personne_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_personne_show
            if (0 === strpos($pathinfo, '/en/admin/config/personne') && preg_match('#^/en/admin/config/personne/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_config_personne_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_personne_show')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_personne_show:

            // es__RG__admin_config_personne_show
            if (0 === strpos($pathinfo, '/es/admin/config/personne') && preg_match('#^/es/admin/config/personne/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_config_personne_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_personne_show')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_personne_show:

        }

        // fr__RG__admin_config_personne_new
        if ('/admin/config/personne/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_personne_new;
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_personne_new',);
        }
        not_fr__RG__admin_config_personne_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_personne_new
            if ('/en/admin/config/personne/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_personne_new;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_personne_new',);
            }
            not_en__RG__admin_config_personne_new:

            // es__RG__admin_config_personne_new
            if ('/es/admin/config/personne/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_personne_new;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_personne_new',);
            }
            not_es__RG__admin_config_personne_new:

        }

        // fr__RG__admin_config_personne_edit
        if (0 === strpos($pathinfo, '/admin/config/personne') && preg_match('#^/admin/config/personne/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_personne_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_personne_edit')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_personne_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_personne_edit
            if (0 === strpos($pathinfo, '/en/admin/config/personne') && preg_match('#^/en/admin/config/personne/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_personne_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_personne_edit')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_personne_edit:

            // es__RG__admin_config_personne_edit
            if (0 === strpos($pathinfo, '/es/admin/config/personne') && preg_match('#^/es/admin/config/personne/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_personne_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_personne_edit')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_personne_edit:

        }

        // fr__RG__admin_config_personne_delete
        if (0 === strpos($pathinfo, '/admin/config/personne') && preg_match('#^/admin/config/personne/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_config_personne_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_personne_delete')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_personne_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_personne_delete
            if (0 === strpos($pathinfo, '/en/admin/config/personne') && preg_match('#^/en/admin/config/personne/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_config_personne_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_personne_delete')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_personne_delete:

            // es__RG__admin_config_personne_delete
            if (0 === strpos($pathinfo, '/es/admin/config/personne') && preg_match('#^/es/admin/config/personne/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_config_personne_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_personne_delete')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\PersonneController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_personne_delete:

        }

        // fr__RG__admin_config_groupe_index
        if ('/admin/config/groupe' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_config_groupe_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_config_groupe_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_config_groupe_index;
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_groupe_index',);
        }
        not_fr__RG__admin_config_groupe_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_groupe_index
            if ('/en/admin/config/groupe' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_config_groupe_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_config_groupe_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_config_groupe_index;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_groupe_index',);
            }
            not_en__RG__admin_config_groupe_index:

            // es__RG__admin_config_groupe_index
            if ('/es/admin/config/groupe' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_config_groupe_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_config_groupe_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_config_groupe_index;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_groupe_index',);
            }
            not_es__RG__admin_config_groupe_index:

        }

        // fr__RG__admin_config_groupe_show
        if (0 === strpos($pathinfo, '/admin/config/groupe') && preg_match('#^/admin/config/groupe/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_config_groupe_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_groupe_show')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_groupe_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_groupe_show
            if (0 === strpos($pathinfo, '/en/admin/config/groupe') && preg_match('#^/en/admin/config/groupe/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_config_groupe_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_groupe_show')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_groupe_show:

            // es__RG__admin_config_groupe_show
            if (0 === strpos($pathinfo, '/es/admin/config/groupe') && preg_match('#^/es/admin/config/groupe/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_config_groupe_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_groupe_show')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_groupe_show:

        }

        // fr__RG__admin_config_groupe_new
        if ('/admin/config/groupe/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_groupe_new;
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_groupe_new',);
        }
        not_fr__RG__admin_config_groupe_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_groupe_new
            if ('/en/admin/config/groupe/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_groupe_new;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_groupe_new',);
            }
            not_en__RG__admin_config_groupe_new:

            // es__RG__admin_config_groupe_new
            if ('/es/admin/config/groupe/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_groupe_new;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_groupe_new',);
            }
            not_es__RG__admin_config_groupe_new:

        }

        // fr__RG__admin_config_groupe_edit
        if (0 === strpos($pathinfo, '/admin/config/groupe') && preg_match('#^/admin/config/groupe/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_groupe_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_groupe_edit')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_groupe_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_groupe_edit
            if (0 === strpos($pathinfo, '/en/admin/config/groupe') && preg_match('#^/en/admin/config/groupe/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_groupe_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_groupe_edit')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_groupe_edit:

            // es__RG__admin_config_groupe_edit
            if (0 === strpos($pathinfo, '/es/admin/config/groupe') && preg_match('#^/es/admin/config/groupe/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_groupe_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_groupe_edit')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_groupe_edit:

        }

        // fr__RG__admin_config_groupe_delete
        if (0 === strpos($pathinfo, '/admin/config/groupe') && preg_match('#^/admin/config/groupe/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_config_groupe_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_groupe_delete')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_groupe_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_groupe_delete
            if (0 === strpos($pathinfo, '/en/admin/config/groupe') && preg_match('#^/en/admin/config/groupe/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_config_groupe_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_groupe_delete')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_groupe_delete:

            // es__RG__admin_config_groupe_delete
            if (0 === strpos($pathinfo, '/es/admin/config/groupe') && preg_match('#^/es/admin/config/groupe/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_config_groupe_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_groupe_delete')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\GroupeController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_groupe_delete:

        }

        // fr__RG__admin_config_role_index
        if ('/admin/config/role' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_config_role_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_config_role_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_config_role_index;
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_role_index',);
        }
        not_fr__RG__admin_config_role_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_role_index
            if ('/en/admin/config/role' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_config_role_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_config_role_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_config_role_index;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_role_index',);
            }
            not_en__RG__admin_config_role_index:

            // es__RG__admin_config_role_index
            if ('/es/admin/config/role' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_config_role_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_config_role_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_config_role_index;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_role_index',);
            }
            not_es__RG__admin_config_role_index:

        }

        // fr__RG__admin_config_role_show
        if (0 === strpos($pathinfo, '/admin/config/role') && preg_match('#^/admin/config/role/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_config_role_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_role_show')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_role_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_role_show
            if (0 === strpos($pathinfo, '/en/admin/config/role') && preg_match('#^/en/admin/config/role/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_config_role_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_role_show')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_role_show:

            // es__RG__admin_config_role_show
            if (0 === strpos($pathinfo, '/es/admin/config/role') && preg_match('#^/es/admin/config/role/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_config_role_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_role_show')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_role_show:

        }

        // fr__RG__admin_config_role_new
        if ('/admin/config/role/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_role_new;
            }

            return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_role_new',);
        }
        not_fr__RG__admin_config_role_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_role_new
            if ('/en/admin/config/role/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_role_new;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_role_new',);
            }
            not_en__RG__admin_config_role_new:

            // es__RG__admin_config_role_new
            if ('/es/admin/config/role/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_role_new;
                }

                return array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_role_new',);
            }
            not_es__RG__admin_config_role_new:

        }

        // fr__RG__admin_config_role_edit
        if (0 === strpos($pathinfo, '/admin/config/role') && preg_match('#^/admin/config/role/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_role_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_role_edit')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_role_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_role_edit
            if (0 === strpos($pathinfo, '/en/admin/config/role') && preg_match('#^/en/admin/config/role/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_role_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_role_edit')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_role_edit:

            // es__RG__admin_config_role_edit
            if (0 === strpos($pathinfo, '/es/admin/config/role') && preg_match('#^/es/admin/config/role/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_role_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_role_edit')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_role_edit:

        }

        // fr__RG__admin_config_role_delete
        if (0 === strpos($pathinfo, '/admin/config/role') && preg_match('#^/admin/config/role/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_config_role_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_role_delete')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_role_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_role_delete
            if (0 === strpos($pathinfo, '/en/admin/config/role') && preg_match('#^/en/admin/config/role/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_config_role_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_role_delete')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_role_delete:

            // es__RG__admin_config_role_delete
            if (0 === strpos($pathinfo, '/es/admin/config/role') && preg_match('#^/es/admin/config/role/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_config_role_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_role_delete')), array (  '_controller' => 'PS\\UtilisateurBundle\\Controller\\RoleController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_role_delete:

        }

        // fr__RG__utilisateur_admin_profile_utilisateur_edit
        if ('/admin/utilisateur/profile/edit' === $pathinfo) {
            return array (  '_controller' => 'psm_profile_controller:editAction',  '_locale' => 'fr',  '_route' => 'fr__RG__utilisateur_admin_profile_utilisateur_edit',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__utilisateur_admin_profile_utilisateur_edit
            if ('/en/admin/utilisateur/profile/edit' === $pathinfo) {
                return array (  '_controller' => 'psm_profile_controller:editAction',  '_locale' => 'en',  '_route' => 'en__RG__utilisateur_admin_profile_utilisateur_edit',);
            }

            // es__RG__utilisateur_admin_profile_utilisateur_edit
            if ('/es/admin/utilisateur/profile/edit' === $pathinfo) {
                return array (  '_controller' => 'psm_profile_controller:editAction',  '_locale' => 'es',  '_route' => 'es__RG__utilisateur_admin_profile_utilisateur_edit',);
            }

        }

        // fr__RG__utilisateur_admin_profile_utilisateur_show
        if ('/admin/utilisateur/profile' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__utilisateur_admin_profile_utilisateur_show;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__utilisateur_admin_profile_utilisateur_show');
            }

            return array (  '_controller' => 'psm_profile_controller:showAction',  '_locale' => 'fr',  '_route' => 'fr__RG__utilisateur_admin_profile_utilisateur_show',);
        }
        not_fr__RG__utilisateur_admin_profile_utilisateur_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__utilisateur_admin_profile_utilisateur_show
            if ('/en/admin/utilisateur/profile' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__utilisateur_admin_profile_utilisateur_show;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__utilisateur_admin_profile_utilisateur_show');
                }

                return array (  '_controller' => 'psm_profile_controller:showAction',  '_locale' => 'en',  '_route' => 'en__RG__utilisateur_admin_profile_utilisateur_show',);
            }
            not_en__RG__utilisateur_admin_profile_utilisateur_show:

            // es__RG__utilisateur_admin_profile_utilisateur_show
            if ('/es/admin/utilisateur/profile' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__utilisateur_admin_profile_utilisateur_show;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__utilisateur_admin_profile_utilisateur_show');
                }

                return array (  '_controller' => 'psm_profile_controller:showAction',  '_locale' => 'es',  '_route' => 'es__RG__utilisateur_admin_profile_utilisateur_show',);
            }
            not_es__RG__utilisateur_admin_profile_utilisateur_show:

        }

        // fr__RG__fos_user_security_login
        if ('/login' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__fos_user_security_login;
            }

            return array (  '_controller' => 'fos_user.security.controller:loginAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_security_login',);
        }
        not_fr__RG__fos_user_security_login:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_security_login
            if ('/en/login' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__fos_user_security_login;
                }

                return array (  '_controller' => 'fos_user.security.controller:loginAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_security_login',);
            }
            not_en__RG__fos_user_security_login:

            // es__RG__fos_user_security_login
            if ('/es/login' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__fos_user_security_login;
                }

                return array (  '_controller' => 'fos_user.security.controller:loginAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_security_login',);
            }
            not_es__RG__fos_user_security_login:

        }

        // fr__RG__fos_user_security_check
        if ('/login_check' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__fos_user_security_check;
            }

            return array (  '_controller' => 'fos_user.security.controller:checkAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_security_check',);
        }
        not_fr__RG__fos_user_security_check:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_security_check
            if ('/en/login_check' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__fos_user_security_check;
                }

                return array (  '_controller' => 'fos_user.security.controller:checkAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_security_check',);
            }
            not_en__RG__fos_user_security_check:

            // es__RG__fos_user_security_check
            if ('/es/login_check' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__fos_user_security_check;
                }

                return array (  '_controller' => 'fos_user.security.controller:checkAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_security_check',);
            }
            not_es__RG__fos_user_security_check:

        }

        // fr__RG__fos_user_security_logout
        if ('/logout' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__fos_user_security_logout;
            }

            return array (  '_controller' => 'fos_user.security.controller:logoutAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_security_logout',);
        }
        not_fr__RG__fos_user_security_logout:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_security_logout
            if ('/en/logout' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__fos_user_security_logout;
                }

                return array (  '_controller' => 'fos_user.security.controller:logoutAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_security_logout',);
            }
            not_en__RG__fos_user_security_logout:

            // es__RG__fos_user_security_logout
            if ('/es/logout' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__fos_user_security_logout;
                }

                return array (  '_controller' => 'fos_user.security.controller:logoutAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_security_logout',);
            }
            not_es__RG__fos_user_security_logout:

        }

        // fr__RG__fos_user_profile_show
        if ('/admin/profile' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__fos_user_profile_show;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__fos_user_profile_show');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__fos_user_profile_show;
            }

            return array (  '_controller' => 'fos_user.profile.controller:showAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_profile_show',);
        }
        not_fr__RG__fos_user_profile_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_profile_show
            if ('/en/admin/profile' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__fos_user_profile_show;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__fos_user_profile_show');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__fos_user_profile_show;
                }

                return array (  '_controller' => 'fos_user.profile.controller:showAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_profile_show',);
            }
            not_en__RG__fos_user_profile_show:

            // es__RG__fos_user_profile_show
            if ('/es/admin/profile' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__fos_user_profile_show;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__fos_user_profile_show');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__fos_user_profile_show;
                }

                return array (  '_controller' => 'fos_user.profile.controller:showAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_profile_show',);
            }
            not_es__RG__fos_user_profile_show:

        }

        // fr__RG__fos_user_profile_edit
        if ('/admin/profile/edit' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__fos_user_profile_edit;
            }

            return array (  '_controller' => 'fos_user.profile.controller:editAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_profile_edit',);
        }
        not_fr__RG__fos_user_profile_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_profile_edit
            if ('/en/admin/profile/edit' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__fos_user_profile_edit;
                }

                return array (  '_controller' => 'fos_user.profile.controller:editAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_profile_edit',);
            }
            not_en__RG__fos_user_profile_edit:

            // es__RG__fos_user_profile_edit
            if ('/es/admin/profile/edit' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__fos_user_profile_edit;
                }

                return array (  '_controller' => 'fos_user.profile.controller:editAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_profile_edit',);
            }
            not_es__RG__fos_user_profile_edit:

        }

        // fr__RG__fos_user_registration_register
        if ('/register' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__fos_user_registration_register;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__fos_user_registration_register');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__fos_user_registration_register;
            }

            return array (  '_controller' => 'fos_user.registration.controller:registerAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_registration_register',);
        }
        not_fr__RG__fos_user_registration_register:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_registration_register
            if ('/en/register' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__fos_user_registration_register;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__fos_user_registration_register');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__fos_user_registration_register;
                }

                return array (  '_controller' => 'fos_user.registration.controller:registerAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_registration_register',);
            }
            not_en__RG__fos_user_registration_register:

            // es__RG__fos_user_registration_register
            if ('/es/register' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__fos_user_registration_register;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__fos_user_registration_register');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__fos_user_registration_register;
                }

                return array (  '_controller' => 'fos_user.registration.controller:registerAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_registration_register',);
            }
            not_es__RG__fos_user_registration_register:

        }

        // fr__RG__fos_user_registration_check_email
        if ('/register/check-email' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__fos_user_registration_check_email;
            }

            return array (  '_controller' => 'fos_user.registration.controller:checkEmailAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_registration_check_email',);
        }
        not_fr__RG__fos_user_registration_check_email:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_registration_check_email
            if ('/en/register/check-email' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__fos_user_registration_check_email;
                }

                return array (  '_controller' => 'fos_user.registration.controller:checkEmailAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_registration_check_email',);
            }
            not_en__RG__fos_user_registration_check_email:

            // es__RG__fos_user_registration_check_email
            if ('/es/register/check-email' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__fos_user_registration_check_email;
                }

                return array (  '_controller' => 'fos_user.registration.controller:checkEmailAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_registration_check_email',);
            }
            not_es__RG__fos_user_registration_check_email:

        }

        // fr__RG__fos_user_registration_confirm
        if (0 === strpos($pathinfo, '/register/confirm') && preg_match('#^/register/confirm/(?P<token>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__fos_user_registration_confirm;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__fos_user_registration_confirm')), array (  '_controller' => 'fos_user.registration.controller:confirmAction',  '_locale' => 'fr',));
        }
        not_fr__RG__fos_user_registration_confirm:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_registration_confirm
            if (0 === strpos($pathinfo, '/en/register/confirm') && preg_match('#^/en/register/confirm/(?P<token>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__fos_user_registration_confirm;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__fos_user_registration_confirm')), array (  '_controller' => 'fos_user.registration.controller:confirmAction',  '_locale' => 'en',));
            }
            not_en__RG__fos_user_registration_confirm:

            // es__RG__fos_user_registration_confirm
            if (0 === strpos($pathinfo, '/es/register/confirm') && preg_match('#^/es/register/confirm/(?P<token>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__fos_user_registration_confirm;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__fos_user_registration_confirm')), array (  '_controller' => 'fos_user.registration.controller:confirmAction',  '_locale' => 'es',));
            }
            not_es__RG__fos_user_registration_confirm:

        }

        // fr__RG__fos_user_registration_confirmed
        if ('/register/confirmed' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__fos_user_registration_confirmed;
            }

            return array (  '_controller' => 'fos_user.registration.controller:confirmedAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_registration_confirmed',);
        }
        not_fr__RG__fos_user_registration_confirmed:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_registration_confirmed
            if ('/en/register/confirmed' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__fos_user_registration_confirmed;
                }

                return array (  '_controller' => 'fos_user.registration.controller:confirmedAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_registration_confirmed',);
            }
            not_en__RG__fos_user_registration_confirmed:

            // es__RG__fos_user_registration_confirmed
            if ('/es/register/confirmed' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__fos_user_registration_confirmed;
                }

                return array (  '_controller' => 'fos_user.registration.controller:confirmedAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_registration_confirmed',);
            }
            not_es__RG__fos_user_registration_confirmed:

        }

        // fr__RG__fos_user_resetting_request
        if ('/resetting/request' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__fos_user_resetting_request;
            }

            return array (  '_controller' => 'fos_user.resetting.controller:requestAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_resetting_request',);
        }
        not_fr__RG__fos_user_resetting_request:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_resetting_request
            if ('/en/resetting/request' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__fos_user_resetting_request;
                }

                return array (  '_controller' => 'fos_user.resetting.controller:requestAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_resetting_request',);
            }
            not_en__RG__fos_user_resetting_request:

            // es__RG__fos_user_resetting_request
            if ('/es/resetting/request' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__fos_user_resetting_request;
                }

                return array (  '_controller' => 'fos_user.resetting.controller:requestAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_resetting_request',);
            }
            not_es__RG__fos_user_resetting_request:

        }

        // fr__RG__fos_user_resetting_send_email
        if ('/resetting/send-email' === $pathinfo) {
            if ($this->context->getMethod() != 'POST') {
                $allow[] = 'POST';
                goto not_fr__RG__fos_user_resetting_send_email;
            }

            return array (  '_controller' => 'fos_user.resetting.controller:sendEmailAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_resetting_send_email',);
        }
        not_fr__RG__fos_user_resetting_send_email:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_resetting_send_email
            if ('/en/resetting/send-email' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_en__RG__fos_user_resetting_send_email;
                }

                return array (  '_controller' => 'fos_user.resetting.controller:sendEmailAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_resetting_send_email',);
            }
            not_en__RG__fos_user_resetting_send_email:

            // es__RG__fos_user_resetting_send_email
            if ('/es/resetting/send-email' === $pathinfo) {
                if ($this->context->getMethod() != 'POST') {
                    $allow[] = 'POST';
                    goto not_es__RG__fos_user_resetting_send_email;
                }

                return array (  '_controller' => 'fos_user.resetting.controller:sendEmailAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_resetting_send_email',);
            }
            not_es__RG__fos_user_resetting_send_email:

        }

        // fr__RG__fos_user_resetting_check_email
        if ('/resetting/check-email' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__fos_user_resetting_check_email;
            }

            return array (  '_controller' => 'fos_user.resetting.controller:checkEmailAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_resetting_check_email',);
        }
        not_fr__RG__fos_user_resetting_check_email:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_resetting_check_email
            if ('/en/resetting/check-email' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__fos_user_resetting_check_email;
                }

                return array (  '_controller' => 'fos_user.resetting.controller:checkEmailAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_resetting_check_email',);
            }
            not_en__RG__fos_user_resetting_check_email:

            // es__RG__fos_user_resetting_check_email
            if ('/es/resetting/check-email' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__fos_user_resetting_check_email;
                }

                return array (  '_controller' => 'fos_user.resetting.controller:checkEmailAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_resetting_check_email',);
            }
            not_es__RG__fos_user_resetting_check_email:

        }

        // fr__RG__fos_user_resetting_reset
        if (0 === strpos($pathinfo, '/resetting/reset') && preg_match('#^/resetting/reset/(?P<token>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__fos_user_resetting_reset;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__fos_user_resetting_reset')), array (  '_controller' => 'fos_user.resetting.controller:resetAction',  '_locale' => 'fr',));
        }
        not_fr__RG__fos_user_resetting_reset:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_resetting_reset
            if (0 === strpos($pathinfo, '/en/resetting/reset') && preg_match('#^/en/resetting/reset/(?P<token>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__fos_user_resetting_reset;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__fos_user_resetting_reset')), array (  '_controller' => 'fos_user.resetting.controller:resetAction',  '_locale' => 'en',));
            }
            not_en__RG__fos_user_resetting_reset:

            // es__RG__fos_user_resetting_reset
            if (0 === strpos($pathinfo, '/es/resetting/reset') && preg_match('#^/es/resetting/reset/(?P<token>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__fos_user_resetting_reset;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__fos_user_resetting_reset')), array (  '_controller' => 'fos_user.resetting.controller:resetAction',  '_locale' => 'es',));
            }
            not_es__RG__fos_user_resetting_reset:

        }

        // fr__RG__fos_user_change_password
        if ('/admin/change-password/change-password' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__fos_user_change_password;
            }

            return array (  '_controller' => 'fos_user.change_password.controller:changePasswordAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_change_password',);
        }
        not_fr__RG__fos_user_change_password:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_change_password
            if ('/en/admin/change-password/change-password' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__fos_user_change_password;
                }

                return array (  '_controller' => 'fos_user.change_password.controller:changePasswordAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_change_password',);
            }
            not_en__RG__fos_user_change_password:

            // es__RG__fos_user_change_password
            if ('/es/admin/change-password/change-password' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__fos_user_change_password;
                }

                return array (  '_controller' => 'fos_user.change_password.controller:changePasswordAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_change_password',);
            }
            not_es__RG__fos_user_change_password:

        }

        // fr__RG__fos_user_group_list
        if ('/admin/config/group/list' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__fos_user_group_list;
            }

            return array (  '_controller' => 'fos_user.group.controller:listAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_group_list',);
        }
        not_fr__RG__fos_user_group_list:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_group_list
            if ('/en/admin/config/group/list' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__fos_user_group_list;
                }

                return array (  '_controller' => 'fos_user.group.controller:listAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_group_list',);
            }
            not_en__RG__fos_user_group_list:

            // es__RG__fos_user_group_list
            if ('/es/admin/config/group/list' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__fos_user_group_list;
                }

                return array (  '_controller' => 'fos_user.group.controller:listAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_group_list',);
            }
            not_es__RG__fos_user_group_list:

        }

        // fr__RG__fos_user_group_new
        if ('/admin/config/group/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__fos_user_group_new;
            }

            return array (  '_controller' => 'fos_user.group.controller:newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__fos_user_group_new',);
        }
        not_fr__RG__fos_user_group_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_group_new
            if ('/en/admin/config/group/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__fos_user_group_new;
                }

                return array (  '_controller' => 'fos_user.group.controller:newAction',  '_locale' => 'en',  '_route' => 'en__RG__fos_user_group_new',);
            }
            not_en__RG__fos_user_group_new:

            // es__RG__fos_user_group_new
            if ('/es/admin/config/group/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__fos_user_group_new;
                }

                return array (  '_controller' => 'fos_user.group.controller:newAction',  '_locale' => 'es',  '_route' => 'es__RG__fos_user_group_new',);
            }
            not_es__RG__fos_user_group_new:

        }

        // fr__RG__fos_user_group_show
        if (0 === strpos($pathinfo, '/admin/config/group') && preg_match('#^/admin/config/group/(?P<groupName>[^/]++)$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__fos_user_group_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__fos_user_group_show')), array (  '_controller' => 'fos_user.group.controller:showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__fos_user_group_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_group_show
            if (0 === strpos($pathinfo, '/en/admin/config/group') && preg_match('#^/en/admin/config/group/(?P<groupName>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__fos_user_group_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__fos_user_group_show')), array (  '_controller' => 'fos_user.group.controller:showAction',  '_locale' => 'en',));
            }
            not_en__RG__fos_user_group_show:

            // es__RG__fos_user_group_show
            if (0 === strpos($pathinfo, '/es/admin/config/group') && preg_match('#^/es/admin/config/group/(?P<groupName>[^/]++)$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__fos_user_group_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__fos_user_group_show')), array (  '_controller' => 'fos_user.group.controller:showAction',  '_locale' => 'es',));
            }
            not_es__RG__fos_user_group_show:

        }

        // fr__RG__fos_user_group_edit
        if (0 === strpos($pathinfo, '/admin/config/group') && preg_match('#^/admin/config/group/(?P<groupName>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__fos_user_group_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__fos_user_group_edit')), array (  '_controller' => 'fos_user.group.controller:editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__fos_user_group_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_group_edit
            if (0 === strpos($pathinfo, '/en/admin/config/group') && preg_match('#^/en/admin/config/group/(?P<groupName>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__fos_user_group_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__fos_user_group_edit')), array (  '_controller' => 'fos_user.group.controller:editAction',  '_locale' => 'en',));
            }
            not_en__RG__fos_user_group_edit:

            // es__RG__fos_user_group_edit
            if (0 === strpos($pathinfo, '/es/admin/config/group') && preg_match('#^/es/admin/config/group/(?P<groupName>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__fos_user_group_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__fos_user_group_edit')), array (  '_controller' => 'fos_user.group.controller:editAction',  '_locale' => 'es',));
            }
            not_es__RG__fos_user_group_edit:

        }

        // fr__RG__fos_user_group_delete
        if (0 === strpos($pathinfo, '/admin/config/group') && preg_match('#^/admin/config/group/(?P<groupName>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__fos_user_group_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__fos_user_group_delete')), array (  '_controller' => 'fos_user.group.controller:deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__fos_user_group_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_user_group_delete
            if (0 === strpos($pathinfo, '/en/admin/config/group') && preg_match('#^/en/admin/config/group/(?P<groupName>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__fos_user_group_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__fos_user_group_delete')), array (  '_controller' => 'fos_user.group.controller:deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__fos_user_group_delete:

            // es__RG__fos_user_group_delete
            if (0 === strpos($pathinfo, '/es/admin/config/group') && preg_match('#^/es/admin/config/group/(?P<groupName>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__fos_user_group_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__fos_user_group_delete')), array (  '_controller' => 'fos_user.group.controller:deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__fos_user_group_delete:

        }

        // fr__RG__admin_parametre_allergie_index
        if ('/admin/parametre/allergie' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_allergie_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_allergie_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_allergie_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_allergie_index',);
        }
        not_fr__RG__admin_parametre_allergie_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_allergie_index
            if ('/en/admin/parametre/allergie' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_allergie_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_allergie_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_allergie_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_allergie_index',);
            }
            not_en__RG__admin_parametre_allergie_index:

            // es__RG__admin_parametre_allergie_index
            if ('/es/admin/parametre/allergie' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_allergie_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_allergie_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_allergie_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_allergie_index',);
            }
            not_es__RG__admin_parametre_allergie_index:

        }

        // fr__RG__admin_parametre_allergie_show
        if (0 === strpos($pathinfo, '/admin/parametre/allergie') && preg_match('#^/admin/parametre/allergie/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_allergie_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_allergie_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_allergie_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_allergie_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/allergie') && preg_match('#^/en/admin/parametre/allergie/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_allergie_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_allergie_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_allergie_show:

            // es__RG__admin_parametre_allergie_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/allergie') && preg_match('#^/es/admin/parametre/allergie/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_allergie_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_allergie_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_allergie_show:

        }

        // fr__RG__admin_parametre_allergie_new
        if ('/admin/parametre/allergie/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_allergie_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_allergie_new',);
        }
        not_fr__RG__admin_parametre_allergie_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_allergie_new
            if ('/en/admin/parametre/allergie/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_allergie_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_allergie_new',);
            }
            not_en__RG__admin_parametre_allergie_new:

            // es__RG__admin_parametre_allergie_new
            if ('/es/admin/parametre/allergie/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_allergie_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_allergie_new',);
            }
            not_es__RG__admin_parametre_allergie_new:

        }

        // fr__RG__admin_parametre_allergie_edit
        if (0 === strpos($pathinfo, '/admin/parametre/allergie') && preg_match('#^/admin/parametre/allergie/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_allergie_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_allergie_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_allergie_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_allergie_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/allergie') && preg_match('#^/en/admin/parametre/allergie/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_allergie_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_allergie_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_allergie_edit:

            // es__RG__admin_parametre_allergie_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/allergie') && preg_match('#^/es/admin/parametre/allergie/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_allergie_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_allergie_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_allergie_edit:

        }

        // fr__RG__admin_parametre_allergie_delete
        if (0 === strpos($pathinfo, '/admin/parametre/allergie') && preg_match('#^/admin/parametre/allergie/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_allergie_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_allergie_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_allergie_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_allergie_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/allergie') && preg_match('#^/en/admin/parametre/allergie/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_allergie_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_allergie_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_allergie_delete:

            // es__RG__admin_parametre_allergie_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/allergie') && preg_match('#^/es/admin/parametre/allergie/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_allergie_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_allergie_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AllergieController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_allergie_delete:

        }

        // fr__RG__admin_parametre_affection_index
        if ('/admin/parametre/affection' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_affection_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_affection_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_affection_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_affection_index',);
        }
        not_fr__RG__admin_parametre_affection_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_affection_index
            if ('/en/admin/parametre/affection' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_affection_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_affection_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_affection_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_affection_index',);
            }
            not_en__RG__admin_parametre_affection_index:

            // es__RG__admin_parametre_affection_index
            if ('/es/admin/parametre/affection' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_affection_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_affection_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_affection_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_affection_index',);
            }
            not_es__RG__admin_parametre_affection_index:

        }

        // fr__RG__admin_parametre_affection_show
        if (0 === strpos($pathinfo, '/admin/parametre/affection') && preg_match('#^/admin/parametre/affection/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_affection_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_affection_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_affection_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_affection_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/affection') && preg_match('#^/en/admin/parametre/affection/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_affection_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_affection_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_affection_show:

            // es__RG__admin_parametre_affection_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/affection') && preg_match('#^/es/admin/parametre/affection/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_affection_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_affection_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_affection_show:

        }

        // fr__RG__admin_parametre_affection_new
        if ('/admin/parametre/affection/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_affection_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_affection_new',);
        }
        not_fr__RG__admin_parametre_affection_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_affection_new
            if ('/en/admin/parametre/affection/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_affection_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_affection_new',);
            }
            not_en__RG__admin_parametre_affection_new:

            // es__RG__admin_parametre_affection_new
            if ('/es/admin/parametre/affection/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_affection_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_affection_new',);
            }
            not_es__RG__admin_parametre_affection_new:

        }

        // fr__RG__admin_parametre_affection_edit
        if (0 === strpos($pathinfo, '/admin/parametre/affection') && preg_match('#^/admin/parametre/affection/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_affection_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_affection_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_affection_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_affection_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/affection') && preg_match('#^/en/admin/parametre/affection/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_affection_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_affection_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_affection_edit:

            // es__RG__admin_parametre_affection_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/affection') && preg_match('#^/es/admin/parametre/affection/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_affection_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_affection_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_affection_edit:

        }

        // fr__RG__admin_parametre_affection_delete
        if (0 === strpos($pathinfo, '/admin/parametre/affection') && preg_match('#^/admin/parametre/affection/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_affection_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_affection_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_affection_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_affection_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/affection') && preg_match('#^/en/admin/parametre/affection/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_affection_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_affection_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_affection_delete:

            // es__RG__admin_parametre_affection_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/affection') && preg_match('#^/es/admin/parametre/affection/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_affection_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_affection_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AffectionController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_affection_delete:

        }

        // fr__RG__admin_parametre_etat_index
        if ('/admin/parametre/etat' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_etat_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_etat_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_etat_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_etat_index',);
        }
        not_fr__RG__admin_parametre_etat_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_etat_index
            if ('/en/admin/parametre/etat' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_etat_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_etat_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_etat_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_etat_index',);
            }
            not_en__RG__admin_parametre_etat_index:

            // es__RG__admin_parametre_etat_index
            if ('/es/admin/parametre/etat' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_etat_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_etat_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_etat_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_etat_index',);
            }
            not_es__RG__admin_parametre_etat_index:

        }

        // fr__RG__admin_parametre_etat_show
        if (0 === strpos($pathinfo, '/admin/parametre/etat') && preg_match('#^/admin/parametre/etat/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_etat_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_etat_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_etat_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_etat_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/etat') && preg_match('#^/en/admin/parametre/etat/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_etat_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_etat_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_etat_show:

            // es__RG__admin_parametre_etat_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/etat') && preg_match('#^/es/admin/parametre/etat/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_etat_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_etat_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_etat_show:

        }

        // fr__RG__admin_parametre_etat_new
        if ('/admin/parametre/etat/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_etat_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_etat_new',);
        }
        not_fr__RG__admin_parametre_etat_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_etat_new
            if ('/en/admin/parametre/etat/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_etat_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_etat_new',);
            }
            not_en__RG__admin_parametre_etat_new:

            // es__RG__admin_parametre_etat_new
            if ('/es/admin/parametre/etat/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_etat_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_etat_new',);
            }
            not_es__RG__admin_parametre_etat_new:

        }

        // fr__RG__admin_parametre_etat_edit
        if (0 === strpos($pathinfo, '/admin/parametre/etat') && preg_match('#^/admin/parametre/etat/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_etat_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_etat_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_etat_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_etat_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/etat') && preg_match('#^/en/admin/parametre/etat/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_etat_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_etat_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_etat_edit:

            // es__RG__admin_parametre_etat_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/etat') && preg_match('#^/es/admin/parametre/etat/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_etat_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_etat_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_etat_edit:

        }

        // fr__RG__admin_parametre_etat_delete
        if (0 === strpos($pathinfo, '/admin/parametre/etat') && preg_match('#^/admin/parametre/etat/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_etat_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_etat_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_etat_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_etat_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/etat') && preg_match('#^/en/admin/parametre/etat/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_etat_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_etat_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_etat_delete:

            // es__RG__admin_parametre_etat_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/etat') && preg_match('#^/es/admin/parametre/etat/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_etat_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_etat_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\EtatController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_etat_delete:

        }

        // fr__RG__admin_parametre_fichier_delete
        if (0 === strpos($pathinfo, '/admin/parametre/fichier') && preg_match('#^/admin/parametre/fichier/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'DELETE', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'DELETE', 'HEAD'));
                goto not_fr__RG__admin_parametre_fichier_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_fichier_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\FichierController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_fichier_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_fichier_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/fichier') && preg_match('#^/en/admin/parametre/fichier/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'DELETE', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'DELETE', 'HEAD'));
                    goto not_en__RG__admin_parametre_fichier_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_fichier_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\FichierController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_fichier_delete:

            // es__RG__admin_parametre_fichier_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/fichier') && preg_match('#^/es/admin/parametre/fichier/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'DELETE', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'DELETE', 'HEAD'));
                    goto not_es__RG__admin_parametre_fichier_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_fichier_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\FichierController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_fichier_delete:

        }

        // fr__RG__admin_parametre_fichier_show
        if (0 === strpos($pathinfo, '/admin/parametre/fichier') && preg_match('#^/admin/parametre/fichier/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_fichier_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_fichier_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\FichierController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_fichier_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_fichier_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/fichier') && preg_match('#^/en/admin/parametre/fichier/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_fichier_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_fichier_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\FichierController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_fichier_show:

            // es__RG__admin_parametre_fichier_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/fichier') && preg_match('#^/es/admin/parametre/fichier/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_fichier_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_fichier_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\FichierController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_fichier_show:

        }

        // fr__RG__admin_parametre_type_etat_index
        if ('/admin/parametre/type-etat' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_type_etat_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_type_etat_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_type_etat_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_type_etat_index',);
        }
        not_fr__RG__admin_parametre_type_etat_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_type_etat_index
            if ('/en/admin/parametre/type-etat' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_type_etat_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_type_etat_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_type_etat_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_type_etat_index',);
            }
            not_en__RG__admin_parametre_type_etat_index:

            // es__RG__admin_parametre_type_etat_index
            if ('/es/admin/parametre/type-etat' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_type_etat_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_type_etat_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_type_etat_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_type_etat_index',);
            }
            not_es__RG__admin_parametre_type_etat_index:

        }

        // fr__RG__admin_parametre_type_etat_show
        if (0 === strpos($pathinfo, '/admin/parametre/type-etat') && preg_match('#^/admin/parametre/type\\-etat/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_type_etat_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_type_etat_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_type_etat_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_type_etat_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/type-etat') && preg_match('#^/en/admin/parametre/type\\-etat/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_type_etat_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_type_etat_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_type_etat_show:

            // es__RG__admin_parametre_type_etat_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/type-etat') && preg_match('#^/es/admin/parametre/type\\-etat/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_type_etat_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_type_etat_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_type_etat_show:

        }

        // fr__RG__admin_parametre_type_etat_new
        if ('/admin/parametre/type-etat/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_type_etat_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_type_etat_new',);
        }
        not_fr__RG__admin_parametre_type_etat_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_type_etat_new
            if ('/en/admin/parametre/type-etat/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_type_etat_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_type_etat_new',);
            }
            not_en__RG__admin_parametre_type_etat_new:

            // es__RG__admin_parametre_type_etat_new
            if ('/es/admin/parametre/type-etat/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_type_etat_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_type_etat_new',);
            }
            not_es__RG__admin_parametre_type_etat_new:

        }

        // fr__RG__admin_parametre_type_etat_edit
        if (0 === strpos($pathinfo, '/admin/parametre/type-etat') && preg_match('#^/admin/parametre/type\\-etat/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_type_etat_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_type_etat_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_type_etat_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_type_etat_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/type-etat') && preg_match('#^/en/admin/parametre/type\\-etat/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_type_etat_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_type_etat_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_type_etat_edit:

            // es__RG__admin_parametre_type_etat_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/type-etat') && preg_match('#^/es/admin/parametre/type\\-etat/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_type_etat_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_type_etat_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_type_etat_edit:

        }

        // fr__RG__admin_parametre_type_etat_delete
        if (0 === strpos($pathinfo, '/admin/parametre/type-etat') && preg_match('#^/admin/parametre/type\\-etat/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_type_etat_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_type_etat_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_type_etat_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_type_etat_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/type-etat') && preg_match('#^/en/admin/parametre/type\\-etat/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_type_etat_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_type_etat_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_type_etat_delete:

            // es__RG__admin_parametre_type_etat_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/type-etat') && preg_match('#^/es/admin/parametre/type\\-etat/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_type_etat_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_type_etat_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TypeEtatController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_type_etat_delete:

        }

        // fr__RG__admin_parametre_vaccin_index
        if ('/admin/parametre/vaccin' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_vaccin_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_vaccin_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_vaccin_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_vaccin_index',);
        }
        not_fr__RG__admin_parametre_vaccin_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_vaccin_index
            if ('/en/admin/parametre/vaccin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_vaccin_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_vaccin_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_vaccin_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_vaccin_index',);
            }
            not_en__RG__admin_parametre_vaccin_index:

            // es__RG__admin_parametre_vaccin_index
            if ('/es/admin/parametre/vaccin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_vaccin_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_vaccin_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_vaccin_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_vaccin_index',);
            }
            not_es__RG__admin_parametre_vaccin_index:

        }

        // fr__RG__admin_parametre_vaccin_show
        if (0 === strpos($pathinfo, '/admin/parametre/vaccin') && preg_match('#^/admin/parametre/vaccin/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_vaccin_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_vaccin_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_vaccin_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_vaccin_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/vaccin') && preg_match('#^/en/admin/parametre/vaccin/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_vaccin_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_vaccin_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_vaccin_show:

            // es__RG__admin_parametre_vaccin_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/vaccin') && preg_match('#^/es/admin/parametre/vaccin/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_vaccin_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_vaccin_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_vaccin_show:

        }

        // fr__RG__admin_parametre_vaccin_new
        if ('/admin/parametre/vaccin/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_vaccin_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_vaccin_new',);
        }
        not_fr__RG__admin_parametre_vaccin_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_vaccin_new
            if ('/en/admin/parametre/vaccin/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_vaccin_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_vaccin_new',);
            }
            not_en__RG__admin_parametre_vaccin_new:

            // es__RG__admin_parametre_vaccin_new
            if ('/es/admin/parametre/vaccin/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_vaccin_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_vaccin_new',);
            }
            not_es__RG__admin_parametre_vaccin_new:

        }

        // fr__RG__admin_parametre_vaccin_edit
        if (0 === strpos($pathinfo, '/admin/parametre/vaccin') && preg_match('#^/admin/parametre/vaccin/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_vaccin_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_vaccin_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_vaccin_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_vaccin_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/vaccin') && preg_match('#^/en/admin/parametre/vaccin/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_vaccin_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_vaccin_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_vaccin_edit:

            // es__RG__admin_parametre_vaccin_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/vaccin') && preg_match('#^/es/admin/parametre/vaccin/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_vaccin_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_vaccin_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_vaccin_edit:

        }

        // fr__RG__admin_parametre_vaccin_delete
        if (0 === strpos($pathinfo, '/admin/parametre/vaccin') && preg_match('#^/admin/parametre/vaccin/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_vaccin_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_vaccin_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_vaccin_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_vaccin_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/vaccin') && preg_match('#^/en/admin/parametre/vaccin/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_vaccin_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_vaccin_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_vaccin_delete:

            // es__RG__admin_parametre_vaccin_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/vaccin') && preg_match('#^/es/admin/parametre/vaccin/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_vaccin_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_vaccin_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VaccinController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_vaccin_delete:

        }

        // fr__RG__admin_parametre_assurance_index
        if ('/admin/parametre/assurance' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_assurance_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_assurance_index');
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_assurance_index',);
        }
        not_fr__RG__admin_parametre_assurance_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_assurance_index
            if ('/en/admin/parametre/assurance' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_assurance_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_assurance_index');
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_assurance_index',);
            }
            not_en__RG__admin_parametre_assurance_index:

            // es__RG__admin_parametre_assurance_index
            if ('/es/admin/parametre/assurance' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_assurance_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_assurance_index');
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_assurance_index',);
            }
            not_es__RG__admin_parametre_assurance_index:

        }

        // fr__RG__admin_parametre_assurance_show
        if (0 === strpos($pathinfo, '/admin/parametre/assurance') && preg_match('#^/admin/parametre/assurance/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_assurance_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_assurance_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_assurance_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_assurance_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/assurance') && preg_match('#^/en/admin/parametre/assurance/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_assurance_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_assurance_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_assurance_show:

            // es__RG__admin_parametre_assurance_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/assurance') && preg_match('#^/es/admin/parametre/assurance/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_assurance_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_assurance_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_assurance_show:

        }

        // fr__RG__admin_parametre_assurance_new
        if ('/admin/parametre/assurance/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_assurance_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_assurance_new',);
        }
        not_fr__RG__admin_parametre_assurance_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_assurance_new
            if ('/en/admin/parametre/assurance/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_assurance_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_assurance_new',);
            }
            not_en__RG__admin_parametre_assurance_new:

            // es__RG__admin_parametre_assurance_new
            if ('/es/admin/parametre/assurance/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_assurance_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_assurance_new',);
            }
            not_es__RG__admin_parametre_assurance_new:

        }

        // fr__RG__admin_parametre_assurance_edit
        if (0 === strpos($pathinfo, '/admin/parametre/assurance') && preg_match('#^/admin/parametre/assurance/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_assurance_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_assurance_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_assurance_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_assurance_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/assurance') && preg_match('#^/en/admin/parametre/assurance/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_assurance_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_assurance_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_assurance_edit:

            // es__RG__admin_parametre_assurance_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/assurance') && preg_match('#^/es/admin/parametre/assurance/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_assurance_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_assurance_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_assurance_edit:

        }

        // fr__RG__admin_parametre_assurance_delete
        if (0 === strpos($pathinfo, '/admin/parametre/assurance') && preg_match('#^/admin/parametre/assurance/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_assurance_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_assurance_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_assurance_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_assurance_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/assurance') && preg_match('#^/en/admin/parametre/assurance/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_assurance_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_assurance_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_assurance_delete:

            // es__RG__admin_parametre_assurance_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/assurance') && preg_match('#^/es/admin/parametre/assurance/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_assurance_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_assurance_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AssuranceController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_assurance_delete:

        }

        // fr__RG__admin_parametre_specialite_index
        if ('/admin/parametre/specialite' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_specialite_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_specialite_index');
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_specialite_index',);
        }
        not_fr__RG__admin_parametre_specialite_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_specialite_index
            if ('/en/admin/parametre/specialite' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_specialite_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_specialite_index');
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_specialite_index',);
            }
            not_en__RG__admin_parametre_specialite_index:

            // es__RG__admin_parametre_specialite_index
            if ('/es/admin/parametre/specialite' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_specialite_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_specialite_index');
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_specialite_index',);
            }
            not_es__RG__admin_parametre_specialite_index:

        }

        // fr__RG__admin_parametre_specialite_liste
        if ('/admin/parametre/specialite/liste' === $pathinfo) {
            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::listeAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_specialite_liste',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_specialite_liste
            if ('/en/admin/parametre/specialite/liste' === $pathinfo) {
                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::listeAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_specialite_liste',);
            }

            // es__RG__admin_parametre_specialite_liste
            if ('/es/admin/parametre/specialite/liste' === $pathinfo) {
                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::listeAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_specialite_liste',);
            }

        }

        // fr__RG__admin_parametre_specialite_medecin
        if ('/admin/parametre/specialite/medecins' === $pathinfo) {
            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::medecinAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_specialite_medecin',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_specialite_medecin
            if ('/en/admin/parametre/specialite/medecins' === $pathinfo) {
                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::medecinAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_specialite_medecin',);
            }

            // es__RG__admin_parametre_specialite_medecin
            if ('/es/admin/parametre/specialite/medecins' === $pathinfo) {
                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::medecinAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_specialite_medecin',);
            }

        }

        // fr__RG__admin_parametre_specialite_show
        if (0 === strpos($pathinfo, '/admin/parametre/specialite') && preg_match('#^/admin/parametre/specialite/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_specialite_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_specialite_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_specialite_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_specialite_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/specialite') && preg_match('#^/en/admin/parametre/specialite/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_specialite_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_specialite_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_specialite_show:

            // es__RG__admin_parametre_specialite_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/specialite') && preg_match('#^/es/admin/parametre/specialite/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_specialite_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_specialite_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_specialite_show:

        }

        // fr__RG__admin_parametre_specialite_new
        if ('/admin/parametre/specialite/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_specialite_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_specialite_new',);
        }
        not_fr__RG__admin_parametre_specialite_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_specialite_new
            if ('/en/admin/parametre/specialite/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_specialite_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_specialite_new',);
            }
            not_en__RG__admin_parametre_specialite_new:

            // es__RG__admin_parametre_specialite_new
            if ('/es/admin/parametre/specialite/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_specialite_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_specialite_new',);
            }
            not_es__RG__admin_parametre_specialite_new:

        }

        // fr__RG__admin_parametre_specialite_edit
        if (0 === strpos($pathinfo, '/admin/parametre/specialite') && preg_match('#^/admin/parametre/specialite/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_specialite_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_specialite_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_specialite_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_specialite_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/specialite') && preg_match('#^/en/admin/parametre/specialite/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_specialite_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_specialite_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_specialite_edit:

            // es__RG__admin_parametre_specialite_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/specialite') && preg_match('#^/es/admin/parametre/specialite/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_specialite_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_specialite_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_specialite_edit:

        }

        // fr__RG__admin_parametre_specialite_delete
        if (0 === strpos($pathinfo, '/admin/parametre/specialite') && preg_match('#^/admin/parametre/specialite/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_specialite_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_specialite_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_specialite_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_specialite_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/specialite') && preg_match('#^/en/admin/parametre/specialite/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_specialite_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_specialite_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_specialite_delete:

            // es__RG__admin_parametre_specialite_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/specialite') && preg_match('#^/es/admin/parametre/specialite/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_specialite_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_specialite_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\SpecialiteController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_specialite_delete:

        }

        // fr__RG__admin_parametre_religion_index
        if ('/admin/parametre/religion' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_religion_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_religion_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_religion_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_religion_index',);
        }
        not_fr__RG__admin_parametre_religion_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_religion_index
            if ('/en/admin/parametre/religion' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_religion_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_religion_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_religion_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_religion_index',);
            }
            not_en__RG__admin_parametre_religion_index:

            // es__RG__admin_parametre_religion_index
            if ('/es/admin/parametre/religion' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_religion_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_religion_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_religion_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_religion_index',);
            }
            not_es__RG__admin_parametre_religion_index:

        }

        // fr__RG__admin_parametre_religion_show
        if (0 === strpos($pathinfo, '/admin/parametre/religion') && preg_match('#^/admin/parametre/religion/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_religion_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_religion_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_religion_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_religion_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/religion') && preg_match('#^/en/admin/parametre/religion/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_religion_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_religion_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_religion_show:

            // es__RG__admin_parametre_religion_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/religion') && preg_match('#^/es/admin/parametre/religion/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_religion_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_religion_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_religion_show:

        }

        // fr__RG__admin_parametre_religion_new
        if ('/admin/parametre/religion/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_religion_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_religion_new',);
        }
        not_fr__RG__admin_parametre_religion_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_religion_new
            if ('/en/admin/parametre/religion/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_religion_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_religion_new',);
            }
            not_en__RG__admin_parametre_religion_new:

            // es__RG__admin_parametre_religion_new
            if ('/es/admin/parametre/religion/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_religion_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_religion_new',);
            }
            not_es__RG__admin_parametre_religion_new:

        }

        // fr__RG__admin_parametre_religion_edit
        if (0 === strpos($pathinfo, '/admin/parametre/religion') && preg_match('#^/admin/parametre/religion/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_religion_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_religion_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_religion_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_religion_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/religion') && preg_match('#^/en/admin/parametre/religion/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_religion_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_religion_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_religion_edit:

            // es__RG__admin_parametre_religion_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/religion') && preg_match('#^/es/admin/parametre/religion/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_religion_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_religion_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_religion_edit:

        }

        // fr__RG__admin_parametre_religion_delete
        if (0 === strpos($pathinfo, '/admin/parametre/religion') && preg_match('#^/admin/parametre/religion/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_religion_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_religion_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_religion_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_religion_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/religion') && preg_match('#^/en/admin/parametre/religion/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_religion_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_religion_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_religion_delete:

            // es__RG__admin_parametre_religion_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/religion') && preg_match('#^/es/admin/parametre/religion/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_religion_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_religion_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ReligionController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_religion_delete:

        }

        // fr__RG__admin_parametre_pays_index
        if ('/admin/parametre/pays' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_pays_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_pays_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_pays_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_pays_index',);
        }
        not_fr__RG__admin_parametre_pays_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_pays_index
            if ('/en/admin/parametre/pays' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_pays_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_pays_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_pays_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_pays_index',);
            }
            not_en__RG__admin_parametre_pays_index:

            // es__RG__admin_parametre_pays_index
            if ('/es/admin/parametre/pays' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_pays_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_pays_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_pays_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_pays_index',);
            }
            not_es__RG__admin_parametre_pays_index:

        }

        // fr__RG__admin_parametre_pays_show
        if (0 === strpos($pathinfo, '/admin/parametre/pays') && preg_match('#^/admin/parametre/pays/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_pays_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_pays_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_pays_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_pays_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/pays') && preg_match('#^/en/admin/parametre/pays/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_pays_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_pays_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_pays_show:

            // es__RG__admin_parametre_pays_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/pays') && preg_match('#^/es/admin/parametre/pays/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_pays_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_pays_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_pays_show:

        }

        // fr__RG__admin_parametre_pays_new
        if ('/admin/parametre/pays/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_pays_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_pays_new',);
        }
        not_fr__RG__admin_parametre_pays_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_pays_new
            if ('/en/admin/parametre/pays/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_pays_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_pays_new',);
            }
            not_en__RG__admin_parametre_pays_new:

            // es__RG__admin_parametre_pays_new
            if ('/es/admin/parametre/pays/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_pays_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_pays_new',);
            }
            not_es__RG__admin_parametre_pays_new:

        }

        // fr__RG__admin_parametre_pays_ville
        if ('/admin/parametre/pays/ville' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_pays_ville;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::villeAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_pays_ville',);
        }
        not_fr__RG__admin_parametre_pays_ville:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_pays_ville
            if ('/en/admin/parametre/pays/ville' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_pays_ville;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::villeAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_pays_ville',);
            }
            not_en__RG__admin_parametre_pays_ville:

            // es__RG__admin_parametre_pays_ville
            if ('/es/admin/parametre/pays/ville' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_pays_ville;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::villeAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_pays_ville',);
            }
            not_es__RG__admin_parametre_pays_ville:

        }

        // fr__RG__admin_parametre_pays_import
        if ('/admin/parametre/pays/import' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_pays_import;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::importAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_pays_import',);
        }
        not_fr__RG__admin_parametre_pays_import:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_pays_import
            if ('/en/admin/parametre/pays/import' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_pays_import;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::importAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_pays_import',);
            }
            not_en__RG__admin_parametre_pays_import:

            // es__RG__admin_parametre_pays_import
            if ('/es/admin/parametre/pays/import' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_pays_import;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::importAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_pays_import',);
            }
            not_es__RG__admin_parametre_pays_import:

        }

        // fr__RG__admin_parametre_pays_edit
        if (0 === strpos($pathinfo, '/admin/parametre/pays') && preg_match('#^/admin/parametre/pays/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_pays_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_pays_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_pays_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_pays_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/pays') && preg_match('#^/en/admin/parametre/pays/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_pays_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_pays_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_pays_edit:

            // es__RG__admin_parametre_pays_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/pays') && preg_match('#^/es/admin/parametre/pays/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_pays_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_pays_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_pays_edit:

        }

        // fr__RG__admin_parametre_pays_delete
        if (0 === strpos($pathinfo, '/admin/parametre/pays') && preg_match('#^/admin/parametre/pays/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_pays_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_pays_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_pays_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_pays_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/pays') && preg_match('#^/en/admin/parametre/pays/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_pays_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_pays_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_pays_delete:

            // es__RG__admin_parametre_pays_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/pays') && preg_match('#^/es/admin/parametre/pays/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_pays_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_pays_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PaysController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_pays_delete:

        }

        // fr__RG__admin_parametre_hopital_index
        if ('/admin/parametre/hopital' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_hopital_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_hopital_index');
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_hopital_index',);
        }
        not_fr__RG__admin_parametre_hopital_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_hopital_index
            if ('/en/admin/parametre/hopital' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_hopital_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_hopital_index');
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_hopital_index',);
            }
            not_en__RG__admin_parametre_hopital_index:

            // es__RG__admin_parametre_hopital_index
            if ('/es/admin/parametre/hopital' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_hopital_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_hopital_index');
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_hopital_index',);
            }
            not_es__RG__admin_parametre_hopital_index:

        }

        // fr__RG__admin_parametre_hopital_show
        if (0 === strpos($pathinfo, '/admin/parametre/hopital') && preg_match('#^/admin/parametre/hopital/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_hopital_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_hopital_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_hopital_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_hopital_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/hopital') && preg_match('#^/en/admin/parametre/hopital/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_hopital_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_hopital_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_hopital_show:

            // es__RG__admin_parametre_hopital_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/hopital') && preg_match('#^/es/admin/parametre/hopital/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_hopital_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_hopital_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_hopital_show:

        }

        // fr__RG__admin_parametre_hopital_new
        if ('/admin/parametre/hopital/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_hopital_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_hopital_new',);
        }
        not_fr__RG__admin_parametre_hopital_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_hopital_new
            if ('/en/admin/parametre/hopital/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_hopital_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_hopital_new',);
            }
            not_en__RG__admin_parametre_hopital_new:

            // es__RG__admin_parametre_hopital_new
            if ('/es/admin/parametre/hopital/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_hopital_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_hopital_new',);
            }
            not_es__RG__admin_parametre_hopital_new:

        }

        // fr__RG__admin_parametre_hopital_edit
        if (0 === strpos($pathinfo, '/admin/parametre/hopital') && preg_match('#^/admin/parametre/hopital/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_hopital_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_hopital_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_hopital_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_hopital_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/hopital') && preg_match('#^/en/admin/parametre/hopital/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_hopital_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_hopital_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_hopital_edit:

            // es__RG__admin_parametre_hopital_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/hopital') && preg_match('#^/es/admin/parametre/hopital/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_hopital_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_hopital_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_hopital_edit:

        }

        // fr__RG__admin_parametre_hopital_delete
        if (0 === strpos($pathinfo, '/admin/parametre/hopital') && preg_match('#^/admin/parametre/hopital/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_hopital_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_hopital_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_hopital_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_hopital_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/hopital') && preg_match('#^/en/admin/parametre/hopital/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_hopital_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_hopital_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_hopital_delete:

            // es__RG__admin_parametre_hopital_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/hopital') && preg_match('#^/es/admin/parametre/hopital/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_hopital_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_hopital_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\HopitalController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_hopital_delete:

        }

        // fr__RG__admin_parametre_nationalite_index
        if ('/admin/parametre/nationalite' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_nationalite_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_nationalite_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_nationalite_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_nationalite_index',);
        }
        not_fr__RG__admin_parametre_nationalite_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_nationalite_index
            if ('/en/admin/parametre/nationalite' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_nationalite_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_nationalite_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_nationalite_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_nationalite_index',);
            }
            not_en__RG__admin_parametre_nationalite_index:

            // es__RG__admin_parametre_nationalite_index
            if ('/es/admin/parametre/nationalite' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_nationalite_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_nationalite_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_nationalite_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_nationalite_index',);
            }
            not_es__RG__admin_parametre_nationalite_index:

        }

        // fr__RG__admin_parametre_nationalite_show
        if (0 === strpos($pathinfo, '/admin/parametre/nationalite') && preg_match('#^/admin/parametre/nationalite/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_nationalite_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_nationalite_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_nationalite_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_nationalite_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/nationalite') && preg_match('#^/en/admin/parametre/nationalite/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_nationalite_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_nationalite_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_nationalite_show:

            // es__RG__admin_parametre_nationalite_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/nationalite') && preg_match('#^/es/admin/parametre/nationalite/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_nationalite_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_nationalite_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_nationalite_show:

        }

        // fr__RG__admin_parametre_nationalite_new
        if ('/admin/parametre/nationalite/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_nationalite_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_nationalite_new',);
        }
        not_fr__RG__admin_parametre_nationalite_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_nationalite_new
            if ('/en/admin/parametre/nationalite/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_nationalite_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_nationalite_new',);
            }
            not_en__RG__admin_parametre_nationalite_new:

            // es__RG__admin_parametre_nationalite_new
            if ('/es/admin/parametre/nationalite/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_nationalite_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_nationalite_new',);
            }
            not_es__RG__admin_parametre_nationalite_new:

        }

        // fr__RG__admin_parametre_nationalite_edit
        if (0 === strpos($pathinfo, '/admin/parametre/nationalite') && preg_match('#^/admin/parametre/nationalite/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_nationalite_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_nationalite_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_nationalite_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_nationalite_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/nationalite') && preg_match('#^/en/admin/parametre/nationalite/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_nationalite_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_nationalite_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_nationalite_edit:

            // es__RG__admin_parametre_nationalite_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/nationalite') && preg_match('#^/es/admin/parametre/nationalite/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_nationalite_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_nationalite_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_nationalite_edit:

        }

        // fr__RG__admin_parametre_nationalite_delete
        if (0 === strpos($pathinfo, '/admin/parametre/nationalite') && preg_match('#^/admin/parametre/nationalite/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_nationalite_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_nationalite_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_nationalite_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_nationalite_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/nationalite') && preg_match('#^/en/admin/parametre/nationalite/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_nationalite_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_nationalite_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_nationalite_delete:

            // es__RG__admin_parametre_nationalite_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/nationalite') && preg_match('#^/es/admin/parametre/nationalite/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_nationalite_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_nationalite_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\NationaliteController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_nationalite_delete:

        }

        // fr__RG__admin_parametre_telephone_index
        if ('/admin/parametre/telephone' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_telephone_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_telephone_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_telephone_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_telephone_index',);
        }
        not_fr__RG__admin_parametre_telephone_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_telephone_index
            if ('/en/admin/parametre/telephone' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_telephone_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_telephone_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_telephone_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_telephone_index',);
            }
            not_en__RG__admin_parametre_telephone_index:

            // es__RG__admin_parametre_telephone_index
            if ('/es/admin/parametre/telephone' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_telephone_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_telephone_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_telephone_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_telephone_index',);
            }
            not_es__RG__admin_parametre_telephone_index:

        }

        // fr__RG__admin_parametre_telephone_show
        if (0 === strpos($pathinfo, '/admin/parametre/telephone') && preg_match('#^/admin/parametre/telephone/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_telephone_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_telephone_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_telephone_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_telephone_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/telephone') && preg_match('#^/en/admin/parametre/telephone/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_telephone_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_telephone_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_telephone_show:

            // es__RG__admin_parametre_telephone_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/telephone') && preg_match('#^/es/admin/parametre/telephone/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_telephone_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_telephone_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_telephone_show:

        }

        // fr__RG__admin_parametre_telephone_new
        if ('/admin/parametre/telephone/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_telephone_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_telephone_new',);
        }
        not_fr__RG__admin_parametre_telephone_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_telephone_new
            if ('/en/admin/parametre/telephone/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_telephone_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_telephone_new',);
            }
            not_en__RG__admin_parametre_telephone_new:

            // es__RG__admin_parametre_telephone_new
            if ('/es/admin/parametre/telephone/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_telephone_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_telephone_new',);
            }
            not_es__RG__admin_parametre_telephone_new:

        }

        // fr__RG__admin_parametre_telephone_edit
        if (0 === strpos($pathinfo, '/admin/parametre/telephone') && preg_match('#^/admin/parametre/telephone/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_telephone_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_telephone_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_telephone_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_telephone_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/telephone') && preg_match('#^/en/admin/parametre/telephone/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_telephone_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_telephone_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_telephone_edit:

            // es__RG__admin_parametre_telephone_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/telephone') && preg_match('#^/es/admin/parametre/telephone/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_telephone_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_telephone_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_telephone_edit:

        }

        // fr__RG__admin_parametre_telephone_delete
        if (0 === strpos($pathinfo, '/admin/parametre/telephone') && preg_match('#^/admin/parametre/telephone/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_telephone_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_telephone_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_telephone_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_telephone_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/telephone') && preg_match('#^/en/admin/parametre/telephone/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_telephone_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_telephone_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_telephone_delete:

            // es__RG__admin_parametre_telephone_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/telephone') && preg_match('#^/es/admin/parametre/telephone/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_telephone_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_telephone_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\TelephoneController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_telephone_delete:

        }

        // fr__RG__admin_parametre_region_index
        if ('/admin/parametre/region' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_region_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_region_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_region_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_region_index',);
        }
        not_fr__RG__admin_parametre_region_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_region_index
            if ('/en/admin/parametre/region' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_region_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_region_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_region_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_region_index',);
            }
            not_en__RG__admin_parametre_region_index:

            // es__RG__admin_parametre_region_index
            if ('/es/admin/parametre/region' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_region_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_region_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_region_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_region_index',);
            }
            not_es__RG__admin_parametre_region_index:

        }

        // fr__RG__admin_parametre_region_show
        if (0 === strpos($pathinfo, '/admin/parametre/region') && preg_match('#^/admin/parametre/region/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_region_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_region_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_region_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_region_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/region') && preg_match('#^/en/admin/parametre/region/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_region_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_region_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_region_show:

            // es__RG__admin_parametre_region_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/region') && preg_match('#^/es/admin/parametre/region/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_region_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_region_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_region_show:

        }

        // fr__RG__admin_parametre_region_new
        if ('/admin/parametre/region/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_region_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_region_new',);
        }
        not_fr__RG__admin_parametre_region_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_region_new
            if ('/en/admin/parametre/region/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_region_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_region_new',);
            }
            not_en__RG__admin_parametre_region_new:

            // es__RG__admin_parametre_region_new
            if ('/es/admin/parametre/region/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_region_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_region_new',);
            }
            not_es__RG__admin_parametre_region_new:

        }

        // fr__RG__admin_parametre_region_edit
        if (0 === strpos($pathinfo, '/admin/parametre/region') && preg_match('#^/admin/parametre/region/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_region_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_region_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_region_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_region_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/region') && preg_match('#^/en/admin/parametre/region/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_region_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_region_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_region_edit:

            // es__RG__admin_parametre_region_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/region') && preg_match('#^/es/admin/parametre/region/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_region_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_region_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_region_edit:

        }

        // fr__RG__admin_parametre_region_delete
        if (0 === strpos($pathinfo, '/admin/parametre/region') && preg_match('#^/admin/parametre/region/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_region_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_region_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_region_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_region_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/region') && preg_match('#^/en/admin/parametre/region/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_region_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_region_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_region_delete:

            // es__RG__admin_parametre_region_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/region') && preg_match('#^/es/admin/parametre/region/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_region_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_region_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\RegionController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_region_delete:

        }

        // fr__RG__admin_parametre_attribut_index
        if ('/admin/parametre/attribut' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_attribut_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_attribut_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_attribut_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_attribut_index',);
        }
        not_fr__RG__admin_parametre_attribut_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_attribut_index
            if ('/en/admin/parametre/attribut' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_attribut_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_attribut_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_attribut_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_attribut_index',);
            }
            not_en__RG__admin_parametre_attribut_index:

            // es__RG__admin_parametre_attribut_index
            if ('/es/admin/parametre/attribut' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_attribut_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_attribut_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_attribut_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_attribut_index',);
            }
            not_es__RG__admin_parametre_attribut_index:

        }

        // fr__RG__admin_parametre_attribut_show
        if (0 === strpos($pathinfo, '/admin/parametre/attribut') && preg_match('#^/admin/parametre/attribut/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_attribut_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_attribut_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_attribut_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_attribut_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/attribut') && preg_match('#^/en/admin/parametre/attribut/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_attribut_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_attribut_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_attribut_show:

            // es__RG__admin_parametre_attribut_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/attribut') && preg_match('#^/es/admin/parametre/attribut/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_attribut_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_attribut_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_attribut_show:

        }

        // fr__RG__admin_parametre_attribut_new
        if ('/admin/parametre/attribut/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_attribut_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_attribut_new',);
        }
        not_fr__RG__admin_parametre_attribut_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_attribut_new
            if ('/en/admin/parametre/attribut/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_attribut_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_attribut_new',);
            }
            not_en__RG__admin_parametre_attribut_new:

            // es__RG__admin_parametre_attribut_new
            if ('/es/admin/parametre/attribut/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_attribut_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_attribut_new',);
            }
            not_es__RG__admin_parametre_attribut_new:

        }

        // fr__RG__admin_parametre_attribut_edit
        if (0 === strpos($pathinfo, '/admin/parametre/attribut') && preg_match('#^/admin/parametre/attribut/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_attribut_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_attribut_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_attribut_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_attribut_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/attribut') && preg_match('#^/en/admin/parametre/attribut/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_attribut_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_attribut_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_attribut_edit:

            // es__RG__admin_parametre_attribut_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/attribut') && preg_match('#^/es/admin/parametre/attribut/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_attribut_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_attribut_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_attribut_edit:

        }

        // fr__RG__admin_parametre_attribut_delete
        if (0 === strpos($pathinfo, '/admin/parametre/attribut') && preg_match('#^/admin/parametre/attribut/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_attribut_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_attribut_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_attribut_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_attribut_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/attribut') && preg_match('#^/en/admin/parametre/attribut/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_attribut_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_attribut_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_attribut_delete:

            // es__RG__admin_parametre_attribut_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/attribut') && preg_match('#^/es/admin/parametre/attribut/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_attribut_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_attribut_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AttributController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_attribut_delete:

        }

        // fr__RG__admin_parametre_ville_index
        if ('/admin/parametre/ville' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_ville_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_ville_index');
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_ville_index',);
        }
        not_fr__RG__admin_parametre_ville_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_ville_index
            if ('/en/admin/parametre/ville' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_ville_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_ville_index');
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_ville_index',);
            }
            not_en__RG__admin_parametre_ville_index:

            // es__RG__admin_parametre_ville_index
            if ('/es/admin/parametre/ville' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_ville_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_ville_index');
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_ville_index',);
            }
            not_es__RG__admin_parametre_ville_index:

        }

        // fr__RG__admin_parametre_ville_show
        if (0 === strpos($pathinfo, '/admin/parametre/ville') && preg_match('#^/admin/parametre/ville/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_ville_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_ville_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_ville_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_ville_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/ville') && preg_match('#^/en/admin/parametre/ville/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_ville_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_ville_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_ville_show:

            // es__RG__admin_parametre_ville_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/ville') && preg_match('#^/es/admin/parametre/ville/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_ville_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_ville_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_ville_show:

        }

        // fr__RG__admin_parametre_ville_new
        if ('/admin/parametre/ville/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_ville_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_ville_new',);
        }
        not_fr__RG__admin_parametre_ville_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_ville_new
            if ('/en/admin/parametre/ville/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_ville_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_ville_new',);
            }
            not_en__RG__admin_parametre_ville_new:

            // es__RG__admin_parametre_ville_new
            if ('/es/admin/parametre/ville/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_ville_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_ville_new',);
            }
            not_es__RG__admin_parametre_ville_new:

        }

        // fr__RG__admin_parametre_ville_edit
        if (0 === strpos($pathinfo, '/admin/parametre/ville') && preg_match('#^/admin/parametre/ville/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_ville_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_ville_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_ville_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_ville_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/ville') && preg_match('#^/en/admin/parametre/ville/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_ville_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_ville_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_ville_edit:

            // es__RG__admin_parametre_ville_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/ville') && preg_match('#^/es/admin/parametre/ville/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_ville_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_ville_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_ville_edit:

        }

        // fr__RG__admin_parametre_ville_delete
        if (0 === strpos($pathinfo, '/admin/parametre/ville') && preg_match('#^/admin/parametre/ville/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_ville_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_ville_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_ville_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_ville_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/ville') && preg_match('#^/en/admin/parametre/ville/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_ville_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_ville_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_ville_delete:

            // es__RG__admin_parametre_ville_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/ville') && preg_match('#^/es/admin/parametre/ville/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_ville_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_ville_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\VilleController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_ville_delete:

        }

        // fr__RG__admin_parametre_groupesanguin_index
        if ('/admin/parametre/groupesanguin' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_groupesanguin_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_groupesanguin_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_groupesanguin_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_groupesanguin_index',);
        }
        not_fr__RG__admin_parametre_groupesanguin_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_groupesanguin_index
            if ('/en/admin/parametre/groupesanguin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_groupesanguin_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_groupesanguin_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_groupesanguin_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_groupesanguin_index',);
            }
            not_en__RG__admin_parametre_groupesanguin_index:

            // es__RG__admin_parametre_groupesanguin_index
            if ('/es/admin/parametre/groupesanguin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_groupesanguin_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_groupesanguin_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_groupesanguin_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_groupesanguin_index',);
            }
            not_es__RG__admin_parametre_groupesanguin_index:

        }

        // fr__RG__admin_parametre_groupesanguin_show
        if (0 === strpos($pathinfo, '/admin/parametre/groupesanguin') && preg_match('#^/admin/parametre/groupesanguin/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_groupesanguin_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_groupesanguin_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_groupesanguin_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_groupesanguin_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/groupesanguin') && preg_match('#^/en/admin/parametre/groupesanguin/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_groupesanguin_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_groupesanguin_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_groupesanguin_show:

            // es__RG__admin_parametre_groupesanguin_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/groupesanguin') && preg_match('#^/es/admin/parametre/groupesanguin/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_groupesanguin_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_groupesanguin_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_groupesanguin_show:

        }

        // fr__RG__admin_parametre_groupesanguin_new
        if ('/admin/parametre/groupesanguin/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_groupesanguin_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_groupesanguin_new',);
        }
        not_fr__RG__admin_parametre_groupesanguin_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_groupesanguin_new
            if ('/en/admin/parametre/groupesanguin/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_groupesanguin_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_groupesanguin_new',);
            }
            not_en__RG__admin_parametre_groupesanguin_new:

            // es__RG__admin_parametre_groupesanguin_new
            if ('/es/admin/parametre/groupesanguin/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_groupesanguin_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_groupesanguin_new',);
            }
            not_es__RG__admin_parametre_groupesanguin_new:

        }

        // fr__RG__admin_parametre_groupesanguin_edit
        if (0 === strpos($pathinfo, '/admin/parametre/groupesanguin') && preg_match('#^/admin/parametre/groupesanguin/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_groupesanguin_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_groupesanguin_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_groupesanguin_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_groupesanguin_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/groupesanguin') && preg_match('#^/en/admin/parametre/groupesanguin/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_groupesanguin_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_groupesanguin_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_groupesanguin_edit:

            // es__RG__admin_parametre_groupesanguin_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/groupesanguin') && preg_match('#^/es/admin/parametre/groupesanguin/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_groupesanguin_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_groupesanguin_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_groupesanguin_edit:

        }

        // fr__RG__admin_parametre_groupesanguin_delete
        if (0 === strpos($pathinfo, '/admin/parametre/groupesanguin') && preg_match('#^/admin/parametre/groupesanguin/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_groupesanguin_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_groupesanguin_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_groupesanguin_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_groupesanguin_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/groupesanguin') && preg_match('#^/en/admin/parametre/groupesanguin/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_groupesanguin_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_groupesanguin_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_groupesanguin_delete:

            // es__RG__admin_parametre_groupesanguin_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/groupesanguin') && preg_match('#^/es/admin/parametre/groupesanguin/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_groupesanguin_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_groupesanguin_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\GroupeSanguinController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_groupesanguin_delete:

        }

        // fr__RG__admin_parametre_medicament_index
        if ('/admin/parametre/medicament' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_medicament_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_medicament_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_medicament_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_medicament_index',);
        }
        not_fr__RG__admin_parametre_medicament_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_medicament_index
            if ('/en/admin/parametre/medicament' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_medicament_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_medicament_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_medicament_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_medicament_index',);
            }
            not_en__RG__admin_parametre_medicament_index:

            // es__RG__admin_parametre_medicament_index
            if ('/es/admin/parametre/medicament' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_medicament_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_medicament_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_medicament_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_medicament_index',);
            }
            not_es__RG__admin_parametre_medicament_index:

        }

        // fr__RG__admin_parametre_medicament_show
        if (0 === strpos($pathinfo, '/admin/parametre/medicament') && preg_match('#^/admin/parametre/medicament/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_medicament_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_medicament_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_medicament_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_medicament_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/medicament') && preg_match('#^/en/admin/parametre/medicament/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_medicament_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_medicament_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_medicament_show:

            // es__RG__admin_parametre_medicament_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/medicament') && preg_match('#^/es/admin/parametre/medicament/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_medicament_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_medicament_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_medicament_show:

        }

        // fr__RG__admin_parametre_medicament_new
        if ('/admin/parametre/medicament/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_medicament_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_medicament_new',);
        }
        not_fr__RG__admin_parametre_medicament_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_medicament_new
            if ('/en/admin/parametre/medicament/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_medicament_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_medicament_new',);
            }
            not_en__RG__admin_parametre_medicament_new:

            // es__RG__admin_parametre_medicament_new
            if ('/es/admin/parametre/medicament/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_medicament_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_medicament_new',);
            }
            not_es__RG__admin_parametre_medicament_new:

        }

        // fr__RG__admin_parametre_medicament_edit
        if (0 === strpos($pathinfo, '/admin/parametre/medicament') && preg_match('#^/admin/parametre/medicament/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_medicament_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_medicament_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_medicament_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_medicament_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/medicament') && preg_match('#^/en/admin/parametre/medicament/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_medicament_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_medicament_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_medicament_edit:

            // es__RG__admin_parametre_medicament_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/medicament') && preg_match('#^/es/admin/parametre/medicament/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_medicament_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_medicament_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_medicament_edit:

        }

        // fr__RG__admin_parametre_medicament_delete
        if (0 === strpos($pathinfo, '/admin/parametre/medicament') && preg_match('#^/admin/parametre/medicament/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_medicament_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_medicament_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_medicament_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_medicament_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/medicament') && preg_match('#^/en/admin/parametre/medicament/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_medicament_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_medicament_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_medicament_delete:

            // es__RG__admin_parametre_medicament_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/medicament') && preg_match('#^/es/admin/parametre/medicament/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_medicament_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_medicament_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\MedicamentController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_medicament_delete:

        }

        // fr__RG__admin_parametre_image_index
        if ('/admin/parametre/image' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_image_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_image_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_image_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_image_index',);
        }
        not_fr__RG__admin_parametre_image_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_image_index
            if ('/en/admin/parametre/image' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_image_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_image_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_image_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_image_index',);
            }
            not_en__RG__admin_parametre_image_index:

            // es__RG__admin_parametre_image_index
            if ('/es/admin/parametre/image' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_image_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_image_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_image_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_image_index',);
            }
            not_es__RG__admin_parametre_image_index:

        }

        // fr__RG__admin_parametre_image_show
        if (0 === strpos($pathinfo, '/admin/parametre/image') && preg_match('#^/admin/parametre/image/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_image_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_image_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_image_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_image_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/image') && preg_match('#^/en/admin/parametre/image/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_image_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_image_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_image_show:

            // es__RG__admin_parametre_image_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/image') && preg_match('#^/es/admin/parametre/image/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_image_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_image_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_image_show:

        }

        // fr__RG__admin_parametre_image_new
        if ('/admin/parametre/image/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_image_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_image_new',);
        }
        not_fr__RG__admin_parametre_image_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_image_new
            if ('/en/admin/parametre/image/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_image_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_image_new',);
            }
            not_en__RG__admin_parametre_image_new:

            // es__RG__admin_parametre_image_new
            if ('/es/admin/parametre/image/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_image_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_image_new',);
            }
            not_es__RG__admin_parametre_image_new:

        }

        // fr__RG__admin_parametre_image_edit
        if (0 === strpos($pathinfo, '/admin/parametre/image') && preg_match('#^/admin/parametre/image/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_image_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_image_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_image_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_image_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/image') && preg_match('#^/en/admin/parametre/image/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_image_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_image_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_image_edit:

            // es__RG__admin_parametre_image_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/image') && preg_match('#^/es/admin/parametre/image/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_image_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_image_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_image_edit:

        }

        // fr__RG__admin_parametre_image_delete
        if (0 === strpos($pathinfo, '/admin/parametre/image') && preg_match('#^/admin/parametre/image/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_image_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_image_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_image_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_image_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/image') && preg_match('#^/en/admin/parametre/image/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_image_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_image_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_image_delete:

            // es__RG__admin_parametre_image_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/image') && preg_match('#^/es/admin/parametre/image/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_image_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_image_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\ImageController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_image_delete:

        }

        // fr__RG__admin_parametre_ligneassurance_index
        if ('/admin/parametre/ligneassurance' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_ligneassurance_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_ligneassurance_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_ligneassurance_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_ligneassurance_index',);
        }
        not_fr__RG__admin_parametre_ligneassurance_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_ligneassurance_index
            if ('/en/admin/parametre/ligneassurance' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_ligneassurance_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_ligneassurance_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_ligneassurance_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_ligneassurance_index',);
            }
            not_en__RG__admin_parametre_ligneassurance_index:

            // es__RG__admin_parametre_ligneassurance_index
            if ('/es/admin/parametre/ligneassurance' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_ligneassurance_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_ligneassurance_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_ligneassurance_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_ligneassurance_index',);
            }
            not_es__RG__admin_parametre_ligneassurance_index:

        }

        // fr__RG__admin_parametre_ligneassurance_show
        if (0 === strpos($pathinfo, '/admin/parametre/ligneassurance') && preg_match('#^/admin/parametre/ligneassurance/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_ligneassurance_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_ligneassurance_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_ligneassurance_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_ligneassurance_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/ligneassurance') && preg_match('#^/en/admin/parametre/ligneassurance/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_ligneassurance_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_ligneassurance_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_ligneassurance_show:

            // es__RG__admin_parametre_ligneassurance_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/ligneassurance') && preg_match('#^/es/admin/parametre/ligneassurance/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_ligneassurance_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_ligneassurance_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_ligneassurance_show:

        }

        // fr__RG__admin_parametre_ligneassurance_new
        if ('/admin/parametre/ligneassurance/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_ligneassurance_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_ligneassurance_new',);
        }
        not_fr__RG__admin_parametre_ligneassurance_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_ligneassurance_new
            if ('/en/admin/parametre/ligneassurance/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_ligneassurance_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_ligneassurance_new',);
            }
            not_en__RG__admin_parametre_ligneassurance_new:

            // es__RG__admin_parametre_ligneassurance_new
            if ('/es/admin/parametre/ligneassurance/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_ligneassurance_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_ligneassurance_new',);
            }
            not_es__RG__admin_parametre_ligneassurance_new:

        }

        // fr__RG__admin_parametre_ligneassurance_edit
        if (0 === strpos($pathinfo, '/admin/parametre/ligneassurance') && preg_match('#^/admin/parametre/ligneassurance/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_ligneassurance_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_ligneassurance_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_ligneassurance_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_ligneassurance_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/ligneassurance') && preg_match('#^/en/admin/parametre/ligneassurance/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_ligneassurance_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_ligneassurance_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_ligneassurance_edit:

            // es__RG__admin_parametre_ligneassurance_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/ligneassurance') && preg_match('#^/es/admin/parametre/ligneassurance/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_ligneassurance_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_ligneassurance_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_ligneassurance_edit:

        }

        // fr__RG__admin_parametre_ligneassurance_delete
        if (0 === strpos($pathinfo, '/admin/parametre/ligneassurance') && preg_match('#^/admin/parametre/ligneassurance/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_ligneassurance_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_ligneassurance_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_ligneassurance_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_ligneassurance_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/ligneassurance') && preg_match('#^/en/admin/parametre/ligneassurance/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_ligneassurance_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_ligneassurance_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_ligneassurance_delete:

            // es__RG__admin_parametre_ligneassurance_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/ligneassurance') && preg_match('#^/es/admin/parametre/ligneassurance/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_ligneassurance_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_ligneassurance_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneAssuranceController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_ligneassurance_delete:

        }

        // fr__RG__admin_parametre_lignevaccin_index
        if ('/admin/parametre/lignevaccin' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_lignevaccin_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_lignevaccin_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_lignevaccin_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_lignevaccin_index',);
        }
        not_fr__RG__admin_parametre_lignevaccin_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_lignevaccin_index
            if ('/en/admin/parametre/lignevaccin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_lignevaccin_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_lignevaccin_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_lignevaccin_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_lignevaccin_index',);
            }
            not_en__RG__admin_parametre_lignevaccin_index:

            // es__RG__admin_parametre_lignevaccin_index
            if ('/es/admin/parametre/lignevaccin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_lignevaccin_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_lignevaccin_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_lignevaccin_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_lignevaccin_index',);
            }
            not_es__RG__admin_parametre_lignevaccin_index:

        }

        // fr__RG__admin_parametre_lignevaccin_show
        if (0 === strpos($pathinfo, '/admin/parametre/lignevaccin') && preg_match('#^/admin/parametre/lignevaccin/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_lignevaccin_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_lignevaccin_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_lignevaccin_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_lignevaccin_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/lignevaccin') && preg_match('#^/en/admin/parametre/lignevaccin/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_lignevaccin_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_lignevaccin_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_lignevaccin_show:

            // es__RG__admin_parametre_lignevaccin_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/lignevaccin') && preg_match('#^/es/admin/parametre/lignevaccin/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_lignevaccin_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_lignevaccin_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_lignevaccin_show:

        }

        // fr__RG__admin_parametre_lignevaccin_new
        if ('/admin/parametre/lignevaccin/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_lignevaccin_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_lignevaccin_new',);
        }
        not_fr__RG__admin_parametre_lignevaccin_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_lignevaccin_new
            if ('/en/admin/parametre/lignevaccin/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_lignevaccin_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_lignevaccin_new',);
            }
            not_en__RG__admin_parametre_lignevaccin_new:

            // es__RG__admin_parametre_lignevaccin_new
            if ('/es/admin/parametre/lignevaccin/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_lignevaccin_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_lignevaccin_new',);
            }
            not_es__RG__admin_parametre_lignevaccin_new:

        }

        // fr__RG__admin_parametre_lignevaccin_edit
        if (0 === strpos($pathinfo, '/admin/parametre/lignevaccin') && preg_match('#^/admin/parametre/lignevaccin/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_lignevaccin_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_lignevaccin_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_lignevaccin_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_lignevaccin_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/lignevaccin') && preg_match('#^/en/admin/parametre/lignevaccin/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_lignevaccin_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_lignevaccin_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_lignevaccin_edit:

            // es__RG__admin_parametre_lignevaccin_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/lignevaccin') && preg_match('#^/es/admin/parametre/lignevaccin/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_lignevaccin_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_lignevaccin_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_lignevaccin_edit:

        }

        // fr__RG__admin_parametre_lignevaccin_delete
        if (0 === strpos($pathinfo, '/admin/parametre/lignevaccin') && preg_match('#^/admin/parametre/lignevaccin/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_lignevaccin_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_lignevaccin_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_lignevaccin_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_lignevaccin_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/lignevaccin') && preg_match('#^/en/admin/parametre/lignevaccin/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_lignevaccin_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_lignevaccin_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_lignevaccin_delete:

            // es__RG__admin_parametre_lignevaccin_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/lignevaccin') && preg_match('#^/es/admin/parametre/lignevaccin/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_lignevaccin_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_lignevaccin_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\LigneVaccinController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_lignevaccin_delete:

        }

        // fr__RG__admin_config_pass_index
        if ('/admin/config/pass' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_config_pass_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_config_pass_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_pass_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_pass_index',);
        }
        not_fr__RG__admin_config_pass_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_pass_index
            if ('/en/admin/config/pass' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_config_pass_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_config_pass_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_pass_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_pass_index',);
            }
            not_en__RG__admin_config_pass_index:

            // es__RG__admin_config_pass_index
            if ('/es/admin/config/pass' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_config_pass_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_config_pass_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_pass_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_pass_index',);
            }
            not_es__RG__admin_config_pass_index:

        }

        // fr__RG__admin_config_pass_show
        if (0 === strpos($pathinfo, '/admin/config/pass') && preg_match('#^/admin/config/pass/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_config_pass_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_pass_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_pass_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_pass_show
            if (0 === strpos($pathinfo, '/en/admin/config/pass') && preg_match('#^/en/admin/config/pass/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_config_pass_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_pass_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_pass_show:

            // es__RG__admin_config_pass_show
            if (0 === strpos($pathinfo, '/es/admin/config/pass') && preg_match('#^/es/admin/config/pass/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_config_pass_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_pass_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_pass_show:

        }

        // fr__RG__admin_config_pass_generate
        if ('/admin/config/pass/generate' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_pass_generate;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::generateAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_pass_generate',);
        }
        not_fr__RG__admin_config_pass_generate:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_pass_generate
            if ('/en/admin/config/pass/generate' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_pass_generate;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::generateAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_pass_generate',);
            }
            not_en__RG__admin_config_pass_generate:

            // es__RG__admin_config_pass_generate
            if ('/es/admin/config/pass/generate' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_pass_generate;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::generateAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_pass_generate',);
            }
            not_es__RG__admin_config_pass_generate:

        }

        // fr__RG__admin_config_pass_export
        if ('/admin/config/pass/export' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_pass_export;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::exportAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_pass_export',);
        }
        not_fr__RG__admin_config_pass_export:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_pass_export
            if ('/en/admin/config/pass/export' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_pass_export;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::exportAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_pass_export',);
            }
            not_en__RG__admin_config_pass_export:

            // es__RG__admin_config_pass_export
            if ('/es/admin/config/pass/export' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_pass_export;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::exportAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_pass_export',);
            }
            not_es__RG__admin_config_pass_export:

        }

        // fr__RG__admin_config_pass_import
        if ('/admin/config/pass/import' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_pass_import;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::importAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_pass_import',);
        }
        not_fr__RG__admin_config_pass_import:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_pass_import
            if ('/en/admin/config/pass/import' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_pass_import;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::importAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_pass_import',);
            }
            not_en__RG__admin_config_pass_import:

            // es__RG__admin_config_pass_import
            if ('/es/admin/config/pass/import' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_pass_import;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::importAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_pass_import',);
            }
            not_es__RG__admin_config_pass_import:

        }

        // fr__RG__admin_config_pass_new
        if ('/admin/config/pass/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_pass_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_pass_new',);
        }
        not_fr__RG__admin_config_pass_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_pass_new
            if ('/en/admin/config/pass/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_pass_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_pass_new',);
            }
            not_en__RG__admin_config_pass_new:

            // es__RG__admin_config_pass_new
            if ('/es/admin/config/pass/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_pass_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_pass_new',);
            }
            not_es__RG__admin_config_pass_new:

        }

        // fr__RG__admin_config_pass_edit
        if (0 === strpos($pathinfo, '/admin/config/pass') && preg_match('#^/admin/config/pass/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_config_pass_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_pass_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_pass_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_pass_edit
            if (0 === strpos($pathinfo, '/en/admin/config/pass') && preg_match('#^/en/admin/config/pass/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_config_pass_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_pass_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_pass_edit:

            // es__RG__admin_config_pass_edit
            if (0 === strpos($pathinfo, '/es/admin/config/pass') && preg_match('#^/es/admin/config/pass/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_config_pass_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_pass_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_pass_edit:

        }

        // fr__RG__admin_config_pass_delete
        if (0 === strpos($pathinfo, '/admin/config/pass') && preg_match('#^/admin/config/pass/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'DELETE', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'DELETE', 'HEAD'));
                goto not_fr__RG__admin_config_pass_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_pass_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_config_pass_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_pass_delete
            if (0 === strpos($pathinfo, '/en/admin/config/pass') && preg_match('#^/en/admin/config/pass/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'DELETE', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'DELETE', 'HEAD'));
                    goto not_en__RG__admin_config_pass_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_pass_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_config_pass_delete:

            // es__RG__admin_config_pass_delete
            if (0 === strpos($pathinfo, '/es/admin/config/pass') && preg_match('#^/es/admin/config/pass/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'DELETE', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'DELETE', 'HEAD'));
                    goto not_es__RG__admin_config_pass_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_pass_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_config_pass_delete:

        }

        // fr__RG__admin_config_pass_delete_modal
        if (0 === strpos($pathinfo, '/admin/config/pass') && preg_match('#^/admin/config/pass/(?P<id>[^/]++)/delete\\-modal$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_config_pass_delete_modal')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::deleteModalAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_pass_delete_modal
            if (0 === strpos($pathinfo, '/en/admin/config/pass') && preg_match('#^/en/admin/config/pass/(?P<id>[^/]++)/delete\\-modal$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_config_pass_delete_modal')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::deleteModalAction',  '_locale' => 'en',));
            }

            // es__RG__admin_config_pass_delete_modal
            if (0 === strpos($pathinfo, '/es/admin/config/pass') && preg_match('#^/es/admin/config/pass/(?P<id>[^/]++)/delete\\-modal$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_config_pass_delete_modal')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::deleteModalAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_config_pass_grid
        if ('/admin/config/pass/grid' === $pathinfo) {
            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::gridAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_config_pass_grid',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_config_pass_grid
            if ('/en/admin/config/pass/grid' === $pathinfo) {
                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::gridAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_config_pass_grid',);
            }

            // es__RG__admin_config_pass_grid
            if ('/es/admin/config/pass/grid' === $pathinfo) {
                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\PassController::gridAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_config_pass_grid',);
            }

        }

        // fr__RG__admin_parametre_analyse_index
        if ('/admin/parametre/analyse' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_analyse_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_analyse_index');
            }

            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_analyse_index;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_analyse_index',);
        }
        not_fr__RG__admin_parametre_analyse_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_analyse_index
            if ('/en/admin/parametre/analyse' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_analyse_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_analyse_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_analyse_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_analyse_index',);
            }
            not_en__RG__admin_parametre_analyse_index:

            // es__RG__admin_parametre_analyse_index
            if ('/es/admin/parametre/analyse' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_analyse_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_analyse_index');
                }

                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_analyse_index;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_analyse_index',);
            }
            not_es__RG__admin_parametre_analyse_index:

        }

        // fr__RG__admin_parametre_analyse_show
        if (0 === strpos($pathinfo, '/admin/parametre/analyse') && preg_match('#^/admin/parametre/analyse/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__admin_parametre_analyse_show;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_analyse_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::showAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_analyse_show:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_analyse_show
            if (0 === strpos($pathinfo, '/en/admin/parametre/analyse') && preg_match('#^/en/admin/parametre/analyse/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__admin_parametre_analyse_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_analyse_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::showAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_analyse_show:

            // es__RG__admin_parametre_analyse_show
            if (0 === strpos($pathinfo, '/es/admin/parametre/analyse') && preg_match('#^/es/admin/parametre/analyse/(?P<id>[^/]++)/show$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__admin_parametre_analyse_show;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_analyse_show')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::showAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_analyse_show:

        }

        // fr__RG__admin_parametre_analyse_new
        if ('/admin/parametre/analyse/new' === $pathinfo) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_analyse_new;
            }

            return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::newAction',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_analyse_new',);
        }
        not_fr__RG__admin_parametre_analyse_new:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_analyse_new
            if ('/en/admin/parametre/analyse/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_analyse_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::newAction',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_analyse_new',);
            }
            not_en__RG__admin_parametre_analyse_new:

            // es__RG__admin_parametre_analyse_new
            if ('/es/admin/parametre/analyse/new' === $pathinfo) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_analyse_new;
                }

                return array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::newAction',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_analyse_new',);
            }
            not_es__RG__admin_parametre_analyse_new:

        }

        // fr__RG__admin_parametre_analyse_edit
        if (0 === strpos($pathinfo, '/admin/parametre/analyse') && preg_match('#^/admin/parametre/analyse/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                goto not_fr__RG__admin_parametre_analyse_edit;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_analyse_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::editAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_analyse_edit:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_analyse_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/analyse') && preg_match('#^/en/admin/parametre/analyse/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_en__RG__admin_parametre_analyse_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_analyse_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::editAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_analyse_edit:

            // es__RG__admin_parametre_analyse_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/analyse') && preg_match('#^/es/admin/parametre/analyse/(?P<id>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'POST', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'POST', 'HEAD'));
                    goto not_es__RG__admin_parametre_analyse_edit;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_analyse_edit')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::editAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_analyse_edit:

        }

        // fr__RG__admin_parametre_analyse_delete
        if (0 === strpos($pathinfo, '/admin/parametre/analyse') && preg_match('#^/admin/parametre/analyse/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            if ($this->context->getMethod() != 'DELETE') {
                $allow[] = 'DELETE';
                goto not_fr__RG__admin_parametre_analyse_delete;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_analyse_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::deleteAction',  '_locale' => 'fr',));
        }
        not_fr__RG__admin_parametre_analyse_delete:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_analyse_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/analyse') && preg_match('#^/en/admin/parametre/analyse/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_en__RG__admin_parametre_analyse_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_analyse_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::deleteAction',  '_locale' => 'en',));
            }
            not_en__RG__admin_parametre_analyse_delete:

            // es__RG__admin_parametre_analyse_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/analyse') && preg_match('#^/es/admin/parametre/analyse/(?P<id>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                if ($this->context->getMethod() != 'DELETE') {
                    $allow[] = 'DELETE';
                    goto not_es__RG__admin_parametre_analyse_delete;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_analyse_delete')), array (  '_controller' => 'PS\\ParametreBundle\\Controller\\AnalyseController::deleteAction',  '_locale' => 'es',));
            }
            not_es__RG__admin_parametre_analyse_delete:

        }

        // fr__RG__admin_parametre_module_index
        if ('/admin/parametre/module' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__admin_parametre_module_index;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__admin_parametre_module_index');
            }

            return array (  '_controller' => 'ParametreBundle:Module:index',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_module_index',);
        }
        not_fr__RG__admin_parametre_module_index:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_module_index
            if ('/en/admin/parametre/module' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__admin_parametre_module_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__admin_parametre_module_index');
                }

                return array (  '_controller' => 'ParametreBundle:Module:index',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_module_index',);
            }
            not_en__RG__admin_parametre_module_index:

            // es__RG__admin_parametre_module_index
            if ('/es/admin/parametre/module' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__admin_parametre_module_index;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__admin_parametre_module_index');
                }

                return array (  '_controller' => 'ParametreBundle:Module:index',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_module_index',);
            }
            not_es__RG__admin_parametre_module_index:

        }

        // fr__RG__admin_parametre_module_new
        if ('/admin/parametre/module/new' === $pathinfo) {
            return array (  '_controller' => 'ParametreBundle:Module:new',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_module_new',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_module_new
            if ('/en/admin/parametre/module/new' === $pathinfo) {
                return array (  '_controller' => 'ParametreBundle:Module:new',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_module_new',);
            }

            // es__RG__admin_parametre_module_new
            if ('/es/admin/parametre/module/new' === $pathinfo) {
                return array (  '_controller' => 'ParametreBundle:Module:new',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_module_new',);
            }

        }

        // fr__RG__admin_parametre_module_edit
        if (0 === strpos($pathinfo, '/admin/parametre/module') && preg_match('#^/admin/parametre/module/(?P<module>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_module_edit')), array (  '_controller' => 'ParametreBundle:Module:edit',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_module_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/module') && preg_match('#^/en/admin/parametre/module/(?P<module>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_module_edit')), array (  '_controller' => 'ParametreBundle:Module:edit',  '_locale' => 'en',));
            }

            // es__RG__admin_parametre_module_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/module') && preg_match('#^/es/admin/parametre/module/(?P<module>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_module_edit')), array (  '_controller' => 'ParametreBundle:Module:edit',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_parametre_module_delete
        if (0 === strpos($pathinfo, '/admin/parametre/module') && preg_match('#^/admin/parametre/module/(?P<module>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_module_delete')), array (  '_controller' => 'ParametreBundle:Module:delete',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_module_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/module') && preg_match('#^/en/admin/parametre/module/(?P<module>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_module_delete')), array (  '_controller' => 'ParametreBundle:Module:delete',  '_locale' => 'en',));
            }

            // es__RG__admin_parametre_module_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/module') && preg_match('#^/es/admin/parametre/module/(?P<module>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_module_delete')), array (  '_controller' => 'ParametreBundle:Module:delete',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_parametre_permission_index
        if ('/admin/parametre/permission/index' === $pathinfo) {
            return array (  '_controller' => 'ParametreBundle:Permission:index',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_permission_index',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_permission_index
            if ('/en/admin/parametre/permission/index' === $pathinfo) {
                return array (  '_controller' => 'ParametreBundle:Permission:index',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_permission_index',);
            }

            // es__RG__admin_parametre_permission_index
            if ('/es/admin/parametre/permission/index' === $pathinfo) {
                return array (  '_controller' => 'ParametreBundle:Permission:index',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_permission_index',);
            }

        }

        // fr__RG__admin_parametre_permission_new
        if (0 === strpos($pathinfo, '/admin/parametre/permission') && preg_match('#^/admin/parametre/permission/(?P<module>[^/]++)/new$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_permission_new')), array (  '_controller' => 'ParametreBundle:Permission:new',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_permission_new
            if (0 === strpos($pathinfo, '/en/admin/parametre/permission') && preg_match('#^/en/admin/parametre/permission/(?P<module>[^/]++)/new$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_permission_new')), array (  '_controller' => 'ParametreBundle:Permission:new',  '_locale' => 'en',));
            }

            // es__RG__admin_parametre_permission_new
            if (0 === strpos($pathinfo, '/es/admin/parametre/permission') && preg_match('#^/es/admin/parametre/permission/(?P<module>[^/]++)/new$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_permission_new')), array (  '_controller' => 'ParametreBundle:Permission:new',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_parametre_permission_edit
        if (0 === strpos($pathinfo, '/admin/parametre/permission') && preg_match('#^/admin/parametre/permission/(?P<permission>[^/]++)/edit$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_permission_edit')), array (  '_controller' => 'ParametreBundle:Permission:edit',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_permission_edit
            if (0 === strpos($pathinfo, '/en/admin/parametre/permission') && preg_match('#^/en/admin/parametre/permission/(?P<permission>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_permission_edit')), array (  '_controller' => 'ParametreBundle:Permission:edit',  '_locale' => 'en',));
            }

            // es__RG__admin_parametre_permission_edit
            if (0 === strpos($pathinfo, '/es/admin/parametre/permission') && preg_match('#^/es/admin/parametre/permission/(?P<permission>[^/]++)/edit$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_permission_edit')), array (  '_controller' => 'ParametreBundle:Permission:edit',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_parametre_permission_delete
        if (0 === strpos($pathinfo, '/admin/parametre/permission') && preg_match('#^/admin/parametre/permission/(?P<permission>[^/]++)/delete$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__admin_parametre_permission_delete')), array (  '_controller' => 'ParametreBundle:Permission:delete',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_permission_delete
            if (0 === strpos($pathinfo, '/en/admin/parametre/permission') && preg_match('#^/en/admin/parametre/permission/(?P<permission>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__admin_parametre_permission_delete')), array (  '_controller' => 'ParametreBundle:Permission:delete',  '_locale' => 'en',));
            }

            // es__RG__admin_parametre_permission_delete
            if (0 === strpos($pathinfo, '/es/admin/parametre/permission') && preg_match('#^/es/admin/parametre/permission/(?P<permission>[^/]++)/delete$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__admin_parametre_permission_delete')), array (  '_controller' => 'ParametreBundle:Permission:delete',  '_locale' => 'es',));
            }

        }

        // fr__RG__admin_parametre_permission_role
        if ('/admin/parametre/permission/roles' === $pathinfo) {
            return array (  '_controller' => 'ParametreBundle:Permission:roles',  '_locale' => 'fr',  '_route' => 'fr__RG__admin_parametre_permission_role',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__admin_parametre_permission_role
            if ('/en/admin/parametre/permission/roles' === $pathinfo) {
                return array (  '_controller' => 'ParametreBundle:Permission:roles',  '_locale' => 'en',  '_route' => 'en__RG__admin_parametre_permission_role',);
            }

            // es__RG__admin_parametre_permission_role
            if ('/es/admin/parametre/permission/roles' === $pathinfo) {
                return array (  '_controller' => 'ParametreBundle:Permission:roles',  '_locale' => 'es',  '_route' => 'es__RG__admin_parametre_permission_role',);
            }

        }

        // fr__RG__homepage
        if ('' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__homepage;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__homepage');
            }

            return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__homepage',);
        }
        not_fr__RG__homepage:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__homepage
            if ('/en' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__homepage;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__homepage');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__homepage',);
            }
            not_en__RG__homepage:

            // es__RG__homepage
            if ('/es' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__homepage;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__homepage');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__homepage',);
            }
            not_es__RG__homepage:

        }

        // fr__RG__home_paiement
        if ('/test-paiement' === $pathinfo) {
            return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::paiementAction',  '_locale' => 'fr',  '_route' => 'fr__RG__home_paiement',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__home_paiement
            if ('/en/test-paiement' === $pathinfo) {
                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::paiementAction',  '_locale' => 'en',  '_route' => 'en__RG__home_paiement',);
            }

            // es__RG__home_paiement
            if ('/es/test-paiement' === $pathinfo) {
                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::paiementAction',  '_locale' => 'es',  '_route' => 'es__RG__home_paiement',);
            }

        }

        // fr__RG__home_valid_paiement
        if ('/validation-paiement' === $pathinfo) {
            return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::validationPaiementAction',  '_locale' => 'fr',  '_route' => 'fr__RG__home_valid_paiement',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__home_valid_paiement
            if ('/en/validation-paiement' === $pathinfo) {
                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::validationPaiementAction',  '_locale' => 'en',  '_route' => 'en__RG__home_valid_paiement',);
            }

            // es__RG__home_valid_paiement
            if ('/es/validation-paiement' === $pathinfo) {
                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::validationPaiementAction',  '_locale' => 'es',  '_route' => 'es__RG__home_valid_paiement',);
            }

        }

        // fr__RG__home_sensibilisation
        if ('/sensibilisation' === $pathinfo) {
            return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::sensibilisationAction',  '_locale' => 'fr',  '_route' => 'fr__RG__home_sensibilisation',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__home_sensibilisation
            if ('/en/sensibilisation' === $pathinfo) {
                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::sensibilisationAction',  '_locale' => 'en',  '_route' => 'en__RG__home_sensibilisation',);
            }

            // es__RG__home_sensibilisation
            if ('/es/sensibilisation' === $pathinfo) {
                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::sensibilisationAction',  '_locale' => 'es',  '_route' => 'es__RG__home_sensibilisation',);
            }

        }

        // fr__RG__home_demo
        if ('/demo' === $pathinfo) {
            return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::demoAction',  '_locale' => 'fr',  '_route' => 'fr__RG__home_demo',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__home_demo
            if ('/en/demo' === $pathinfo) {
                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::demoAction',  '_locale' => 'en',  '_route' => 'en__RG__home_demo',);
            }

            // es__RG__home_demo
            if ('/es/demo' === $pathinfo) {
                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::demoAction',  '_locale' => 'es',  '_route' => 'es__RG__home_demo',);
            }

        }

        // fr__RG__site_apropos
        if ('/apropos' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__site_apropos;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__site_apropos');
            }

            return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::aproposAction',  '_locale' => 'fr',  '_route' => 'fr__RG__site_apropos',);
        }
        not_fr__RG__site_apropos:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__site_apropos
            if ('/en/apropos' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__site_apropos;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__site_apropos');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::aproposAction',  '_locale' => 'en',  '_route' => 'en__RG__site_apropos',);
            }
            not_en__RG__site_apropos:

            // es__RG__site_apropos
            if ('/es/apropos' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__site_apropos;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__site_apropos');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::aproposAction',  '_locale' => 'es',  '_route' => 'es__RG__site_apropos',);
            }
            not_es__RG__site_apropos:

        }

        // fr__RG__site_distrib
        if ('/reseaux-distribution' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__site_distrib;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__site_distrib');
            }

            return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::distributionAction',  '_locale' => 'fr',  '_route' => 'fr__RG__site_distrib',);
        }
        not_fr__RG__site_distrib:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__site_distrib
            if ('/en/reseaux-distribution' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__site_distrib;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__site_distrib');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::distributionAction',  '_locale' => 'en',  '_route' => 'en__RG__site_distrib',);
            }
            not_en__RG__site_distrib:

            // es__RG__site_distrib
            if ('/es/reseaux-distribution' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__site_distrib;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__site_distrib');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::distributionAction',  '_locale' => 'es',  '_route' => 'es__RG__site_distrib',);
            }
            not_es__RG__site_distrib:

        }

        // fr__RG__site_franchise
        if ('/devenir-franchise' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__site_franchise;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__site_franchise');
            }

            return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::franchiseAction',  '_locale' => 'fr',  '_route' => 'fr__RG__site_franchise',);
        }
        not_fr__RG__site_franchise:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__site_franchise
            if ('/en/devenir-franchise' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__site_franchise;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__site_franchise');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::franchiseAction',  '_locale' => 'en',  '_route' => 'en__RG__site_franchise',);
            }
            not_en__RG__site_franchise:

            // es__RG__site_franchise
            if ('/es/devenir-franchise' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__site_franchise;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__site_franchise');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::franchiseAction',  '_locale' => 'es',  '_route' => 'es__RG__site_franchise',);
            }
            not_es__RG__site_franchise:

        }

        // fr__RG__site_contact
        if ('/contact' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__site_contact;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__site_contact');
            }

            return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::contactAction',  '_locale' => 'fr',  '_route' => 'fr__RG__site_contact',);
        }
        not_fr__RG__site_contact:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__site_contact
            if ('/en/contact' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__site_contact;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__site_contact');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::contactAction',  '_locale' => 'en',  '_route' => 'en__RG__site_contact',);
            }
            not_en__RG__site_contact:

            // es__RG__site_contact
            if ('/es/contact' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__site_contact;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__site_contact');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::contactAction',  '_locale' => 'es',  '_route' => 'es__RG__site_contact',);
            }
            not_es__RG__site_contact:

        }

        // fr__RG__patient_print
        if (preg_match('#^/(?P<id>[^/]++)/print$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__patient_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::printAction',  '_locale' => 'fr',));
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__patient_print
            if (0 === strpos($pathinfo, '/en') && preg_match('#^/en/(?P<id>[^/]++)/print$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__patient_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::printAction',  '_locale' => 'en',));
            }

            // es__RG__patient_print
            if (0 === strpos($pathinfo, '/es') && preg_match('#^/es/(?P<id>[^/]++)/print$#sD', $pathinfo, $matches)) {
                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__patient_print')), array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::printAction',  '_locale' => 'es',));
            }

        }

        // fr__RG__patient_profil
        if ('/profil' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__patient_profil;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__patient_profil');
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::profilAction',  '_locale' => 'fr',  '_route' => 'fr__RG__patient_profil',);
        }
        not_fr__RG__patient_profil:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__patient_profil
            if ('/en/profil' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__patient_profil;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__patient_profil');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::profilAction',  '_locale' => 'en',  '_route' => 'en__RG__patient_profil',);
            }
            not_en__RG__patient_profil:

            // es__RG__patient_profil
            if ('/es/profil' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__patient_profil;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__patient_profil');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::profilAction',  '_locale' => 'es',  '_route' => 'es__RG__patient_profil',);
            }
            not_es__RG__patient_profil:

        }

        // fr__RG__patient_scanne
        if ('/scanne' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__patient_scanne;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__patient_scanne');
            }

            return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::scanneAction',  '_locale' => 'fr',  '_route' => 'fr__RG__patient_scanne',);
        }
        not_fr__RG__patient_scanne:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__patient_scanne
            if ('/en/scanne' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__patient_scanne;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__patient_scanne');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::scanneAction',  '_locale' => 'en',  '_route' => 'en__RG__patient_scanne',);
            }
            not_en__RG__patient_scanne:

            // es__RG__patient_scanne
            if ('/es/scanne' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__patient_scanne;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__patient_scanne');
                }

                return array (  '_controller' => 'PS\\GestionBundle\\Controller\\PatientController::scanneAction',  '_locale' => 'es',  '_route' => 'es__RG__patient_scanne',);
            }
            not_es__RG__patient_scanne:

        }

        // fr__RG__site_about
        if ('/about' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__site_about;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__site_about');
            }

            return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::aboutAction',  '_locale' => 'fr',  '_route' => 'fr__RG__site_about',);
        }
        not_fr__RG__site_about:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__site_about
            if ('/en/about' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__site_about;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__site_about');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::aboutAction',  '_locale' => 'en',  '_route' => 'en__RG__site_about',);
            }
            not_en__RG__site_about:

            // es__RG__site_about
            if ('/es/about' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__site_about;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__site_about');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::aboutAction',  '_locale' => 'es',  '_route' => 'es__RG__site_about',);
            }
            not_es__RG__site_about:

        }

        // fr__RG__site_faq
        if ('/faq' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__site_faq;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__site_faq');
            }

            return array (  '_controller' => 'PS\\SiteBundle\\Controller\\FaqUserController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__site_faq',);
        }
        not_fr__RG__site_faq:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__site_faq
            if ('/en/faq' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__site_faq;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__site_faq');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\FaqUserController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__site_faq',);
            }
            not_en__RG__site_faq:

            // es__RG__site_faq
            if ('/es/faq' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__site_faq;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__site_faq');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\FaqUserController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__site_faq',);
            }
            not_es__RG__site_faq:

        }

        // fr__RG__login_cnrao
        if ('/auth/cnrao/admin' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__login_cnrao;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__login_cnrao');
            }

            return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::loginCnraoAction',  '_locale' => 'fr',  '_route' => 'fr__RG__login_cnrao',);
        }
        not_fr__RG__login_cnrao:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__login_cnrao
            if ('/en/auth/cnrao/admin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__login_cnrao;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__login_cnrao');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::loginCnraoAction',  '_locale' => 'en',  '_route' => 'en__RG__login_cnrao',);
            }
            not_en__RG__login_cnrao:

            // es__RG__login_cnrao
            if ('/es/auth/cnrao/admin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__login_cnrao;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__login_cnrao');
                }

                return array (  '_controller' => 'PS\\SiteBundle\\Controller\\DefaultController::loginCnraoAction',  '_locale' => 'es',  '_route' => 'es__RG__login_cnrao',);
            }
            not_es__RG__login_cnrao:

        }

        // fr__RG__avanzu_admin_home
        if ('/demo-admin' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_home;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_home');
            }

            return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__avanzu_admin_home',);
        }
        not_fr__RG__avanzu_admin_home:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_home
            if ('/en/demo-admin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_home;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_home');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__avanzu_admin_home',);
            }
            not_en__RG__avanzu_admin_home:

            // es__RG__avanzu_admin_home
            if ('/es/demo-admin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_home;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_home');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__avanzu_admin_home',);
            }
            not_es__RG__avanzu_admin_home:

        }

        // fr__RG__avanzu_admin_profile
        if (0 === strpos($pathinfo, '/profile') && preg_match('#^/profile/(?P<userid>[^/]++)/?$#sD', $pathinfo, $matches)) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_profile;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_profile');
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__avanzu_admin_profile')), array (  '_locale' => 'fr',));
        }
        not_fr__RG__avanzu_admin_profile:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_profile
            if (0 === strpos($pathinfo, '/en/profile') && preg_match('#^/en/profile/(?P<userid>[^/]++)/?$#sD', $pathinfo, $matches)) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_profile;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_profile');
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__avanzu_admin_profile')), array (  '_locale' => 'en',));
            }
            not_en__RG__avanzu_admin_profile:

            // es__RG__avanzu_admin_profile
            if (0 === strpos($pathinfo, '/es/profile') && preg_match('#^/es/profile/(?P<userid>[^/]++)/?$#sD', $pathinfo, $matches)) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_profile;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_profile');
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__avanzu_admin_profile')), array (  '_locale' => 'es',));
            }
            not_es__RG__avanzu_admin_profile:

        }

        // fr__RG__avanzu_admin_logout
        if ('/logout' === $pathinfo) {
            return array (  '_locale' => 'fr',  '_route' => 'fr__RG__avanzu_admin_logout',);
        }

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_logout
            if ('/en/logout' === $pathinfo) {
                return array (  '_locale' => 'en',  '_route' => 'en__RG__avanzu_admin_logout',);
            }

            // es__RG__avanzu_admin_logout
            if ('/es/logout' === $pathinfo) {
                return array (  '_locale' => 'es',  '_route' => 'es__RG__avanzu_admin_logout',);
            }

        }

        // fr__RG__avanzu_admin_all_tasks
        if ('/tasks' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_all_tasks;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_all_tasks');
            }

            return array (  '_locale' => 'fr',  '_route' => 'fr__RG__avanzu_admin_all_tasks',);
        }
        not_fr__RG__avanzu_admin_all_tasks:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_all_tasks
            if ('/en/tasks' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_all_tasks;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_all_tasks');
                }

                return array (  '_locale' => 'en',  '_route' => 'en__RG__avanzu_admin_all_tasks',);
            }
            not_en__RG__avanzu_admin_all_tasks:

            // es__RG__avanzu_admin_all_tasks
            if ('/es/tasks' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_all_tasks;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_all_tasks');
                }

                return array (  '_locale' => 'es',  '_route' => 'es__RG__avanzu_admin_all_tasks',);
            }
            not_es__RG__avanzu_admin_all_tasks:

        }

        // fr__RG__avanzu_admin_show_task
        if (0 === strpos($pathinfo, '/tasks') && preg_match('#^/tasks/(?P<taskid>[^/]++)/?$#sD', $pathinfo, $matches)) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_show_task;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_show_task');
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__avanzu_admin_show_task')), array (  '_locale' => 'fr',));
        }
        not_fr__RG__avanzu_admin_show_task:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_show_task
            if (0 === strpos($pathinfo, '/en/tasks') && preg_match('#^/en/tasks/(?P<taskid>[^/]++)/?$#sD', $pathinfo, $matches)) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_show_task;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_show_task');
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__avanzu_admin_show_task')), array (  '_locale' => 'en',));
            }
            not_en__RG__avanzu_admin_show_task:

            // es__RG__avanzu_admin_show_task
            if (0 === strpos($pathinfo, '/es/tasks') && preg_match('#^/es/tasks/(?P<taskid>[^/]++)/?$#sD', $pathinfo, $matches)) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_show_task;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_show_task');
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__avanzu_admin_show_task')), array (  '_locale' => 'es',));
            }
            not_es__RG__avanzu_admin_show_task:

        }

        // fr__RG__avanzu_admin_all_notifications
        if ('/notifications' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_all_notifications;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_all_notifications');
            }

            return array (  '_locale' => 'fr',  '_route' => 'fr__RG__avanzu_admin_all_notifications',);
        }
        not_fr__RG__avanzu_admin_all_notifications:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_all_notifications
            if ('/en/notifications' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_all_notifications;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_all_notifications');
                }

                return array (  '_locale' => 'en',  '_route' => 'en__RG__avanzu_admin_all_notifications',);
            }
            not_en__RG__avanzu_admin_all_notifications:

            // es__RG__avanzu_admin_all_notifications
            if ('/es/notifications' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_all_notifications;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_all_notifications');
                }

                return array (  '_locale' => 'es',  '_route' => 'es__RG__avanzu_admin_all_notifications',);
            }
            not_es__RG__avanzu_admin_all_notifications:

        }

        // fr__RG__avanzu_admin_show_notification
        if (0 === strpos($pathinfo, '/notifications') && preg_match('#^/notifications/(?P<notifyid>[^/]++)/?$#sD', $pathinfo, $matches)) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_show_notification;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_show_notification');
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__avanzu_admin_show_notification')), array (  '_locale' => 'fr',));
        }
        not_fr__RG__avanzu_admin_show_notification:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_show_notification
            if (0 === strpos($pathinfo, '/en/notifications') && preg_match('#^/en/notifications/(?P<notifyid>[^/]++)/?$#sD', $pathinfo, $matches)) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_show_notification;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_show_notification');
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__avanzu_admin_show_notification')), array (  '_locale' => 'en',));
            }
            not_en__RG__avanzu_admin_show_notification:

            // es__RG__avanzu_admin_show_notification
            if (0 === strpos($pathinfo, '/es/notifications') && preg_match('#^/es/notifications/(?P<notifyid>[^/]++)/?$#sD', $pathinfo, $matches)) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_show_notification;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_show_notification');
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__avanzu_admin_show_notification')), array (  '_locale' => 'es',));
            }
            not_es__RG__avanzu_admin_show_notification:

        }

        // fr__RG__avanzu_admin_all_messages
        if ('/messages' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_all_messages;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_all_messages');
            }

            return array (  '_locale' => 'fr',  '_route' => 'fr__RG__avanzu_admin_all_messages',);
        }
        not_fr__RG__avanzu_admin_all_messages:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_all_messages
            if ('/en/messages' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_all_messages;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_all_messages');
                }

                return array (  '_locale' => 'en',  '_route' => 'en__RG__avanzu_admin_all_messages',);
            }
            not_en__RG__avanzu_admin_all_messages:

            // es__RG__avanzu_admin_all_messages
            if ('/es/messages' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_all_messages;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_all_messages');
                }

                return array (  '_locale' => 'es',  '_route' => 'es__RG__avanzu_admin_all_messages',);
            }
            not_es__RG__avanzu_admin_all_messages:

        }

        // fr__RG__avanzu_admin_show_message
        if (0 === strpos($pathinfo, '/messages') && preg_match('#^/messages/(?P<messageid>[^/]++)/?$#sD', $pathinfo, $matches)) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_show_message;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_show_message');
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__avanzu_admin_show_message')), array (  '_locale' => 'fr',));
        }
        not_fr__RG__avanzu_admin_show_message:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_show_message
            if (0 === strpos($pathinfo, '/en/messages') && preg_match('#^/en/messages/(?P<messageid>[^/]++)/?$#sD', $pathinfo, $matches)) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_show_message;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_show_message');
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__avanzu_admin_show_message')), array (  '_locale' => 'en',));
            }
            not_en__RG__avanzu_admin_show_message:

            // es__RG__avanzu_admin_show_message
            if (0 === strpos($pathinfo, '/es/messages') && preg_match('#^/es/messages/(?P<messageid>[^/]++)/?$#sD', $pathinfo, $matches)) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_show_message;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_show_message');
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__avanzu_admin_show_message')), array (  '_locale' => 'es',));
            }
            not_es__RG__avanzu_admin_show_message:

        }

        // fr__RG__avanzu_admin_demo
        if ('/demo-admin' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_demo;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_demo');
            }

            return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'fr',  '_route' => 'fr__RG__avanzu_admin_demo',);
        }
        not_fr__RG__avanzu_admin_demo:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_demo
            if ('/en/demo-admin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_demo;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_demo');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'en',  '_route' => 'en__RG__avanzu_admin_demo',);
            }
            not_en__RG__avanzu_admin_demo:

            // es__RG__avanzu_admin_demo
            if ('/es/demo-admin' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_demo;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_demo');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::indexAction',  '_locale' => 'es',  '_route' => 'es__RG__avanzu_admin_demo',);
            }
            not_es__RG__avanzu_admin_demo:

        }

        // fr__RG__avanzu_admin_form_demo
        if ('/demo-admin/form-demo' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_form_demo;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_form_demo');
            }

            return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::formAction',  '_locale' => 'fr',  '_route' => 'fr__RG__avanzu_admin_form_demo',);
        }
        not_fr__RG__avanzu_admin_form_demo:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_form_demo
            if ('/en/demo-admin/form-demo' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_form_demo;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_form_demo');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::formAction',  '_locale' => 'en',  '_route' => 'en__RG__avanzu_admin_form_demo',);
            }
            not_en__RG__avanzu_admin_form_demo:

            // es__RG__avanzu_admin_form_demo
            if ('/es/demo-admin/form-demo' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_form_demo;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_form_demo');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::formAction',  '_locale' => 'es',  '_route' => 'es__RG__avanzu_admin_form_demo',);
            }
            not_es__RG__avanzu_admin_form_demo:

        }

        // fr__RG__avanzu_admin_login_demo
        if ('/demo-admin/login' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_login_demo;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_login_demo');
            }

            return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::loginAction',  '_locale' => 'fr',  '_route' => 'fr__RG__avanzu_admin_login_demo',);
        }
        not_fr__RG__avanzu_admin_login_demo:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_login_demo
            if ('/en/demo-admin/login' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_login_demo;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_login_demo');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::loginAction',  '_locale' => 'en',  '_route' => 'en__RG__avanzu_admin_login_demo',);
            }
            not_en__RG__avanzu_admin_login_demo:

            // es__RG__avanzu_admin_login_demo
            if ('/es/demo-admin/login' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_login_demo;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_login_demo');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::loginAction',  '_locale' => 'es',  '_route' => 'es__RG__avanzu_admin_login_demo',);
            }
            not_es__RG__avanzu_admin_login_demo:

        }

        // fr__RG__avanzu_admin_dash_demo
        if ('/demo-admin/dashboard' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_dash_demo;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_dash_demo');
            }

            return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::dashboardAction',  '_locale' => 'fr',  '_route' => 'fr__RG__avanzu_admin_dash_demo',);
        }
        not_fr__RG__avanzu_admin_dash_demo:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_dash_demo
            if ('/en/demo-admin/dashboard' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_dash_demo;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_dash_demo');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::dashboardAction',  '_locale' => 'en',  '_route' => 'en__RG__avanzu_admin_dash_demo',);
            }
            not_en__RG__avanzu_admin_dash_demo:

            // es__RG__avanzu_admin_dash_demo
            if ('/es/demo-admin/dashboard' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_dash_demo;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_dash_demo');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::dashboardAction',  '_locale' => 'es',  '_route' => 'es__RG__avanzu_admin_dash_demo',);
            }
            not_es__RG__avanzu_admin_dash_demo:

        }

        // fr__RG__avanzu_admin_ui_gen_demo
        if ('/demo-admin/ui-elements/general' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_ui_gen_demo;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_ui_gen_demo');
            }

            return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::uiGeneralAction',  '_locale' => 'fr',  '_route' => 'fr__RG__avanzu_admin_ui_gen_demo',);
        }
        not_fr__RG__avanzu_admin_ui_gen_demo:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_ui_gen_demo
            if ('/en/demo-admin/ui-elements/general' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_ui_gen_demo;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_ui_gen_demo');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::uiGeneralAction',  '_locale' => 'en',  '_route' => 'en__RG__avanzu_admin_ui_gen_demo',);
            }
            not_en__RG__avanzu_admin_ui_gen_demo:

            // es__RG__avanzu_admin_ui_gen_demo
            if ('/es/demo-admin/ui-elements/general' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_ui_gen_demo;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_ui_gen_demo');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::uiGeneralAction',  '_locale' => 'es',  '_route' => 'es__RG__avanzu_admin_ui_gen_demo',);
            }
            not_es__RG__avanzu_admin_ui_gen_demo:

        }

        // fr__RG__avanzu_admin_ui_icon_demo
        if ('/demo-admin/ui-elements/icons' === rtrim($pathinfo, '/')) {
            if ('/' === substr($pathinfo, -1)) {
                // no-op
            } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                goto not_fr__RG__avanzu_admin_ui_icon_demo;
            } else {
                return $this->redirect($rawPathinfo.'/', 'fr__RG__avanzu_admin_ui_icon_demo');
            }

            return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::uiIconsAction',  '_locale' => 'fr',  '_route' => 'fr__RG__avanzu_admin_ui_icon_demo',);
        }
        not_fr__RG__avanzu_admin_ui_icon_demo:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__avanzu_admin_ui_icon_demo
            if ('/en/demo-admin/ui-elements/icons' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_en__RG__avanzu_admin_ui_icon_demo;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'en__RG__avanzu_admin_ui_icon_demo');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::uiIconsAction',  '_locale' => 'en',  '_route' => 'en__RG__avanzu_admin_ui_icon_demo',);
            }
            not_en__RG__avanzu_admin_ui_icon_demo:

            // es__RG__avanzu_admin_ui_icon_demo
            if ('/es/demo-admin/ui-elements/icons' === rtrim($pathinfo, '/')) {
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif (!in_array($this->context->getMethod(), array('HEAD', 'GET'))) {
                    goto not_es__RG__avanzu_admin_ui_icon_demo;
                } else {
                    return $this->redirect($rawPathinfo.'/', 'es__RG__avanzu_admin_ui_icon_demo');
                }

                return array (  '_controller' => 'Avanzu\\AdminThemeBundle\\Controller\\DefaultController::uiIconsAction',  '_locale' => 'es',  '_route' => 'es__RG__avanzu_admin_ui_icon_demo',);
            }
            not_es__RG__avanzu_admin_ui_icon_demo:

        }

        // fr__RG__fos_js_routing_js
        if (0 === strpos($pathinfo, '/js/routing') && preg_match('#^/js/routing(?:\\.(?P<_format>js|json))?$#sD', $pathinfo, $matches)) {
            if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                $allow = array_merge($allow, array('GET', 'HEAD'));
                goto not_fr__RG__fos_js_routing_js;
            }

            return $this->mergeDefaults(array_replace($matches, array('_route' => 'fr__RG__fos_js_routing_js')), array (  '_controller' => 'fos_js_routing.controller:indexAction',  '_format' => 'js',  '_locale' => 'fr',));
        }
        not_fr__RG__fos_js_routing_js:

        if (0 === strpos($pathinfo, '/e')) {
            // en__RG__fos_js_routing_js
            if (0 === strpos($pathinfo, '/en/js/routing') && preg_match('#^/en/js/routing(?:\\.(?P<_format>js|json))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_en__RG__fos_js_routing_js;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'en__RG__fos_js_routing_js')), array (  '_controller' => 'fos_js_routing.controller:indexAction',  '_format' => 'js',  '_locale' => 'en',));
            }
            not_en__RG__fos_js_routing_js:

            // es__RG__fos_js_routing_js
            if (0 === strpos($pathinfo, '/es/js/routing') && preg_match('#^/es/js/routing(?:\\.(?P<_format>js|json))?$#sD', $pathinfo, $matches)) {
                if (!in_array($this->context->getMethod(), array('GET', 'HEAD'))) {
                    $allow = array_merge($allow, array('GET', 'HEAD'));
                    goto not_es__RG__fos_js_routing_js;
                }

                return $this->mergeDefaults(array_replace($matches, array('_route' => 'es__RG__fos_js_routing_js')), array (  '_controller' => 'fos_js_routing.controller:indexAction',  '_format' => 'js',  '_locale' => 'es',));
            }
            not_es__RG__fos_js_routing_js:

        }

        throw 0 < count($allow) ? new MethodNotAllowedException(array_unique($allow)) : new ResourceNotFoundException();
    }
}
